{"version":3,"file":"9966.ab709350fb3508723f31.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/constants/data.ts","webpack://ESMira/./src/frontend/ts/pages/chartEdit.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/DragContainer.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["export const DATA_MAIN_KEYS = [\n\t\"userId\",\n\t\"uploaded\",\n\t\"appType\",\n\t\"appVersion\",\n\t\"studyId\",\n\t\"studyVersion\",\n\t\"questionnaireName\",\n\t\"eventType\",\n\t\"timezone\",\n\t\"responseTime\",\n\t\"formDuration\"\n]","import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {ObservableLangChooser} from \"../widgets/ObservableLangChooser\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {RichText} from \"../widgets/RichText\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {ChartData} from \"../data/study/ChartData\";\nimport {\n\tCONDITION_TYPE_ALL, CONDITION_TYPE_AND, CONDITION_TYPE_OR,\n\tSTATISTICS_CHARTTYPES_PIE,\n\tSTATISTICS_CHARTTYPES_SCATTER,\n\tSTATISTICS_DATATYPES_DAILY,\n\tSTATISTICS_DATATYPES_FREQ_DISTR, STATISTICS_DATATYPES_SUM, STATISTICS_DATATYPES_XY\n} from \"../constants/statistics\";\nimport {DATA_MAIN_KEYS} from \"../constants/data\";\nimport {ObservableStructureDataType} from \"../observable/ObservableStructure\";\nimport {AxisContainer} from \"../data/study/AxisContainer\";\nimport {DragContainer} from \"../widgets/DragContainer\";\nimport {Study} from \"../data/study/Study\";\nimport {StudyDataValues} from \"../helpers/StudyDataValues\";\nimport {AxisData} from \"../data/study/AxisData\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DropdownMenu} from \"../widgets/DropdownMenu\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {Section} from \"../site/Section\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\nimport {BtnAdd, BtnCopy, BtnCustom, BtnRemove, BtnTrash} from \"../widgets/BtnWidgets\";\nimport statisticsSvg from \"../../imgs/icons/statistics.svg?raw\"\n\nexport abstract class ChartEditSectionContent extends SectionContent{\n\tabstract getChart(): ChartData\n}\n\nexport class Content extends ChartEditSectionContent {\n\tprivate calcChart: ChartData | null = null\n\tprivate readonly isCalc: boolean\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\t\n\tconstructor(section: Section) {\n\t\tsuper(section)\n\t\tthis.isCalc = this.section.sectionValue == \"calc\"\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"edit_chart\")\n\t}\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn <a href={this.getUrl(\"chartPreview\")}>\n\t\t\t{BtnCustom(m.trust(statisticsSvg), undefined, Lang.get(this.section.sectionValue == \"calc\" ? \"calculate\" : \"preview\"))}\n\t\t</a>\n\t}\n\t\n\tpublic getChart(): ChartData {\n\t\tconst study = this.getStudyOrThrow()\n\t\tif(this.isCalc) {\n\t\t\tif(!this.calcChart)\n\t\t\t\tthis.calcChart = new ChartData({}, null, \"chartCalc\")\n\t\t\treturn this.calcChart\n\t\t}\n\t\tswitch(this.section.sectionValue) {\n\t\t\tcase \"public\":\n\t\t\t\treturn study.publicStatistics.charts.get()[this.getStaticInt(\"chartI\") ?? 0]\n\t\t\tcase \"personal\":\n\t\t\tdefault:\n\t\t\t\treturn study.personalStatistics.charts.get()[this.getStaticInt(\"chartI\") ?? 0]\n\t\t}\n\t}\n\t\n\tprivate copyAxisContainer(list: ArrayInterface<ObservableStructureDataType, AxisContainer>, axis: AxisContainer, index: number): void {\n\t\tlist.addCopy(axis, index)\n\t}\n\tprivate removeAxisContainer(list: ArrayInterface<ObservableStructureDataType, AxisContainer>, index: number): void {\n\t\tlist.remove(index)\n\t}\n\tprivate removeCondition(list: AxisData, index: number): void {\n\t\tlist.conditions.remove(index)\n\t}\n\t\n\tprivate addCondition(axis: AxisData, e: InputEvent): void {\n\t\tconst element = e.target as HTMLSelectElement\n\t\t\n\t\taxis.conditions.push({key: element.value})\n\t\tif(axis.conditionType.get() == CONDITION_TYPE_ALL)\n\t\t\taxis.conditionType.set(CONDITION_TYPE_AND)\n\t\t\n\t\telement.selectedIndex = 0\n\t}\n\tprivate addVariable(list: ArrayInterface<ObservableStructureDataType, AxisContainer>, study: Study): void {\n\t\tconst studyVariables = StudyDataValues.getStudyVariables(study)\n\t\tconst variableName = studyVariables.length ? studyVariables[0] : \"\"\n\t\t\n\t\tlist.push({\n\t\t\txAxis: {\n\t\t\t\tvariableName: variableName\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\tvariableName: variableName\n\t\t\t}\n\t\t})\n\t}\n\t\n\tprivate getConditionVariables(study: Study, axisValue: string): string[] {\n\t\tif(axisValue == \"\") {\n\t\t\tconst questionnaire = study.questionnaires.get()[0]\n\t\t\tconst variables = StudyDataValues.getQuestionnaireVariables(questionnaire)\n\t\t\treturn variables.concat(DATA_MAIN_KEYS)\n\t\t}\n\t\telse {\n\t\t\tconst questionnaires = study.questionnaires.get()\n\t\t\tfor(let i = questionnaires.length-1; i >= 0; --i) {\n\t\t\t\tconst variables = StudyDataValues.getQuestionnaireVariables(questionnaires[i])\n\t\t\t\tif(variables.indexOf(axisValue) != -1)\n\t\t\t\t\treturn variables.concat(DATA_MAIN_KEYS)\n\t\t\t}\n\t\t\treturn DATA_MAIN_KEYS\n\t\t}\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tconst chart = this.getChart()\n\t\treturn <div>\n\t\t\t{this.section.sectionValue != \"calc\" &&\n\t\t\t\t<div>\n\t\t\t\t\t{TitleRow(Lang.getWithColon(\"description\"))}\n\t\t\t\t\t{DashRow(\n\t\t\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label class=\"noTitle noDesc\">\n\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(chart.hideUntilCompletion)}/>\n\t\t\t\t\t\t\t\t\t\t<span class=\"smallText\">{Lang.get(\"hideUntilCompletion\")}</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"title\")}</small>\n\t\t\t\t\t\t\t\t\t\t<input class=\"big\" type=\"text\" {... BindObservable(chart.title)}/>\n\t\t\t\t\t\t\t\t\t\t{!this.isCalc && ObservableLangChooser(study)}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div class=\"fakeLabel line\">\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"description\")}</small>\n\t\t\t\t\t\t\t\t\t\t{RichText(chart.chartDescription)}\n\t\t\t\t\t\t\t\t\t\t{!this.isCalc && ObservableLangChooser(study)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tchart.chartType.get() != STATISTICS_CHARTTYPES_PIE && DashElement(null, {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label class=\"horizontalPadding\">\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"xAxis_label\")}</small>\n\t\t\t\t\t\t\t\t\t\t<input class=\"big\" type=\"text\" {... BindObservable(chart.xAxisLabel)}/>\n\t\t\t\t\t\t\t\t\t\t{!this.isCalc && ObservableLangChooser(study)}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}),\n\t\t\t\t\t\tchart.chartType.get() != STATISTICS_CHARTTYPES_PIE && DashElement(null, {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<label class=\"horizontalPadding\">\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"yAxis_label\")}</small>\n\t\t\t\t\t\t\t\t\t\t<input class=\"big\" type=\"text\" {... BindObservable(chart.yAxisLabel)}/>\n\t\t\t\t\t\t\t\t\t\t{!this.isCalc && ObservableLangChooser(study)}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"settings\"))}\n\t\t\t\n\t\t\t{DashRow(\n\t\t\t\t\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"statisticsChartType\")}</small>\n\t\t\t\t\t\t\t\t<select {... BindObservable(chart.chartType)}>\n\t\t\t\t\t\t\t\t\t<option value=\"0\">{Lang.get(\"statisticsChart_line\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">{Lang.get(\"statisticsChart_line_filled\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">{Lang.get(\"statisticsChart_bars\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"3\">{Lang.get(\"statisticsChart_scatter\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"4\">{Lang.get(\"statisticsChart_pie\")}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"statisticsDataType\")}</small>\n\t\t\t\t\t\t\t\t<select {... BindObservable(chart.dataType)}>\n\t\t\t\t\t\t\t\t\t<option value=\"0\">{Lang.get(\"statisticsDataType_daily\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">{Lang.get(\"statisticsDataType_frequencyDistr\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">{Lang.get(\"statisticsDataType_sum\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"3\">{Lang.get(\"statisticsDataType_xy\")}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\t(chart.dataType.get() == STATISTICS_DATATYPES_DAILY || chart.dataType.get() == STATISTICS_DATATYPES_SUM) && DashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"statisticsValueType\")}</small>\n\t\t\t\t\t\t\t\t<select {... BindObservable(chart.valueType)}>\n\t\t\t\t\t\t\t\t\t<option value=\"0\">{Lang.get(\"statisticsValueType_mean\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">{Lang.get(\"statisticsValueType_sum\")}</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">{Lang.get(\"statisticsValueType_count\")}</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tchart.dataType.get() == STATISTICS_DATATYPES_FREQ_DISTR && DashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"vertical noTitle noDesc nowrap\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(chart.inPercent)}/>\n\t\t\t\t\t\t\t\t<span class=\"smallText\">{Lang.get(\"values_in_percent\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label class=\"vertical noTitle noDesc nowrap\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(chart.xAxisIsNumberRange)}/>\n\t\t\t\t\t\t\t\t<span class=\"smallText\">{Lang.get(\"xAxisIsNumberRange_label\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tchart.chartType.get() == STATISTICS_CHARTTYPES_SCATTER && DashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"noDesc\">\n\t\t\t\t\t\t\t\t<span>{Lang.getWithColon(\"fitToShowLinearProgression_label\")}</span>\n\t\t\t\t\t\t\t\t<input type=\"number\" {... BindObservable(chart.fitToShowLinearProgression)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"chart_max_yValue\")}</small>\n\t\t\t\t\t\t\t\t<input type=\"number\" {... BindObservable(chart.maxYValue)}/>\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"chart_max_yValue_explainZero\")}</small>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tthis.section.sectionValue == \"personal\" && chart.chartType.get() != STATISTICS_CHARTTYPES_PIE && DashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<input class=\"horizontal\" type=\"checkbox\" {... BindObservable(chart.displayPublicVariable)}/>\n\t\t\t\t\t\t\t\t<span class=\"horizontal smallText\">{ Lang.get(\"display_additional_publicVariable\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t)}\n\t\t\t{chart.displayPublicVariable.get() &&\n\t\t\t\t<div>\n\t\t\t\t\t{TitleRow(Lang.getWithColon(\"public_variables\"))}\n\t\t\t\t\t{ this.getVariablesView(study, chart, chart.publicVariables)}\n\t\t\t\t\t{<div class=\"center\">\n\t\t\t\t\t\t{BtnAdd(this.addVariable.bind(this, chart.publicVariables, study), Lang.get('add'))}\n\t\t\t\t\t</div>}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"variables\"))}\n\t\t\t{this.getVariablesView(study, chart, chart.axisContainer)}\n\t\t\t<br/>\n\t\t\t<div class=\"center\">\n\t\t\t\t{BtnAdd(this.addVariable.bind(this, chart.axisContainer, study), Lang.get('add'))}\n\t\t\t</div>\n\t\t</div>\n\t}\n\t\n\tprivate getVariablesView(study: Study, chart: ChartData, list: ArrayInterface<ObservableStructureDataType, AxisContainer>): Vnode<any, any> {\n\t\tconst studyVariables = StudyDataValues.getStudyVariables(study)\n\t\treturn DragContainer((dragTools) =>\n\t\t\tDashRow(\n\t\t\t\t...list.get().map((container, index) =>\n\t\t\t\t\tdragTools.getDragTarget(index, list,\n\t\t\t\t\t\t\n\t\t\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<div class=\"line flexHorizontal\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"flexCenter\">\n\t\t\t\t\t\t\t\t\t\t\t{dragTools.getDragStarter(index, list)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div class=\"flexGrow\">\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"flexHorizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"label\")}</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" {... BindObservable(container.label)}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"color\")}</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"color\" {... BindObservable(container.color)}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"flexGrow\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{BtnCopy(this.copyAxisContainer.bind(this, list, container, index))}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{BtnTrash(this.removeAxisContainer.bind(this, list, index))}\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t{chart.dataType.get() == STATISTICS_DATATYPES_XY &&\n\t\t\t\t\t\t\t\t\t\t\t\tthis.getAxisView(study, Lang.get(\"axis_x\"), container.xAxis, studyVariables)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t{this.getAxisView(study, Lang.get(\"axis_y\"), container.yAxis, studyVariables)}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t\n\t\t)\n\t}\n\t\n\tprivate getAxisView(study: Study, title: string, axis: AxisData, studyVariables: string[]): Vnode<any, any> {\n\t\tconst conditionOptions = this.getConditionVariables(study, axis.variableName.get())\n\t\t\n\t\treturn <div>\n\t\t\t<div class=\"vertical\">\n\t\t\t\t<label class=\"horizontal spacingRight\">\n\t\t\t\t\t<small>{title}</small>\n\t\t\t\t\t<select {... BindObservable(axis.variableName)}>\n\t\t\t\t\t\t{studyVariables.map((variable) => <option>{variable}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t\t<label class=\"horizontal spacingLeft\">\n\t\t\t\t\t<small>{Lang.get(\"condition\")}</small>\n\t\t\t\t\t<select class=\"smallText\" onchange={this.addCondition.bind(this, axis)}>\n\t\t\t\t\t\t<option>{Lang.get(\"select_to_add\")}</option>\n\t\t\t\t\t\t{conditionOptions.map((option) => <option>{option}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t<table>\n\t\t\t\t{axis.conditions.get().map((condition, index) =>\n\t\t\t\t\tcondition.key.get() &&\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td class=\"center\">\n\t\t\t\t\t\t\t\t{index == 0\n\t\t\t\t\t\t\t\t\t? <div style=\"width:75px\"></div>\n\t\t\t\t\t\t\t\t\t: DropdownMenu(\"conditionType\",\n\t\t\t\t\t\t\t\t\t\t<span class=\"clickable\">{axis.conditionType.get() == CONDITION_TYPE_AND ? \"AND\" : \"OR\"}</span>,\n\t\t\t\t\t\t\t\t\t\t(close) => <div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"clickable\" onclick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\taxis.conditionType.set(CONDITION_TYPE_AND)\n\t\t\t\t\t\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\t\t\t\t\t}}>{Lang.get(\"conditionTypeAnd\")}</div>\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"clickable spacingTop\" onclick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\taxis.conditionType.set(CONDITION_TYPE_OR)\n\t\t\t\t\t\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\t\t\t\t\t}}>{Lang.get(\"conditionTypeOr\")}</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<label class=\"horizontal middle\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"variable\")}</small>\n\t\t\t\t\t\t\t\t<select {... BindObservable(condition.key)}>\n\t\t\t\t\t\t\t\t\t{conditionOptions.map((option) => <option>{option}</option>)}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<label class=\"horizontal middle\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"operator\")}</small>\n\t\t\t\t\t\t\t\t<select class=\"small\" {... BindObservable(condition.operator)}>\n\t\t\t\t\t\t\t\t\t<option value=\"0\">=</option>\n\t\t\t\t\t\t\t\t\t<option value=\"1\">≠</option>\n\t\t\t\t\t\t\t\t\t<option value=\"2\">⋝</option>\n\t\t\t\t\t\t\t\t\t<option value=\"3\">⋜</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"value\")}</small>\n\t\t\t\t\t\t\t\t<input class=\"small\" type=\"text\" {... BindObservable(condition.value)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t{BtnRemove(this.removeCondition.bind(this, axis, index))}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t)}\n\t\t\t</table>\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport addSvg from \"../../imgs/icons/dragHandle.svg?raw\"\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface DragTools {\n\tgetDragTarget(index: number, targetList: ArrayType, content?: Vnode<any, any>): Vnode<any, any>\n\tgetDragStarter(index: number, dragTarget: ArrayType): Vnode<any, any>\n}\n\ntype ArrayType = ArrayInterface<any, BaseObservable<any>>\n\ninterface DragContainerImpOptions {\n\tcontent: (container: DragTools) => Vnode<any, any>\n}\nclass DragContainerImp implements DragTools, Component<DragContainerImpOptions, any> {\n\tprivate contentVNode?: VnodeDOM<any, any>\n\tprivate currentStartList?: ArrayType\n\tprivate currentTargetList?: ArrayType\n\tprivate currentStartIndex: number = 0\n\tprivate currentTargetIndex: number = 0\n\tprivate currentDragClone?: HTMLElement\n\tprivate currentStartElement?: HTMLElement\n\tprivate startIndex: number = 0\n\t\n\tpublic getDragTarget(index: number, targetList: ArrayType, content: Vnode<any, any> = <div></div>): Vnode<any, any> {\n\t\tcontent.attrs[\"className\"] = `dragTarget ${content.attrs[\"className\"] ?? \"\"}`\n\t\tcontent.attrs[\"ondragend\"] = this.ondragend.bind(this)\n\t\tcontent.attrs[\"ondragenter\"] = this.ondragenter.bind(this, index, targetList)\n\t\treturn content\n\t}\n\t\n\tpublic getDragStarter(index: number, targetList: ArrayType): Vnode<any, any> {\n\t\treturn <div class=\"btn clickable dragStarter\" draggable=\"true\" ondragstart={this.ondragstart.bind(this, index, targetList)}>\n\t\t\t{m.trust(addSvg)}\n\t\t</div>\n\t}\n\t\n\t\n\tprivate getIndexInContainer(searchEl: HTMLElement): number {\n\t\tconst htmlCollection = this.contentVNode?.dom.getElementsByClassName(\"dragTarget\")\n\t\tif(htmlCollection) {\n\t\t\tfor(let i = htmlCollection.length - 1; i >= 0; --i) {\n\t\t\t\tif(htmlCollection[i] === searchEl)\n\t\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\tprivate addDragSpacer(locationEl: HTMLElement): void {\n\t\tlet insertBefore: Element | null = locationEl //when insertBefore is null, currentDragClone will be placed at the end\n\t\tif(!this.currentDragClone)\n\t\t\treturn\n\t\tif(this.currentDragClone.parentNode) {\n\t\t\tconst locationIndex = this.getIndexInContainer(locationEl)\n\t\t\tconst spacerIndex = this.getIndexInContainer(this.currentDragClone)\n\t\t\t\n\t\t\tif(spacerIndex < this.startIndex) { //mouse moved up (/right) from starting point\n\t\t\t\tif(spacerIndex < locationIndex) { //mouse is moving down (/left) again\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { //mouse moved down (/left) from starting point\n\t\t\t\t\n\t\t\t\t//we need to add one to targetIndex.\n\t\t\t\t// But when we are in the same list, removing the item (before moving it) means that targetIndex points to the element afterwards anyway.\n\t\t\t\t// But when we are in another list, we need to correct manually:\n\t\t\t\tif(this.currentStartList != this.currentTargetList)\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t\n\t\t\t\tif(spacerIndex > locationIndex) //mouse is moving up (/right) again\n\t\t\t\t\t--this.currentTargetIndex\n\t\t\t\telse\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t}\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t}\n\t\tlocationEl.parentNode?.insertBefore(this.currentDragClone, insertBefore)\n\t}\n\t\n\tprivate ondragstart(index: number, targetList: ArrayType, e: DragEvent): boolean {\n\t\tlet targetElement = e.currentTarget as HTMLElement\n\t\twhile(targetElement && !targetElement.classList.contains(\"dragTarget\")) {\n\t\t\ttargetElement = targetElement.parentNode as HTMLElement\n\t\t}\n\t\tconst dragRoot = this.contentVNode?.dom\n\t\tif(!dragRoot)\n\t\t\treturn false\n\t\t\n\t\t\n\t\tthis.startIndex = this.getIndexInContainer(targetElement)\n\t\t\n\t\tthis.currentStartList = targetList\n\t\tthis.currentStartIndex = index\n\t\t\n\t\tthis.currentDragClone = targetElement.cloneNode(true) as HTMLElement\n\t\tthis.currentDragClone?.classList.add(\"drag_spacer\")\n\t\t\n\t\tthis.currentDragClone?.addEventListener(\"dragover\", this.ondragover.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"dragleave\", this.ondragleave.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"drop\", this.ondrop.bind(this))\n\t\t\n\t\ttargetElement.classList.add(\"dragStarted\")\n\t\te.dataTransfer?.setDragImage(targetElement, 0, 0)\n\t\t\n\t\t\n\t\tthis.currentStartElement = targetElement\n\t\t\n\t\twindow.setTimeout( () => {\n\t\t\t//in firefox: setDragImage() seems to stop working when the class of document.body is changed\n\t\t\t//in chrome: DOM changes seem to cancel dragging altogether\n\t\t\t//solution: doing this stuff in a different \"thread\" seems to do the trick\n\t\t\tthis.addDragSpacer(targetElement)\n\t\t\tdragRoot.classList.add(\"is_dragging\")\n\t\t}, 0)\n\t\treturn true\n\t}\n\tprivate ondragend(e: DragEvent): void {\n\t\tthis.ondragleave(e)\n\t\te.preventDefault()\n\t\t\n\t\tthis.contentVNode?.dom.classList.remove(\"is_dragging\")\n\t\tthis.currentStartElement?.classList.remove(\"dragStarted\")\n\t\tif(this.currentDragClone?.parentNode)\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t\n\t\tthis.currentDragClone = undefined\n\t}\n\tprivate ondragenter(index: number, targetList: ArrayType, e: DragEvent): false {\n\t\tconst targetElement = e.currentTarget as HTMLElement\n\t\tif(!this.contentVNode?.dom.contains(targetElement))\n\t\t\treturn false\n\t\t\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"none\"\n\t\te.preventDefault()\n\t\t\n\t\tthis.currentTargetList = targetList\n\t\tthis.currentTargetIndex = index\n\t\t\n\t\tthis.addDragSpacer(targetElement)\n\t\treturn false\n\t}\n\t\n\tprivate ondragover(e: DragEvent): void {\n\t\te.preventDefault()\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"move\"\n\t}\n\tprivate ondragleave(e: DragEvent): void {\n\t\te.preventDefault()\n\t}\n\tprivate ondrop(e: DragEvent): void {\n\t\te.preventDefault()\n\t\t\n\t\tif(this.currentStartList == null || this.currentTargetList == null)\n\t\t\treturn\n\t\t\n\t\tif(this.currentTargetList == this.currentStartList)\n\t\t\tthis.currentTargetList.move(this.currentStartIndex, this.currentTargetIndex)\n\t\telse\n\t\t\tthis.currentTargetList.moveFromOtherList(this.currentStartList, this.currentStartIndex, this.currentTargetIndex)\n\t\t\n\t\tthis.currentStartList = this.currentTargetList = undefined\n\t\tthis.ondragend(e)\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<DragContainerImpOptions, any>): void {\n\t\tthis.contentVNode = vNode\n\t}\n\t\n\tpublic view(vNode: Vnode<DragContainerImpOptions, any>): Vnode<any, any> {\n\t\treturn vNode.attrs.content(this)\n\t}\n}\n\n\nexport function DragContainer(\n\tcontent: (container: DragTools) => Vnode<any, any>\n): Vnode<any, any> {\n\treturn m(DragContainerImp, { content: content })\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["DATA_MAIN_KEYS","SectionContent","section","calcChart","isCalc","sectionValue","preLoad","getStudyPromise","title","Lang","get","titleExtra","href","this","getUrl","undefined","getChart","study","getStudyOrThrow","ChartData","publicStatistics","charts","getStaticInt","personalStatistics","copyAxisContainer","list","axis","index","addCopy","removeAxisContainer","remove","removeCondition","conditions","addCondition","e","element","target","push","key","value","conditionType","set","selectedIndex","addVariable","studyVariables","StudyDataValues","getStudyVariables","variableName","length","xAxis","yAxis","getConditionVariables","axisValue","questionnaire","questionnaires","variables","getQuestionnaireVariables","concat","i","indexOf","getView","chart","TitleRow","getWithColon","DashRow","DashElement","content","class","type","BindObservable","hideUntilCompletion","ObservableLangChooser","RichText","chartDescription","chartType","xAxisLabel","yAxisLabel","dataType","valueType","inPercent","xAxisIsNumberRange","fitToShowLinearProgression","maxYValue","displayPublicVariable","getVariablesView","publicVariables","bind","axisContainer","DragContainer","dragTools","map","container","getDragTarget","getDragStarter","label","color","getAxisView","conditionOptions","variable","onchange","option","condition","style","DropdownMenu","close","onclick","operator","ChartEditSectionContent","DashElementView","options","view","classString","floatingRight","floating","small","highlight","disabled","template","icon","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","DashTemplateView","startsWith","showAsClickable","attrs","hasOwnProperty","getNewClassString","size","oldClassString","currentStartIndex","currentTargetIndex","startIndex","targetList","ondragend","ondragenter","draggable","ondragstart","getIndexInContainer","searchEl","htmlCollection","contentVNode","dom","getElementsByClassName","addDragSpacer","locationEl","insertBefore","currentDragClone","parentNode","locationIndex","spacerIndex","nextElementSibling","currentStartList","currentTargetList","removeChild","targetElement","currentTarget","classList","contains","dragRoot","cloneNode","add","addEventListener","ondragover","ondragleave","ondrop","dataTransfer","setDragImage","currentStartElement","window","setTimeout","preventDefault","dropEffect","move","moveFromOtherList","onupdate","vNode","DragContainerImp","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","NotCompatibleIcon","translationRecord","devices","device","join","onpointerenter","onpointerleave"],"sourceRoot":""}