{"version":3,"file":"3823.efa4eecd5f962a8c6526.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/ObservableLangChooser.tsx","webpack://ESMira/./src/frontend/ts/widgets/RichText.tsx","webpack://ESMira/./src/frontend/langCodes/ lazy ^\\.\\/.*\\.json$ namespace object"],"sourcesContent":["import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport {TranslationRootInterface} from \"../observable/interfaces/TranslationRootInterface\";\n\n\nlet langNames: Record<string, string> | null = null\n\nexport function ObservableLangChooser(obs: TranslationRootInterface): Vnode<any, any> {\n\tif(obs.langCodes.get().length <= 1)\n\t\treturn <div></div>\n\telse if(langNames == null) {\n\t\timport(`../../langCodes/${Lang.code}.json`)\n\t\t\t.then((loadedLangNames) => {\n\t\t\t\tlangNames = loadedLangNames\n\t\t\t\tm.redraw()\n\t\t\t})\n\t\treturn <div></div>\n\t}\n\t\n\tconst changeLang = (langCode: string) => {\n\t\tobs.currentLangCode.set(langCode)\n\t\tm.redraw()\n\t}\n\t\n\treturn <div class=\"observableLangChooser\" title={Lang.get(\"language\")}>\n\t\t{\n\t\t\tobs.langCodes.get().map((langCode) =>\n\t\t\t\t<span\n\t\t\t\t\tclass={langCode.get() == obs.currentLangCode.get() ? \"element clickable selected\" : \"element clickable\"}\n\t\t\t\t\tonclick={() => changeLang(langCode.get())}\n\t\t\t\t>{langNames![langCode.get()] ?? langCode.get()}</span>\n\t\t\t)\n\t\t}\n\t</div>\n}","import {ChainedCommands, Editor, mergeAttributes} from \"@tiptap/core\";\nimport Document from '@tiptap/extension-document'\nimport Text from '@tiptap/extension-text'\nimport Bold from '@tiptap/extension-bold';\nimport Bullet from '@tiptap/extension-bullet-list';\nimport Dropcursor from '@tiptap/extension-dropcursor';\nimport Heading from '@tiptap/extension-heading';\nimport History from '@tiptap/extension-history';\nimport HorizontalRule from '@tiptap/extension-horizontal-rule';\nimport Italic from '@tiptap/extension-italic';\nimport ListItem from '@tiptap/extension-list-item';\nimport OrderedList from '@tiptap/extension-ordered-list';\nimport Paragraph from '@tiptap/extension-paragraph';\nimport Strike from '@tiptap/extension-strike';\n\nimport Image from '@tiptap/extension-image'\nimport Link from '@tiptap/extension-link'\nimport HardBreak from '@tiptap/extension-hard-break'\nimport Highlight from '@tiptap/extension-highlight'\nimport Underline from '@tiptap/extension-underline'\nimport TextAlign from '@tiptap/extension-text-align'\nimport bold from '../../imgs/rich_text_toolbar/bold.svg?raw';\nimport italic from '../../imgs/rich_text_toolbar/italic.svg?raw';\nimport strikethrough from '../../imgs/rich_text_toolbar/strikethrough.svg?raw';\nimport heading1 from '../../imgs/rich_text_toolbar/heading1.svg?raw';\nimport heading2 from '../../imgs/rich_text_toolbar/heading2.svg?raw';\nimport heading3 from '../../imgs/rich_text_toolbar/heading3.svg?raw';\nimport listOrdered from '../../imgs/rich_text_toolbar/list_ordered.svg?raw';\nimport listUnordered from '../../imgs/rich_text_toolbar/list_unordered.svg?raw';\nimport redo from '../../imgs/rich_text_toolbar/redo.svg?raw';\nimport undo from '../../imgs/rich_text_toolbar/undo.svg?raw';\nimport image from '../../imgs/rich_text_toolbar/image.svg?raw';\nimport link from '../../imgs/rich_text_toolbar/link.svg?raw';\nimport highlight from '../../imgs/rich_text_toolbar/highlight.svg?raw';\nimport underline from '../../imgs/rich_text_toolbar/underline.svg?raw';\nimport alignLeft from '../../imgs/rich_text_toolbar/align_left.svg?raw';\nimport alignCenter from '../../imgs/rich_text_toolbar/align_center.svg?raw';\nimport alignRight from '../../imgs/rich_text_toolbar/align_right.svg?raw';\nimport m, {Component, Vnode, VnodeDOM} from 'mithril'\nimport {Lang} from \"../singletons/Lang\";\nimport {closeDropdown, DropdownMenu} from \"./DropdownMenu\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\n\n\nconst extensions = [\n\tParagraph.extend({\n\t\tparseHTML() {\n\t\t\treturn [{ tag: 'div' }]\n\t\t},\n\t\trenderHTML({ HTMLAttributes }) {\n\t\t\treturn ['div', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n\t\t},\n\t}), //We always want HardBreaks. but we need to trick tiptap to achieve it.\n\t//So we use normal paragraph except we use <div> instead of <p> and when exporting we replace <div></div> with <br>\n\t// Thanks to: https://github.com/ueberdosis/tiptap/issues/291 and https://github.com/ueberdosis/tiptap/issues/426\n\t\n\tText, //required\n\tDocument, //required\n\tHardBreak, //Shift enter for break that doesnt close current tag\n\tBold,\n\tItalic,\n\tUnderline,\n\tStrike,\n\tHighlight,\n\tHeading,\n\tHistory, //have a undo / redo history\n\tDropcursor, //show a cursor when dragging something into editor\n\tHorizontalRule, //replace --- with <hr>\n\tListItem,\n\tBullet,\n\tOrderedList,\n\tImage,\n\tLink,\n\tTextAlign.configure({\n\t\ttypes: ['heading', 'paragraph'],\n\t})\n]\n\n//thanks to: https://stackoverflow.com/questions/1144783/how-do-i-replace-all-occurrences-of-a-string-in-javascript\nfunction escapeRegExp(str: string): string {\n\treturn str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nfunction replaceAll(str: string, find: string, replace: string): string {\n\treturn str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n}\n\nclass MenuOptions {\n\tpublic svg: string = \"\"\n\tpublic title: string = \"\"\n\tpublic activeKey?: string\n\tpublic click?: (chain?: ChainedCommands) => void\n\tpublic enabled?: (chain?: ChainedCommands) => boolean\n\tpublic attr?: {}\n}\ninterface RichTextComponentOptions {\n\tobs: BaseObservable<string>\n}\nclass RichTextComponent implements Component<RichTextComponentOptions, any> {\n\tprivate editor?: Editor\n\tprivate lastValue: string = \"\"\n\tprivate obs?: BaseObservable<string>\n\t\n\tpublic oncreate(vNode: VnodeDOM<RichTextComponentOptions, any>): void {\n\t\tconst obs = vNode.attrs.obs\n\t\tthis.obs = obs\n\t\tthis.lastValue = obs.get()\n\t\tthis.createEditor(vNode.dom, obs)\n\t}\n\tpublic onupdate(vNode: VnodeDOM<RichTextComponentOptions, any>): void {\n\t\tconst newValue = vNode.attrs.obs.get()\n\t\t\n\t\tif(this.obs != vNode.attrs.obs) {\n\t\t\tif(this.editor)\n\t\t\t\tvNode.dom.removeChild(this.editor?.options.element)\n\t\t\tthis.createEditor(vNode.dom, vNode.attrs.obs)\n\t\t\tthis.obs = vNode.attrs.obs\n\t\t}\n\t\telse if(this.lastValue != newValue) {\n\t\t\tthis.lastValue = newValue\n\t\t\tthis.editor?.commands.setContent(newValue)\n\t\t}\n\t}\n\tprivate createEditor(parent: Element, obs: BaseObservable<string>): void {\n\t\tconst editor = new Editor({\n\t\t\textensions: extensions,\n\t\t\tcontent: obs.get(),\n\t\t\tonBlur: ({editor: e}) => {\n\t\t\t\tlet newValue = replaceAll(e.getHTML(), \"<div></div>\", \"<br>\");\n\t\t\t\tnewValue = newValue === \"<br>\" ? \"\" : newValue\n\t\t\t\t\n\t\t\t\tthis.lastValue = newValue\n\t\t\t\tobs.set(newValue)\n\t\t\t},\n\t\t\tonSelectionUpdate: () => {\n\t\t\t\tm.redraw()\n\t\t\t}\n\t\t})\n\t\t\n\t\tconst domElement = editor.options.element\n\t\tdomElement.classList.add(\"editor\")\n\t\tparent.append(domElement)\n\t\tthis.editor = editor\n\t}\n\t\n\t\n\tpublic isActive(activeKey?: string, attr?: {}): boolean {\n\t\treturn (activeKey && this.editor?.isActive(activeKey, attr) || (attr && this.editor?.isActive(attr))) || false\n\t}\n\t\n\tprivate getChain(): ChainedCommands | undefined {\n\t\treturn this.editor?.chain().focus()\n\t}\n\t\n\tpublic createMenuBtn(options: MenuOptions): Vnode<any, any> {\n\t\treturn <div\n\t\t\tclass={`toolbarBtn ${this.isActive(options.activeKey, options.attr) ? \"active\" : \"\"} ${options.enabled && !options.enabled(this.editor?.can().chain().focus()) ? \"disabled\" : \"\"}`}\n\t\t\ttitle={options.title}\n\t\t\tonclick={() => {options.click && options.click(this.getChain());}}\n\t\t>{m.trust(options.svg)}</div>\n\t}\n\t\n\tprivate loadEmbeddedImage(): void {\n\t\tconst silentInput = document.createElement(\"input\")\n\t\tsilentInput.type = \"file\"\n\t\tsilentInput.multiple = true\n\t\t\n\t\tsilentInput.onchange = () => {\n\t\t\tconst files = silentInput.files;\n\t\t\tlet i=1;\n\t\t\tconst reader = new FileReader();\n\t\t\t\n\t\t\tif(files == null)\n\t\t\t\treturn\n\t\t\t\n\t\t\tlet load = (file: File) => {\n\t\t\t\tif(file && (file.size < 150000 || confirm(Lang.get(\"prompt_image_fileSize\", file.name))))\n\t\t\t\t\treader.readAsDataURL(file);\n\t\t\t\telse if(i < files.length)\n\t\t\t\t\tload(files[i++]);\n\t\t\t\telse\n\t\t\t\t\tcloseDropdown(\"imageSelector\")\n\t\t\t};\n\t\t\treader.onloadend = () => {\n\t\t\t\tconst result = reader.result as string\n\t\t\t\tif(result)\n\t\t\t\t\tthis.getChain()?.selectNodeForward().setImage({src: result}).run();\n\t\t\t\tload(files[i++]);\n\t\t\t}\n\t\t\tload(files[0]);\n\t\t};\n\t\tsilentInput.click();\n\t}\n\tprivate loadExternalImage(): void {\n\t\tconst url = window.prompt(Lang.get(\"prompt_url\"), \"https://\");\n\t\t\n\t\tif(url)\n\t\t\tthis.getChain()?.setImage({src: url}).run();\n\t\tcloseDropdown(\"imageSelector\")\n\t}\n\t\n\tpublic view(): Vnode<any, any> {\n\t\treturn <div class=\"richText\">\n\t\t\t<div class=\"toolbar\">\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{this.createMenuBtn({svg: bold, activeKey: \"bold\", title: Lang.get(\"bold\"), click: (chain) => {chain?.toggleBold().run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: italic, activeKey: \"italic\", title: Lang.get(\"italic\"), click: (chain) => {chain?.toggleItalic().run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: underline, activeKey: \"underline\", title: Lang.get(\"underline\"), click: (chain) => {chain?.toggleUnderline().run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: strikethrough, activeKey: \"strike\", title: Lang.get(\"strikethrough\"), click: (chain) => {chain?.toggleStrike().run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: highlight, activeKey: \"highlight\", title: Lang.get(\"highlighted\"), click: (chain) => {chain?.toggleHighlight().run()}})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{this.createMenuBtn({svg: heading1, activeKey: \"heading\", attr: {level: 1}, title: Lang.get(\"heading\"), click: (chain) => {chain?.toggleHeading({level: 1}).run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: heading2, activeKey: \"heading\", attr: {level: 2}, title: Lang.get(\"heading\"), click: (chain) => {chain?.toggleHeading({level: 2}).run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: heading3, activeKey: \"heading\", attr: {level: 3}, title: Lang.get(\"heading\"), click: (chain) => {chain?.toggleHeading({level: 3}).run()}})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{this.createMenuBtn({svg: alignLeft, attr: {textAlign: 'left'}, title: Lang.get(\"textAlign_left\"), click: (chain) => {chain?.setTextAlign(\"left\").run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: alignCenter, attr: {textAlign: 'center'}, title: Lang.get(\"textAlign_center\"), click: (chain) => {chain?.setTextAlign(\"center\").run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: alignRight, attr: {textAlign: 'right'}, title: Lang.get(\"textAlign_right\"), click: (chain) => {chain?.setTextAlign(\"right\").run()}})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{this.createMenuBtn({svg: listUnordered, activeKey: \"bulletList\", title: Lang.get(\"unorderedList\"), click: (chain) => {chain?.toggleBulletList().run()}})}\n\t\t\t\t\t{this.createMenuBtn({svg: listOrdered, activeKey: \"orderedList\", title: Lang.get(\"orderedList\"), click: (chain) => {chain?.toggleOrderedList().run()}})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{\n\t\t\t\t\t\tDropdownMenu(\"imageSelector\",\n\t\t\t\t\t\t\tthis.createMenuBtn({svg: image, activeKey: \"image\", title: Lang.get(\"add_image\")}),\n\t\t\t\t\t\t\t() => {return <div class=\"horizontalPadding verticalPadding\">\n\t\t\t\t\t\t\t\t<a class=\"center line\" onclick={this.loadEmbeddedImage.bind(this)}>{Lang.get(\"embedded\")}</a>\n\t\t\t\t\t\t\t\t<a class=\"center line\" onclick={this.loadExternalImage.bind(this)}>{Lang.get(\"external\")}</a>\n\t\t\t\t\t\t\t</div>}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.createMenuBtn({svg: link, activeKey: \"link\", title: Lang.get(\"add_link\"), click: (chain) => {\n\t\t\t\t\t\t\tif(this.editor?.isActive(\"link\"))\n\t\t\t\t\t\t\t\tchain?.unsetLink().run();\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tconst url = window.prompt(Lang.get(\"prompt_url\"), \"https://\");\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif(url)\n\t\t\t\t\t\t\t\t\tchain?.toggleLink({href: url, target: url.startsWith(\"#\") || url.startsWith(\"/\") ? \"_self\" : \"_blank\"}).run();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}})}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div class=\"group\">\n\t\t\t\t\t{this.createMenuBtn({svg: undo, title: Lang.get(\"undo\"), click: (chain) => {chain?.undo().run()}, enabled: (chain) => { return !!chain?.undo().run() }})}\n\t\t\t\t\t{this.createMenuBtn({svg: redo, title: Lang.get(\"redo\"), click: (chain) => {chain?.redo().run()}, enabled: (chain) => { return !!chain?.redo().run() }})}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>;\n\t}\n}\n\n\n\n\nexport function RichText(obs: BaseObservable<string>): Vnode<any, any> {\n\treturn m(RichTextComponent, {obs: obs})\n}","var map = {\n\t\"./de.json\": [\n\t\t5142,\n\t\t5142\n\t],\n\t\"./en.json\": [\n\t\t1294,\n\t\t1294\n\t],\n\t\"./it.json\": [\n\t\t7416,\n\t\t7416\n\t],\n\t\"./tl.json\": [\n\t\t601,\n\t\t601\n\t],\n\t\"./uk.json\": [\n\t\t6541,\n\t\t6541\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 6480;\nmodule.exports = webpackAsyncContext;"],"names":["section","this","preLoad","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","id","studies","studyLoader","getStudies","getCount","getFirst","getEntry","getStudyOrThrow","study","Error","getQuestionnaireOrNull","qId","questionnaires","get","questionnaire","internalId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","getUrl","depth","getHash","goTo","target","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","value","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","Date","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","BindObservable","transformer","attr","event","attrValue","e","element","set","langNames","ObservableLangChooser","langCodes","length","code","then","loadedLangNames","class","title","map","langCode","currentLangCode","onclick","changeLang","extensions","extend","parseHTML","tag","renderHTML","HTMLAttributes","options","configure","types","lastValue","oncreate","vNode","attrs","createEditor","dom","onupdate","editor","removeChild","commands","setContent","parent","content","onBlur","getHTML","replace","RegExp","str","escapeRegExp","onSelectionUpdate","domElement","classList","add","append","isActive","activeKey","getChain","chain","focus","createMenuBtn","enabled","can","click","svg","loadEmbeddedImage","silentInput","document","createElement","type","multiple","onchange","files","i","reader","FileReader","load","file","size","confirm","Lang","readAsDataURL","onloadend","result","selectNodeForward","setImage","src","run","loadExternalImage","url","prompt","view","toggleBold","toggleItalic","toggleUnderline","toggleStrike","toggleHighlight","level","toggleHeading","textAlign","setTextAlign","toggleBulletList","toggleOrderedList","DropdownMenu","bind","unsetLink","toggleLink","href","startsWith","undo","redo","RichText","RichTextComponent","webpackAsyncContext","req","__webpack_require__","o","ids","t","keys","Object","module","exports"],"sourceRoot":""}