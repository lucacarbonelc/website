{"version":3,"file":"7806.84b5c3c703980f0685a5.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/observable/ObservablePromise.ts","webpack://ESMira/./src/frontend/ts/pages/serverStatistics.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/ChartView.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx"],"sourcesContent":["import {ObservableTypes} from \"./types/ObservableTypes\";\nimport {BaseObservable} from \"./BaseObservable\";\nimport { JsonTypes } from \"./types/JsonTypes\";\n\n/**\n * A observable Wrapper that can hold a Promise\n */\nexport class ObservablePromise<T> extends BaseObservable<Promise<T>> {\n\tprotected backingField: Promise<T>\n\t\n\tconstructor(value: Promise<T>, parent: BaseObservable<ObservableTypes> | null, key: string) {\n\t\tsuper(parent, key)\n\t\tthis.keyName = key\n\t\tthis.backingField = value\n\t}\n\t\n\tpublic reCalcIsDifferent(_: boolean = false): void {\n\t\t//do nothing\n\t}\n\t\n\tpublic createJson(): JsonTypes {\n        return \"\"\n    }\n\t\n\tpublic isDifferent(): boolean {\n\t\treturn false\n\t}\n\t\n\tpublic get(): Promise<any> {\n\t\treturn this.backingField\n\t}\n\tpublic set(value: Promise<T>, silently: boolean = false): void {\n\t\tthis.backingField = value\n\t\tif(!silently)\n\t\t\tthis.hasMutated(true, true)\n\t}\n\tpublic setValue(value: T, silently: boolean = false) {\n\t\tthis.set(Promise.resolve(value), silently)\n\t}\n}","import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {Requests} from \"../singletons/Requests\";\nimport {FILE_SERVER_STATISTICS} from \"../constants/urls\";\nimport {ChartView} from \"../widgets/ChartView\";\nimport {ChartData} from \"../data/study/ChartData\";\nimport {ObservablePromise} from \"../observable/ObservablePromise\";\nimport {LoadedStatistics} from \"../loader/csv/CsvLoaderCollectionFromCharts\";\nimport {\n\tSTATISTICS_CHARTTYPES_BARS,\n\tSTATISTICS_CHARTTYPES_LINE, STATISTICS_CHARTTYPES_LINE_FILLED,\n\tSTATISTICS_CHARTTYPES_PIE,\n\tSTATISTICS_DATATYPES_DAILY,\n\tSTATISTICS_DATATYPES_FREQ_DISTR, STATISTICS_STORAGE_TYPE_FREQ_DISTR, STATISTICS_STORAGE_TYPE_TIMED,\n\tSTATISTICS_VALUETYPES_COUNT, STATISTICS_VALUETYPES_SUM\n} from \"../constants/statistics\";\nimport {JsonTypes} from \"../observable/types/JsonTypes\";\nimport {StatisticsEntry} from \"../data/statistics/StatisticsEntry\";\nimport { StatisticsEntryTimed} from \"../data/statistics/StatisticsDataRecord\";\nimport {DayEntry} from \"../data/serverStatistics/DayEntry\";\nimport {WeekEntry} from \"../data/serverStatistics/WeekEntry\";\nimport {ServerStatistics} from \"../data/serverStatistics/ServerStatistics\";\nimport {BtnReload} from \"../widgets/BtnWidgets\";\n\nconst SMALLEST_TIMED_DISTANCE = 675\nexport class Content extends SectionContent {\n\tprivate readonly serverStatistics: ServerStatistics\n\t\n\tprivate readonly appTypeChart: ChartData\n\tprotected dailyAppVersionChart?: ChartData //only written by serverStatisticsAdmin\n\tprivate readonly dailyQuestionnaireChart: ChartData\n\tprivate readonly dailyJoinedChart: ChartData\n\tprivate readonly weekdaysQuestionnaireChart: ChartData\n\tprivate readonly weekdaysJoinedChart: ChartData\n\t\n\tprivate readonly appTypePromise: ObservablePromise<LoadedStatistics>\n\tprotected dailyAppVersionPromise?: ObservablePromise<LoadedStatistics> //only written by serverStatisticsAdmin\n\tprivate readonly dailyQuestionnairePromise: ObservablePromise<LoadedStatistics>\n\tprivate readonly dailyJoinedPromise: ObservablePromise<LoadedStatistics>\n\tprivate readonly weekdaysQuestionnairePromise: ObservablePromise<LoadedStatistics>\n\tprivate readonly weekdaysJoinedPromise: ObservablePromise<LoadedStatistics>\n\t\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tRequests.loadJson(FILE_SERVER_STATISTICS)\n\t\t]\n\t}\n\tconstructor(section: Section, serverStatistics: ServerStatistics) {\n\t\tsuper(section)\n\t\tthis.serverStatistics = serverStatistics\n\t\t\n\t\tthis.appTypeChart = this.createAppTypeChart()\n\t\tthis.dailyQuestionnaireChart = this.createDailyQuestionnaireChart()\n\t\tthis.dailyJoinedChart = this.createDailyJoinedChart()\n\t\tthis.weekdaysQuestionnaireChart = this.createWeekdaysQuestionnaireChart()\n\t\tthis.weekdaysJoinedChart = this.createWeekdaysJoinedChart()\n\t\t\n\t\tthis.appTypePromise = this.createChartPromise(\"appType\", [{\n\t\t\tstorageType: STATISTICS_STORAGE_TYPE_FREQ_DISTR,\n\t\t\tdata: {\n\t\t\t\t[Lang.get(\"Android\")]: serverStatistics.total.android,\n\t\t\t\t[Lang.get(\"iOS\")]: serverStatistics.total.ios,\n\t\t\t\t[Lang.get(\"Web\")]: serverStatistics.total.web\n\t\t\t},\n\t\t\tentryCount: 3,\n\t\t\ttimeInterval: SMALLEST_TIMED_DISTANCE\n\t\t}])\n\t\tthis.dailyQuestionnairePromise = this.createChartPromise(\"questionnaire\", [this.createDailyStatisticsEntry(serverStatistics, \"questionnaire\")])\n\t\tthis.dailyJoinedPromise = this.createChartPromise(\"joined\", [this.createDailyStatisticsEntry(serverStatistics, \"joined\")])\n\t\tthis.weekdaysQuestionnairePromise = this.createChartPromise(\"weekdaysQuestionnaire\", [this.createWeeklyStatisticsEntry(serverStatistics, \"questionnaire\")])\n\t\tthis.weekdaysJoinedPromise = this.createChartPromise(\"weekdaysJoin\", [this.createWeeklyStatisticsEntry(serverStatistics, \"joined\")])\n\t}\n\t\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn BtnReload(this.section.reload.bind(this.section), Lang.get(\"reload\"))\n\t}\n\t\n\tprotected createChartPromise(variable: string, entries: StatisticsEntry[]): ObservablePromise<LoadedStatistics> {\n\t\treturn new ObservablePromise<LoadedStatistics>(\n\t\t\tPromise.resolve({\n\t\t\t\tmainStatistics: {[variable]: entries}\n\t\t\t}),\n\t\t\tnull,\n\t\t\t\"promise\"\n\t\t)\n\t}\n\t\n\tprivate createWeeklyStatisticsEntry(serverStatistics: ServerStatistics, type: keyof WeekEntry): StatisticsEntry {\n\t\treturn {\n\t\t\tstorageType: STATISTICS_STORAGE_TYPE_FREQ_DISTR,\n\t\t\ttimeInterval: SMALLEST_TIMED_DISTANCE,\n\t\t\tentryCount: 7,\n\t\t\tdata: {\n\t\t\t\t[Lang.get(\"weekday_mon\")]: serverStatistics.week[type][1],\n\t\t\t\t[Lang.get(\"weekday_tue\")]: serverStatistics.week[type][2],\n\t\t\t\t[Lang.get(\"weekday_wed\")]: serverStatistics.week[type][3],\n\t\t\t\t[Lang.get(\"weekday_thu\")]: serverStatistics.week[type][4],\n\t\t\t\t[Lang.get(\"weekday_fri\")]: serverStatistics.week[type][5],\n\t\t\t\t[Lang.get(\"weekday_sat\")]: serverStatistics.week[type][6],\n\t\t\t\t[Lang.get(\"weekday_sun\")]: serverStatistics.week[type][0]\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprotected createDailyStatisticsEntry(serverStatistics: ServerStatistics, variable: keyof DayEntry, subVariable: string = \"\"): StatisticsEntry {\n\t\tconst statisticsData: StatisticsEntryTimed = {}\n\t\tlet count = 0\n\t\tconst days = serverStatistics.days\n\t\t\n\t\tfor(const timestamp in days) {\n\t\t\tconst entry = days[timestamp]\n\t\t\tif(entry.hasOwnProperty(variable)) {\n\t\t\t\tif(variable == \"appVersion\")\n\t\t\t\t\tstatisticsData[timestamp] = {sum: entry[variable].hasOwnProperty(subVariable) ? entry[variable][subVariable] : 0, count: 1}\n\t\t\t\telse\n\t\t\t\t\tstatisticsData[timestamp] = {sum: entry[variable], count: 1}\n\t\t\t}\n\t\t\telse\n\t\t\t\tstatisticsData[timestamp] = {sum: 0, count: 1}\n\t\t\t++count\n\t\t}\n\t\t\n\t\treturn {\n\t\t\tstorageType: STATISTICS_STORAGE_TYPE_TIMED,\n\t\t\ttimeInterval: SMALLEST_TIMED_DISTANCE,\n\t\t\tentryCount: count,\n\t\t\tdata: statisticsData\n\t\t}\n\t}\n\t\n\tprivate createAppTypeChart(): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"app_type\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: [\n\t\t\t\t{\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"appType\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tvalueType: STATISTICS_VALUETYPES_COUNT,\n\t\t\tdataType: STATISTICS_DATATYPES_FREQ_DISTR,\n\t\t\tchartType: STATISTICS_CHARTTYPES_PIE\n\t\t}, null, \"chart\")\n\t}\n\tprotected createDailyAppVersionChart(appVersionAxisContainer: Record<string, JsonTypes>[]): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"app_version\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: appVersionAxisContainer,\n\t\t\tvalueType: STATISTICS_VALUETYPES_SUM,\n\t\t\tdataType: STATISTICS_DATATYPES_DAILY,\n\t\t\tchartType: STATISTICS_CHARTTYPES_LINE\n\t\t}, null, \"chart\")\n\t}\n\tprivate createDailyQuestionnaireChart(): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"per_day\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: [\n\t\t\t\t{\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"questionnaire\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t},\n\t\t\t\t\tlabel: Lang.get(\"questionnaires\"),\n\t\t\t\t\tcolor: \"#00ffff\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tvalueType: STATISTICS_VALUETYPES_SUM,\n\t\t\tdataType: STATISTICS_DATATYPES_DAILY,\n\t\t\tchartType: STATISTICS_CHARTTYPES_LINE_FILLED\n\t\t}, null, \"chart\")\n\t}\n\tprivate createDailyJoinedChart(): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"per_day\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: [\n\t\t\t\t{\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"joined\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t},\n\t\t\t\t\tlabel: Lang.get(\"joined_study\"),\n\t\t\t\t\tcolor: \"#80ff80\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tvalueType: STATISTICS_VALUETYPES_SUM,\n\t\t\tdataType: STATISTICS_DATATYPES_DAILY,\n\t\t\tchartType: STATISTICS_CHARTTYPES_LINE_FILLED\n\t\t}, null, \"chart\")\n\t}\n\tprivate createWeekdaysQuestionnaireChart(): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"total_count_per_weekday\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: [\n\t\t\t\t{\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"weekdaysQuestionnaire\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t},\n\t\t\t\t\tlabel: Lang.get(\"questionnaires\"),\n\t\t\t\t\tcolor: \"#00ffff\"\n\t\t\t\t},\n\t\t\t],\n\t\t\tvalueType: STATISTICS_VALUETYPES_SUM,\n\t\t\tdataType: STATISTICS_DATATYPES_FREQ_DISTR,\n\t\t\tchartType: STATISTICS_CHARTTYPES_BARS\n\t\t}, null, \"chart\")\n\t}\n\tprivate createWeekdaysJoinedChart(): ChartData {\n\t\treturn new ChartData({\n\t\t\ttitle: Lang.get(\"total_count_per_weekday\"),\n\t\t\tpublicVariables: [],\n\t\t\taxisContainer: [\n\t\t\t\t{\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"weekdaysJoin\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t},\n\t\t\t\t\tlabel: Lang.get(\"joined_study\"),\n\t\t\t\t\tcolor: \"#80ff80\"\n\t\t\t\t}\n\t\t\t],\n\t\t\tvalueType: STATISTICS_VALUETYPES_SUM,\n\t\t\tdataType: STATISTICS_DATATYPES_FREQ_DISTR,\n\t\t\tchartType: STATISTICS_CHARTTYPES_BARS\n\t\t}, null, \"chart\")\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"server_statistics\")\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"vertical\",\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 class=\"center\">{Lang.getWithColon(\"active_studies\")}</h2>\n\t\t\t\t\t\t\t\t<div class=\"center\">{this.serverStatistics.total.studies}</div>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 class=\"center\">{Lang.getWithColon(\"total_completed_questionnaires\")}</h2>\n\t\t\t\t\t\t\t\t<div class=\"center\">{this.serverStatistics.total.questionnaire}</div>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h2 class=\"center\">{Lang.getWithColon(\"total_participants\")}</h2>\n\t\t\t\t\t\t\t\t<div class=\"center\">{this.serverStatistics.total.users}</div>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent: ChartView(this.appTypeChart, this.appTypePromise)\n\t\t\t\t}),\n\t\t\t\tthis.dailyAppVersionPromise && this.dailyAppVersionChart && DashElement(\"stretched\", {\n\t\t\t\t\tcontent: ChartView(this.dailyAppVersionChart, this.dailyAppVersionPromise)\n\t\t\t\t}),\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent: ChartView(this.dailyQuestionnaireChart, this.dailyQuestionnairePromise)\n\t\t\t\t}),\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent: ChartView(this.dailyJoinedChart, this.dailyJoinedPromise)\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent: ChartView(this.weekdaysQuestionnaireChart, this.weekdaysQuestionnairePromise, true)\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent: ChartView(this.weekdaysJoinedChart, this.weekdaysJoinedPromise, true)\n\t\t\t\t})\n\t\t\t)}\n\t\t\t\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t<div class=\"smallText right\">\n\t\t\t\t<span>{Lang.getWithColon(\"data_collected_since\")}</span>\n\t\t\t\t&nbsp;\n\t\t\t\t<span>{(new Date(this.serverStatistics.created*1000).toLocaleDateString())}</span>\n\t\t\t</div>\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Component, Vnode, VnodeDOM} from \"mithril\";\nimport {LoadedStatistics} from \"../loader/csv/CsvLoaderCollectionFromCharts\";\nimport {ChartJsBox} from \"../helpers/ChartJsBox\";\nimport {ObserverId} from \"../observable/BaseObservable\";\nimport {ChartData} from \"../data/study/ChartData\";\nimport {LoadingSpinner} from \"./LoadingSpinner\";\nimport {ObservablePromise} from \"../observable/ObservablePromise\";\n\ninterface ChartComponentOptions {\n\tpromise: ObservablePromise<LoadedStatistics>\n\tchart: ChartData\n\tclassName?: string //in case the parent has added a className that we need to include\n\tnoSort: boolean\n}\n\nclass ChartComponent implements Component<ChartComponentOptions, any> {\n\tprivate enabled: boolean = false\n\tprivate chart?: ChartData\n\tprivate chartView?: HTMLElement\n\tprivate chartViewBox?: ChartJsBox\n\tprivate promiseObserverId?: ObserverId\n\t\n\t\n\tprivate async drawGraph(chart: ChartData, promise: Promise<LoadedStatistics>, noSort: boolean): Promise<void> {\n\t\tthis.enabled = false\n\t\tm.redraw()\n\t\t\n\t\tconst data = await promise\n\t\tconst view = this.chartView\n\t\t\n\t\tif(!view)\n\t\t\treturn\n\t\twhile(view?.hasChildNodes()) {\n\t\t\tview.removeChild(view.lastChild!)\n\t\t}\n\t\t\n\t\tthis.chartViewBox = new ChartJsBox(view, data.mainStatistics, data.additionalStatistics ?? {}, chart, noSort)\n\t\tthis.enabled = true\n\t\tm.redraw()\n\t}\n\t\n\tpublic oncreate(vNode: VnodeDOM<ChartComponentOptions, any>): void {\n\t\tconst promise = vNode.attrs.promise\n\t\tconst chart = vNode.attrs.chart\n\t\tconst noSort = vNode.attrs.noSort\n\t\tthis.chart = chart\n\t\tthis.chartView = vNode.dom.getElementsByClassName(\"chartViewWindow\")[0] as HTMLElement\n\t\t\n\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\tthis.promiseObserverId = promise.addObserver(() => {\n\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t})\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<ChartComponentOptions, any>): void {\n\t\t//when a section is replaced with another section with the same content (but from a different study), mithril js will not reload this ChartView but call onupdate instead\n\t\tconst promise = vNode.attrs.promise\n\t\tconst chart = vNode.attrs.chart\n\t\tconst noSort = vNode.attrs.noSort\n\t\t\n\t\tif(chart != this.chart) {\n\t\t\tthis.chart = chart\n\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t\tthis.promiseObserverId?.removeObserver()\n\t\t\t\n\t\t\tthis.promiseObserverId = promise.addObserver(() => {\n\t\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t\t})\n\t\t}\n\t}\n\t\n\tpublic onremove(): void {\n\t\tthis.promiseObserverId?.removeObserver()\n\t}\n\t\n\tpublic view(vNode: VnodeDOM<ChartComponentOptions, any>): Vnode<any, any> {\n\t\treturn <div class={`chartView center ${vNode.attrs.className ?? \"\"}`}>\n\t\t\t<div class={`chartViewWindow ${this.enabled ? \"fadeIn\" : \"\"}`}></div>\n\t\t\t{!this.enabled &&\n\t\t\t\tLoadingSpinner()\n\t\t\t}\n\t\t</div>\n\t}\n}\n\nexport function ChartView(chart: ChartData, promise: ObservablePromise<LoadedStatistics>, noSort: boolean = false) {\n\treturn m(ChartComponent, {\n\t\tchart: chart,\n\t\tpromise: promise,\n\t\tnoSort: noSort\n\t})\n}","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n"],"names":["value","parent","key","keyName","backingField","reCalcIsDifferent","_","createJson","isDifferent","get","this","set","silently","hasMutated","setValue","Promise","resolve","section","serverStatistics","appTypeChart","createAppTypeChart","dailyQuestionnaireChart","createDailyQuestionnaireChart","dailyJoinedChart","createDailyJoinedChart","weekdaysQuestionnaireChart","createWeekdaysQuestionnaireChart","weekdaysJoinedChart","createWeekdaysJoinedChart","appTypePromise","createChartPromise","storageType","data","total","android","ios","web","entryCount","timeInterval","dailyQuestionnairePromise","createDailyStatisticsEntry","dailyJoinedPromise","weekdaysQuestionnairePromise","createWeeklyStatisticsEntry","weekdaysJoinedPromise","preLoad","_section","loadJson","titleExtra","reload","bind","variable","entries","mainStatistics","type","week","subVariable","statisticsData","count","days","timestamp","entry","hasOwnProperty","sum","title","publicVariables","axisContainer","xAxis","conditions","yAxis","variableName","observedVariableIndex","valueType","dataType","chartType","createDailyAppVersionChart","appVersionAxisContainer","label","color","getView","content","class","getWithColon","studies","questionnaire","users","dailyAppVersionPromise","dailyAppVersionChart","Date","created","toLocaleDateString","preInit","hasAlternatives","getAlternatives","getDynamic","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","id","studyLoader","getStudies","getCount","getFirst","getEntry","getStudyOrThrow","study","Error","getQuestionnaireOrNull","qId","questionnaires","internalId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","getUrl","depth","getHash","goTo","target","window","location","hash","newSection","destroy","BtnCustom","icon","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","enabled","drawGraph","chart","promise","noSort","view","chartView","hasChildNodes","removeChild","lastChild","chartViewBox","additionalStatistics","oncreate","vNode","attrs","dom","getElementsByClassName","promiseObserverId","addObserver","onupdate","removeObserver","onremove","className","ChartView","ChartComponent","DashElementView","options","classString","floatingRight","floating","small","highlight","disabled","template","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","href","DashTemplateView","startsWith","showAsClickable","getNewClassString","size","oldClassString","DashElement","length","map","option","DashRow","imageRecord","Android","iOS","Web","onPointerEnter","e","onPointerLeave","NotCompatibleIcon","translationRecord","Lang","devices","device","join","onpointerenter","onpointerleave"],"sourceRoot":""}