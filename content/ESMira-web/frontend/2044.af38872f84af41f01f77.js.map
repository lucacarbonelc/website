{"version":3,"file":"2044.af38872f84af41f01f77.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/triggerEdit.tsx","webpack://ESMira/./src/frontend/ts/constants/actions.ts","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/ObservableLangChooser.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx","webpack://ESMira/./src/frontend/langCodes/ lazy ^\\.\\/.*\\.json$ namespace object"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {Lang} from \"../singletons/Lang\";\nimport {ObservableLangChooser} from \"../widgets/ObservableLangChooser\";\nimport {BindObservable, BooleanTransformer, TimeTransformer, Transformer} from \"../widgets/BindObservable\";\nimport {ActionTrigger} from \"../data/study/ActionTrigger\";\nimport {Schedule} from \"../data/study/Schedule\";\nimport {EventTrigger} from \"../data/study/EventTrigger\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {ACTION_INVITATION} from \"../constants/actions\";\nimport {NotCompatibleIcon} from \"../widgets/NotCompatibleIcon\";\nimport {SignalTime} from \"../data/study/SignalTime\";\nimport {Section} from \"../site/Section\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {Action} from \"../data/study/Action\";\nimport {Study} from \"../data/study/Study\";\nimport {BtnAdd, BtnCopy, BtnTrash} from \"../widgets/BtnWidgets\";\n\nclass SpecificQuestionnaireTransformer implements Transformer {\n\tprivate readonly eventTrigger: EventTrigger\n\tconstructor(eventTrigger: EventTrigger) {\n\t\tthis.eventTrigger = eventTrigger\n\t}\n\tpublic toAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t}\n\tpublic toObs(value: string): PrimitiveType {\n\t\tif(!value)\n\t\t\tthis.eventTrigger.specificQuestionnaireInternalId.set(-1)\n\t\treturn value\n\t}\n}\n\nclass CombinedValueTransformer implements Transformer {\n\tprivate readonly index: number\n\tconstructor(index: number) {\n\t\tthis.index = 1 << index\n\t}\n\tpublic toAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn ((value as number) & this.index) == this.index\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<number>): PrimitiveType {\n\t\tif(value)\n\t\t\treturn obs.get() | this.index\n\t\telse\n\t\t\treturn obs.get() - this.index\n\t}\n}\n\nexport class Content extends SectionContent {\n\tprivate editEventAsTitle: boolean = false\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\tpublic title(): string {\n\t\treturn this.editEventAsTitle? Lang.get(\"edit_event\") : Lang.get(\"edit_schedule\")\n\t}\n\t\n\tprivate removeSignalTime(schedule: Schedule, index: number): void {\n\t\tschedule.signalTimes.remove(index)\n\t}\n\tprivate copySignalTime(schedule: Schedule, signalTime: SignalTime, index: number): void {\n\t\tschedule.signalTimes.addCopy(signalTime, index)\n\t}\n\tprivate addSignalTime(schedule: Schedule): void {\n\t\tschedule.signalTimes.push({})\n\t}\n\t\n\tprivate hasSchedule(actionTrigger: ActionTrigger): boolean {\n\t\treturn actionTrigger.schedules.get().length != 0\n\t}\n\t\n\tprivate getActionView(study: Study, action: Action): (Vnode<any, any> | false )[] {\n\t\treturn [\n\t\t\tDashElement(\"stretched\", {\n\t\t\t\tcontent:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t<small>{Lang.get(\"action\")}</small>\n\t\t\t\t\t\t\t<select class=\"big\" {... BindObservable(action.type)}>\n\t\t\t\t\t\t\t\t<option value=\"1\">{Lang.get(\"action_invitation\")}</option>\n\t\t\t\t\t\t\t\t<option value=\"2\">{Lang.get(\"action_msg\")}</option>\n\t\t\t\t\t\t\t\t<option value=\"3\">{Lang.get(\"action_notification\")}</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t}),\n\t\t\taction.type.get() == ACTION_INVITATION && DashElement(\"vertical\",\n\t\t\t\t{\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"number_of_reminders\")}</small>\n\t\t\t\t\t\t\t\t<input min=\"0\" type=\"number\" {... BindObservable(action.reminder_count)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\taction.reminder_count.get() != 0 && {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"time_delay\")}</small>\n\t\t\t\t\t\t\t\t<input min=\"0\" type=\"number\" {...BindObservable(action.reminder_delay_minu)}/>\n\t\t\t\t\t\t\t\t<span>{Lang.get(\"minutes\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(null, action.reminder_count.get() != 0 && {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"timeout_after_last_reminder\")}</small>\n\t\t\t\t\t\t\t\t<input min=\"0\" type=\"number\" {... BindObservable(action.timeout)}/>\n\t\t\t\t\t\t\t\t<span class=\"spacingRight\">{Lang.get(\"minutes\")}</span>\n\t\t\t\t\t\t\t\t{NotCompatibleIcon(\"iOS\", \"Web\")}\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"info_timeout_notifications\")}</small>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\tDashElement(\"stretched\", {\n\t\t\t\tcontent:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label class=\"line\">\n\t\t\t\t\t\t\t<small>{Lang.get(\"message\")}</small>\n\t\t\t\t\t\t\t<textarea {...BindObservable(action.msgText)}></textarea>\n\t\t\t\t\t\t\t{ObservableLangChooser(study)}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t})\n\t\t]\n\t}\n\t\n\tprivate getEventView(actionTrigger: ActionTrigger): Vnode<any, any> {\n\t\tconst event = actionTrigger.eventTriggers.get()[0]\n\t\tconst action = actionTrigger.actions.get()[0]\n\t\tconst study = this.getStudyOrThrow()\n\t\tthis.editEventAsTitle = true\n\t\t\n\t\treturn <div>\n\t\t\t{DashRow(\n\t\t\t\tDashElement(null,\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"event\")}</small>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<select {...BindObservable(event.cueCode)}>\n\t\t\t\t\t\t\t\t\t\t<option>actions_executed</option>\n\t\t\t\t\t\t\t\t\t\t<option>invitation</option>\n\t\t\t\t\t\t\t\t\t\t<option>invitation_missed</option>\n\t\t\t\t\t\t\t\t\t\t<option>joined</option>\n\t\t\t\t\t\t\t\t\t\t<option>quit</option>\n\t\t\t\t\t\t\t\t\t\t<option>questionnaire</option>\n\t\t\t\t\t\t\t\t\t\t<option>rejoined</option>\n\t\t\t\t\t\t\t\t\t\t<option>reminder</option>\n\t\t\t\t\t\t\t\t\t\t<option>schedule_changed</option>\n\t\t\t\t\t\t\t\t\t\t<option>statistic_viewed</option>\n\t\t\t\t\t\t\t\t\t\t<option>study_message</option>\n\t\t\t\t\t\t\t\t\t\t<option>study_updated</option>\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tDashElement(null,\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t\t<span>{Lang.get(\"delay\")}</span>\n\t\t\t\t\t\t\t\t<label class=\"horizontal spacingLeft spacingRight center\">\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"random\")}</small>\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(event.randomDelay)}/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t{event.randomDelay.get() &&\n\t\t\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"from\")}</small>\n\t\t\t\t\t\t\t\t\t\t<input min=\"0\" type=\"number\" {...BindObservable(event.delayMinimumSec)}/>\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"seconds\")}</small>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<label class=\"horizontal\">\n\t\t\t\t\t\t\t\t\t{event.randomDelay.get() &&\n\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"to\")}</small>\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<input min={event.delayMinimumSec.get()} type=\"number\" {... BindObservable(event.delaySec)}/>\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"seconds\")}</small>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}),\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"vertical noTitle noDesc\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" disabled={event.specificQuestionnaireEnabled.get()} {... BindObservable(event.skipThisQuestionnaire)}/>\n\t\t\t\t\t\t\t\t<span style={`color:${event.specificQuestionnaireEnabled.get() ? 'lightgray' : 'inherit'}`}>{Lang.get(\"desc_skip_this_questionnaire\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label class=\"vertical noDesc\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(event.specificQuestionnaireEnabled, new SpecificQuestionnaireTransformer(event))}/>\n\t\t\t\t\t\t\t\t<span>{Lang.get(\"desc_specific_questionnaire\")}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t{event.specificQuestionnaireEnabled.get() &&\n\t\t\t\t\t\t\t\t<label class=\"vertical noDesc\">\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"questionnaire\")}</small>\n\t\t\t\t\t\t\t\t\t<select {... BindObservable(event.specificQuestionnaireInternalId)}>\n\t\t\t\t\t\t\t\t\t\t{study.questionnaires.get().map((questionnaire) =>\n\t\t\t\t\t\t\t\t\t\t\t<option value={questionnaire.internalId.get()}>{questionnaire.getTitle()}</option>)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t)}\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"action\"))}\n\t\t\t{DashRow(...this.getActionView(study, action))}\n\t\t</div>\n\t}\n\t\n\tprivate getSignalTimeView(schedule: Schedule, signalTime: SignalTime, index: number): Vnode<any, any> {\n\t\treturn <div class=\"nowrap\">\n\t\t\t<label class=\"horizontal middle center\">\n\t\t\t\t<small class=\"smallText\">{Lang.get(\"random\")}</small>\n\t\t\t\t<input type=\"checkbox\" {...BindObservable(signalTime.random)}/>\n\t\t\t</label>\n\t\t\t\n\t\t\t{signalTime.random.get() &&\n\t\t\t\t<label class=\"horizontal middle spacingLeft\">\n\t\t\t\t\t<small>{Lang.get(\"random_fixed\")}</small>\n\t\t\t\t\t<select {...BindObservable(signalTime.randomFixed, BooleanTransformer)}>\n\t\t\t\t\t\t<option value=\"1\">{Lang.get(\"random_fixed_true\")}</option>\n\t\t\t\t\t\t<option value=\"0\">{Lang.get(\"random_fixed_false\")}</option>\n\t\t\t\t\t</select>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t<label class=\"horizontal middle spacingLeft\">\n\t\t\t\t<small>{signalTime.random.get() ? Lang.get(\"startTime\") : Lang.get(\"time\")}</small>\n\t\t\t\t<input type=\"time\" {...BindObservable(signalTime.startTimeOfDay, TimeTransformer)}/>\n\t\t\t</label>\n\t\t\t\n\t\t\t{signalTime.random.get() &&\n\t\t\t\t<label class=\"horizontal middle spacingLeft\">\n\t\t\t\t\t<small>{Lang.get(\"endTime\")}</small>\n\t\t\t\t\t<input type=\"time\" {...BindObservable(signalTime.endTimeOfDay, TimeTransformer)}/>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t\n\t\t\t{signalTime.random.get() &&\n\t\t\t\t<label class=\"horizontal middle spacingLeft\">\n\t\t\t\t\t<small>{Lang.get(\"frequency\")}</small>\n\t\t\t\t\t<input type=\"number\" min=\"1\" {...BindObservable(signalTime.frequency)}/>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t\n\t\t\t{signalTime.random.get() && signalTime.frequency.get() > 1 &&\n\t\t\t\t<label class=\"horizontal middle spacingLeft\">\n\t\t\t\t\t<small>{Lang.get(\"minutes_between\")}</small>\n\t\t\t\t\t<input type=\"number\" min=\"0\" {...BindObservable(signalTime.minutesBetween)}/>\n\t\t\t\t\t<span>{Lang.get(\"minutes\")}</span>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t\n\t\t\t{BtnCopy(this.copySignalTime.bind(this, schedule, signalTime, index))}\n\t\t\t{BtnTrash(this.removeSignalTime.bind(this, schedule, index))}\n\t\t</div>\n\t}\n\t\n\t/**\n\t * Note: Triggers are implemented so that each could hold MULTIPLE schedules, cues and actions.\n\t * But since I suspect that this will not be used often, and it is easier to grasp for configuration, I removed that functionality in the admin panel\n\t */\n\tprivate getScheduleView(actionTrigger: ActionTrigger): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tconst schedule = actionTrigger.schedules.get()[0]\n\t\tconst action = actionTrigger.actions.get()[0]\n\t\t\n\t\treturn <div>\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"stretched\",\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t\t<label class=\"spacingLeft\">\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"repeat_every\")}</small>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" min=\"1\" {... BindObservable(schedule.dailyRepeatRate)}/>\n\t\t\t\t\t\t\t\t\t<span>{Lang.get(\"days\")}</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<label class=\"spacingLeft\">\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(schedule.skipFirstInLoop)}/>\n\t\t\t\t\t\t\t\t\t<span>{Lang.get(\"wait_x_days_until_first\", schedule.dailyRepeatRate.get())}</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}),\n\t\t\t\tDashElement(null,\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t<label class=\"vertical\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"dayOfMonth\")}</small>\n\t\t\t\t\t\t\t\t<select {...BindObservable(schedule.dayOfMonth)}>\n\t\t\t\t\t\t\t\t\t<option value=\"0\">{Lang.get(\"all\")}</option>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tArray.from({length: 30}).map((_, index) => {\n\t\t\t\t\t\t\t\t\t\t\treturn <option>{index + 1}</option>\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tDashElement(null,\n\t\t\t\t\t{\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<div class=\"fakeLabel\">\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"weekdays_desc\")}</small>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekday_all\">{Lang.get(\"all\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekday_sun\">{Lang.get(\"weekday_sun\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_mo\">{Lang.get(\"weekday_mon\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_di\">{Lang.get(\"weekday_tue\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_mi\">{Lang.get(\"weekday_wed\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_do\">{Lang.get(\"weekday_thu\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_fr\">{Lang.get(\"weekday_fri\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"horizontalPadding\"><label htmlFor=\"weekdays_sa\">{Lang.get(\"weekday_sat\")}</label></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"weekday_all\" disabled=\"disabled\" checked={schedule.weekdays.get() == 0}/>\n\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekday_sun\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(0), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_mo\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(1), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_di\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(2), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_mi\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(3), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_do\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(4), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_fr\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(5), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"center\"><input type=\"checkbox\" id=\"weekdays_sa\" {... BindObservable(schedule.weekdays, new CombinedValueTransformer(6), \"checked\")}/></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t})\n\t\t\t)}\n\t\t\t{TitleRow(\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"flexGrow flexCenter\">{Lang.getWithColon(\"times_of_day\")}</span>\n\t\t\t\t\t<label class=\"noTitle noDesc\">\n\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(schedule.userEditable)}/>\n\t\t\t\t\t\t<span>{Lang.get(\"userEditable_desc\")}</span>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t\t<div>\n\t\t\t\t<div class=\"listParent\">\n\t\t\t\t\t<div class=\"listChild coloredLines\" id=\"signalTimes\">\n\t\t\t\t\t\t{schedule.signalTimes.get().map((signalTime, index) =>\n\t\t\t\t\t\t\tthis.getSignalTimeView(schedule, signalTime, index)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{BtnAdd(this.addSignalTime.bind(this, schedule), Lang.get(\"add_signalTime\"))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"action\"))}\n\t\t\t{DashRow(... this.getActionView(study, action))}\n\t\t</div>\n\t}\n\t\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst triggerI = this.getStaticInt(\"triggerI\")\n\t\tif(triggerI == null)\n\t\t\tthrow new Error(\"Trigger does not exist\")\n\t\t\n\t\tconst questionnaire = this.getQuestionnaireOrThrow()\n\t\tconst actionTrigger = questionnaire.actionTriggers.get()[triggerI]\n\t\tconst isSchedule = this.hasSchedule(actionTrigger)\n\t\treturn <div>\n\t\t\t{isSchedule && this.getScheduleView(actionTrigger)}\n\t\t\t{!isSchedule && this.getEventView(actionTrigger)}\n\t\t</div>\n\t}\n}","export const ACTION_INVITATION = 1\nexport const ACTION_MESSAGE = 2\nexport const ACTION_NOTIFICATION = 3","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport {TranslationRootInterface} from \"../observable/interfaces/TranslationRootInterface\";\n\n\nlet langNames: Record<string, string> | null = null\n\nexport function ObservableLangChooser(obs: TranslationRootInterface): Vnode<any, any> {\n\tif(obs.langCodes.get().length <= 1)\n\t\treturn <div></div>\n\telse if(langNames == null) {\n\t\timport(`../../langCodes/${Lang.code}.json`)\n\t\t\t.then((loadedLangNames) => {\n\t\t\t\tlangNames = loadedLangNames\n\t\t\t\tm.redraw()\n\t\t\t})\n\t\treturn <div></div>\n\t}\n\t\n\tconst changeLang = (langCode: string) => {\n\t\tobs.currentLangCode.set(langCode)\n\t\tm.redraw()\n\t}\n\t\n\treturn <div class=\"observableLangChooser\" title={Lang.get(\"language\")}>\n\t\t{\n\t\t\tobs.langCodes.get().map((langCode) =>\n\t\t\t\t<span\n\t\t\t\t\tclass={langCode.get() == obs.currentLangCode.get() ? \"element clickable selected\" : \"element clickable\"}\n\t\t\t\t\tonclick={() => changeLang(langCode.get())}\n\t\t\t\t>{langNames![langCode.get()] ?? langCode.get()}</span>\n\t\t\t)\n\t\t}\n\t</div>\n}","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}","var map = {\n\t\"./de.json\": [\n\t\t5142,\n\t\t5142\n\t],\n\t\"./en.json\": [\n\t\t1294,\n\t\t1294\n\t],\n\t\"./it.json\": [\n\t\t7416,\n\t\t7416\n\t],\n\t\"./tl.json\": [\n\t\t601,\n\t\t601\n\t],\n\t\"./uk.json\": [\n\t\t6541,\n\t\t6541\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 6480;\nmodule.exports = webpackAsyncContext;"],"names":["eventTrigger","this","toAttribute","value","toObs","specificQuestionnaireInternalId","set","index","obs","get","editEventAsTitle","preLoad","section","getStudyPromise","title","Lang","removeSignalTime","schedule","signalTimes","remove","copySignalTime","signalTime","addCopy","addSignalTime","push","hasSchedule","actionTrigger","schedules","length","getActionView","study","action","DashElement","content","class","BindObservable","type","min","reminder_count","reminder_delay_minu","timeout","NotCompatibleIcon","msgText","ObservableLangChooser","getEventView","event","eventTriggers","actions","getStudyOrThrow","DashRow","cueCode","randomDelay","delayMinimumSec","delaySec","disabled","specificQuestionnaireEnabled","skipThisQuestionnaire","style","SpecificQuestionnaireTransformer","questionnaires","map","questionnaire","internalId","getTitle","TitleRow","getWithColon","getSignalTimeView","random","randomFixed","startTimeOfDay","endTimeOfDay","frequency","minutesBetween","bind","getScheduleView","dailyRepeatRate","skipFirstInLoop","dayOfMonth","Array","from","_","htmlFor","id","checked","weekdays","CombinedValueTransformer","userEditable","getView","triggerI","getStaticInt","Error","getQuestionnaireOrThrow","actionTriggers","isSchedule","SectionContent","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticString","getStudyOrNull","studies","studyLoader","getStudies","getCount","getFirst","getEntry","getQuestionnaireOrNull","qId","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","getUrl","depth","getHash","goTo","target","window","location","hash","newSection","destroy","OptimusPrimeTransformer","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","BooleanTransformer","DateTransformer","intValue","toString","Date","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","transformer","attr","attrValue","e","element","BtnCustom","icon","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","view","classString","floatingRight","floating","small","highlight","template","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","href","DashTemplateView","startsWith","showAsClickable","attrs","hasOwnProperty","getNewClassString","size","oldClassString","option","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","translationRecord","devices","device","join","onpointerenter","onpointerleave","langNames","langCodes","code","then","loadedLangNames","langCode","currentLangCode","changeLang","webpackAsyncContext","req","__webpack_require__","o","ids","t","keys","Object","module","exports"],"sourceRoot":""}