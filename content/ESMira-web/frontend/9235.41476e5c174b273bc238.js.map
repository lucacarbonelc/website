{"version":3,"file":"9235.41476e5c174b273bc238.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/myAccount.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/ChangeAccount.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {ChangeAccount} from \"../widgets/ChangeAccount\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {Requests} from \"../singletons/Requests\";\nimport {FILE_ADMIN} from \"../constants/urls\";\nimport {DropdownMenu} from \"../widgets/DropdownMenu\";\nimport {BtnTrash} from \"../widgets/BtnWidgets\";\n\ninterface LoginToken {\n\tlastUsed: number\n\ttokenId: string\n\tcurrent: boolean\n}\n\nexport class Content extends SectionContent {\n\tprivate loginToken: LoginToken[]\n\t\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tRequests.loadJson(`${FILE_ADMIN}?type=GetTokenList`)\n\t\t]\n\t}\n\tconstructor(section: Section, loginToken: LoginToken[]) {\n\t\tsuper(section)\n\t\t\n\t\tthis.sortLoginToken(loginToken)\n\t\tthis.loginToken = loginToken\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"edit_user_account\")\n\t}\n\t\n\tprivate sortLoginToken(loginToken: LoginToken[]): void {\n\t\tloginToken.sort(function(a, b) {\n\t\t\tif(a.lastUsed < b.lastUsed)\n\t\t\t\treturn 1\n\t\t\telse if(a.lastUsed == b.lastUsed)\n\t\t\t\treturn 0\n\t\t\telse\n\t\t\t\treturn -1\n\t\t})\n\t}\n\t\n\tprivate async changeAccountName(): Promise<void> {\n\t\tconst oldAccountName = this.getTools().accountName\n\t\tconst newAccountName = prompt(Lang.get(\"prompt_newUsername\"), oldAccountName)\n\t\tif(!newAccountName)\n\t\t\treturn\n\t\t\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ChangeAccountName`,\n\t\t\t\"post\",\n\t\t\t`accountName=${oldAccountName}&new_account=${newAccountName}`\n\t\t)\n\t\tthis.getTools().accountName = oldAccountName\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"));\n\t}\n\tprivate async changePassword(password: string): Promise<void> {\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ChangePassword`,\n\t\t\t\"post\",\n\t\t\t`accountName=${this.getTools().accountName}&new_pass=${password}`\n\t\t)\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async removeLoginToken(loginToken: LoginToken): Promise<void> {\n\t\tif(!confirm())\n\t\t\treturn\n\t\t\n\t\tconst newLoginToken = await this.section.loader.loadJson(`${FILE_ADMIN}?type=RemoveToken`, \"post\", `token_id=${loginToken.tokenId}`)\n\t\tthis.sortLoginToken(newLoginToken)\n\t\tthis.loginToken = newLoginToken\n\t\t\n\t\tm.redraw()\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<p class=\"clickable vertical\" onclick={this.changeAccountName.bind(this)}>{Lang.get(\"change_username\")}</p>\n\t\t\t\n\t\t\t{DropdownMenu(\"changePassword\",\n\t\t\t\t<p class=\"clickable vertical\">{Lang.get(\"change_password\")}</p>,\n\t\t\t\t(close) =>\n\t\t\t\t\tChangeAccount(\n\t\t\t\t\t\tasync (_accountName, password) => {\n\t\t\t\t\t\t\tawait this.changePassword(password)\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(msg) => { this.section.loader.error(msg) },\n\t\t\t\t\t\tthis.getTools().accountName,\n\t\t\t\t\t\tLang.get(\"change_password\")\n\t\t\t\t\t)\n\t\t\t)}\n\t\t\t\n\t\t\t<a href={this.getUrl(\"dataView:logins\")}>{Lang.get(\"login_history\")}</a>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t{TitleRow(Lang.getWithColon(\"remember_me_token\"))}\n\t\t\t\n\t\t\t{this.loginToken.map((loginToken) =>\n\t\t\t\t<div class=\"spacingBottom\">\n\t\t\t\t\t{BtnTrash(this.removeLoginToken.bind(this, loginToken))}\n\t\t\t\t\t<div class=\"horizontal\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span>{Lang.getWithColon(\"last_used\")}</span>\n\t\t\t\t\t\t\t<span class=\"highlight\">{(new Date(loginToken.lastUsed*1000)).toLocaleString()}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"smallText\">{loginToken.tokenId}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{ loginToken.current &&\n\t\t\t\t\t\t<span class=\"infoSticker highlight\">{Lang.get(\"this\")}</span>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {BindObservable} from \"./BindObservable\";\n\nconst ACCOUNTNAME_MIN_LENGTH = 3;\nconst PASSWORD_MIN_LENGTH = 12;\n\nconst neutralStyle = \"background-color: transparent\"\nconst failStyle = \"background-color: #ffe1d5\"\nconst successStyle = \"background-color: #dfd\"\n\nclass InputStyleData {\n\tmsg: string = \"\"\n\tstyle: typeof neutralStyle | typeof failStyle | typeof successStyle = neutralStyle\n}\n\ninterface AccountChangerComponentOptions {\n\tonFinish: (accountName: string, password: string) => Promise<boolean>\n\tonError: (msg: string) => void\n\taccountName?: string\n\tbtnLabel: string\n}\nclass AccountChangerComponent implements Component<AccountChangerComponentOptions, any> {\n\tprivate needsAccountName: boolean = false\n\tprivate readonly accountName: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"accountName\")\n\tprivate readonly password: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"password\")\n\tprivate readonly passwordRepeat: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"passwordRepeat\")\n\tprivate accountNameStyle = new InputStyleData()\n\tprivate passStyle = new InputStyleData()\n\tprivate passRepeatStyle = new InputStyleData()\n\tprivate formEnabled: boolean = false\n\t\n\tpublic oncreate(vNode: VnodeDOM<AccountChangerComponentOptions, any>): void {\n\t\tconst accountName = vNode.attrs.accountName\n\t\tthis.needsAccountName = !accountName\n\t\t\n\t\tif(accountName)\n\t\t\tthis.accountName.set(accountName)\n\t\t\n\t\tthis.accountName.addObserver(() => {\n\t\t\tthis.accountNameStyle = this.lengthCheck(this.accountName.get(), ACCOUNTNAME_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t\tthis.password.addObserver(() => {\n\t\t\tthis.passStyle = this.lengthCheck(this.password.get(), PASSWORD_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t\tthis.passwordRepeat.addObserver(() => {\n\t\t\tthis.passRepeatStyle = this.password.get() != this.passwordRepeat.get()\n\t\t\t\t? { msg: \"\", style: failStyle }\n\t\t\t\t: this.lengthCheck(this.passwordRepeat.get(), PASSWORD_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t}\n\t\n\tprivate lengthCheck(value: string, minLength: number): InputStyleData {\n\t\tif(!value.length)\n\t\t\treturn { msg: \"\", style: neutralStyle }\n\t\telse if(value.length < minLength)\n\t\t\treturn { msg: Lang.get(\"minimal_length\", minLength), style: failStyle }\n\t\telse\n\t\t\treturn { msg: \"\", style: successStyle }\n\t}\n\t\n\tprivate tryEnableForm(): void {\n\t\tthis.formEnabled = (!this.needsAccountName || this.accountNameStyle.style == successStyle) && this.passStyle.style == successStyle && this.passRepeatStyle.style == successStyle\n\t}\n\t\n\tprivate async submitForm(onFinish: (accountName: string, password: string) => Promise<boolean>, onError: (msg: string) => void, e: InputEvent): Promise<any> {\n\t\te.preventDefault()\n\t\tif(this.accountName.get().length < 3)\n\t\t\tonError(Lang.get('error_short_username'))\n\t\telse if(this.password.get().length < PASSWORD_MIN_LENGTH)\n\t\t\tonError(Lang.get('error_bad_password'))\n\t\telse {\n\t\t\tconst response = await onFinish(this.accountName.get(), this.password.get())\n\t\t\tif(response) {\n\t\t\t\tif(this.needsAccountName)\n\t\t\t\t\tthis.accountName.set(\"\")\n\t\t\t\tthis.password.set(\"\")\n\t\t\t\tthis.passwordRepeat.set(\"\")\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic view(vNode: Vnode<AccountChangerComponentOptions, any>): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<form method=\"post\" action=\"\" class=\"nowrap\" onsubmit={this.submitForm.bind(this, vNode.attrs.onFinish, vNode.attrs.onError)}>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t{this.needsAccountName &&\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<small>{Lang.get(\"username\")}</small>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tautocomplete=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\" {... BindObservable(this.accountName)}\n\t\t\t\t\t\t\t\tstyle={this.accountNameStyle.style}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<small>{this.accountNameStyle.msg}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t<label class=\"noDesc\">\n\t\t\t\t\t\t<small>{Lang.get(\"password\")}</small>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tstyle={this.passStyle.style}\n\t\t\t\t\t\t\t{... BindObservable(this.password, undefined, undefined, \"onkeyup\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>{this.passStyle.msg}</small>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<small>{Lang.get(\"repeat_password\")}</small>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tstyle={this.passRepeatStyle.style}\n\t\t\t\t\t\t\t{... BindObservable(this.passwordRepeat, undefined, undefined, \"onkeyup\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>{this.passRepeatStyle.msg}</small>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t<input type=\"submit\" value={vNode.attrs.btnLabel} disabled={!this.formEnabled}/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t}\n}\n\nexport function ChangeAccount(\n\tonFinish: (accountName: string, password: string) => Promise<boolean>,\n\tonError: (msg: string) => void,\n\taccountName?: string,\n\tbtnLabel: string = Lang.get(\"save\")\n): Vnode<any, any> {\n\treturn m(AccountChangerComponent, {\n\t\tonFinish: onFinish,\n\t\tonError: onError,\n\t\taccountName: accountName,\n\t\tbtnLabel: btnLabel\n\t})\n}","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["section","loginToken","sortLoginToken","preLoad","_section","loadJson","title","get","sort","a","b","lastUsed","changeAccountName","oldAccountName","this","getTools","accountName","newAccountName","prompt","loader","info","changePassword","password","removeLoginToken","confirm","tokenId","newLoginToken","getView","class","onclick","bind","close","_accountName","msg","error","href","getUrl","getWithColon","map","Date","toLocaleString","current","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","id","studies","studyLoader","getStudies","getCount","getFirst","getEntry","getStudyOrThrow","study","Error","getQuestionnaireOrNull","qId","questionnaires","questionnaire","internalId","getQuestionnaireOrThrow","getAdmin","hasPermission","name","studyId","isLoggedIn","depth","getHash","goTo","target","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","value","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","BindObservable","transformer","attr","event","attrValue","e","element","set","BtnCustom","icon","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","neutralStyle","failStyle","successStyle","style","needsAccountName","passwordRepeat","accountNameStyle","InputStyleData","passStyle","passRepeatStyle","formEnabled","oncreate","vNode","attrs","addObserver","lengthCheck","tryEnableForm","minLength","length","submitForm","onFinish","onError","preventDefault","view","method","action","onsubmit","autocomplete","type","undefined","btnLabel","disabled","ChangeAccount","AccountChangerComponent","TitleRow"],"sourceRoot":""}