{"version":3,"file":"5010.9e3f86fad9352767f37c.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/accountView.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/ChangeAccount.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {FILE_ADMIN} from \"../constants/urls\";\nimport {Account} from \"../data/accounts/Account\";\nimport {ChangeAccount} from \"../widgets/ChangeAccount\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {closeDropdown, DropdownMenu} from \"../widgets/DropdownMenu\";\nimport {AccountsLoader} from \"../loader/AccountsLoader\";\nimport {BtnAdd, BtnTrash} from \"../widgets/BtnWidgets\";\n\nexport class Content extends SectionContent {\n\tprivate accountsLoader: AccountsLoader\n\tprivate readonly isOwnAccount: boolean\n\tprivate showPasswordField = false\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tsection.getTools().accountsLoader.init(),\n\t\t\tsection.getStrippedStudyListPromise()\n\t\t]\n\t}\n\tconstructor(section: Section, accountsLoader: AccountsLoader) {\n\t\tsuper(section)\n\t\tthis.accountsLoader = accountsLoader\n\t\tconst account = this.getAccount()\n\t\tthis.isOwnAccount = account.accountName.get() == this.getTools().accountName\n\t\t\n\t\taccount.admin.addObserver(this.toggleAdmin.bind(this))\n\t\taccount.create.addObserver(this.toggleCreate.bind(this))\n\t}\n\t\n\tpublic title(): string {\n\t\treturn this.getAccount().accountName.get()\n\t}\n\t\n\tprivate getAccount(): Account {\n\t\treturn this.accountsLoader.getAccounts()[this.getStaticInt(\"accountI\") ?? 0]\n\t}\n\t\n\tprivate async changeUsername(account: Account): Promise<void> {\n\t\tconst oldAccountName = account.accountName.get()\n\t\tconst newAccountName = prompt(Lang.get(\"prompt_newUsername\"), oldAccountName)\n\t\tif(!newAccountName)\n\t\t\treturn\n\t\t\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ChangeAccountName`,\n\t\t\t\"post\",\n\t\t\t`accountName=${oldAccountName}&new_account=${newAccountName}`\n\t\t)\n\t\tif(this.isOwnAccount)\n\t\t\tthis.getTools().accountName = oldAccountName\n\t\t\n\t\taccount.accountName.set(newAccountName)\n\t\t\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"));\n\t}\n\t\n\tprivate async changePassword(account: Account, password: string): Promise<void> {\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ChangePassword`,\n\t\t\t\"post\",\n\t\t\t`accountName=${account.accountName.get()}&new_pass=${password}`\n\t\t)\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async toggleAdmin(): Promise<any> {\n\t\tconst account = this.getAccount()\n\t\tif(this.isOwnAccount) {\n\t\t\taccount.admin.set(true)\n\t\t\treturn\n\t\t}\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ToggleAccountPermission`,\n\t\t\t\"post\",\n\t\t\t`accountName=${account.accountName.get()}&admin=${(account.admin.get() ? \"1\" : \"0\")}`\n\t\t)\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async toggleCreate(): Promise<void> {\n\t\tconst account = this.getAccount()\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=ToggleAccountPermission`,\n\t\t\t\"post\",\n\t\t\t`accountName=${account.accountName.get()}&create=${(account.create.get() ? \"1\" : \"0\")}`\n\t\t)\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async addPermission(account: Account, permissionName: keyof AccountPermissions, studyId: number): Promise<void> {\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=AddStudyPermission`,\n\t\t\t\"post\",\n\t\t\t`accountName=${account.accountName.get()}&permission=${permissionName}&study_id=${studyId}`\n\t\t)\n\t\t\n\t\tif(this.isOwnAccount) {\n\t\t\tconst tools = this.getTools()\n\t\t\tconst permissions = tools.permissions\n\t\t\tconst selectedPermissions = permissions[permissionName]\n\t\t\t\n\t\t\tselectedPermissions.push(studyId)\n\t\t\tif(permissionName == \"publish\" && permissions.write.indexOf(studyId) == -1)\n\t\t\t\tpermissions.write.push(studyId)\n\t\t}\n\t\tconst list = account[permissionName]\n\t\tlist.push(studyId)\n\t\tif(permissionName == \"publish\" && account.write.indexOf(studyId) == -1)\n\t\t\taccount.write.push(studyId)\n\t\tcloseDropdown(\"addPermission\")\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async removePermission(account: Account, permissionName: keyof AccountPermissions, studyId: number): Promise<void> {\n\t\tawait this.section.loader.loadJson(\n\t\t\t`${FILE_ADMIN}?type=DeleteStudyPermission`,\n\t\t\t\"post\",\n\t\t\t`accountName=${account.accountName.get()}&permission=${permissionName}&study_id=${studyId}`\n\t\t)\n\t\tif(this.isOwnAccount) {\n\t\t\tconst permissions = this.getTools().permissions[permissionName]\n\t\t\tconst i = permissions?.indexOf(studyId) ?? -1\n\t\t\tif(i != -1)\n\t\t\t\tpermissions?.splice(i, 1)\n\t\t}\n\t\t\n\t\tconst list = account[permissionName]\n\t\tconst index = list.indexOf(studyId)\n\t\tif(index != -1)\n\t\t\tlist.remove(index)\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst account = this.getAccount()\n\t\treturn <div>\n\t\t\t<p class=\"clickable vertical\" onclick={this.changeUsername.bind(this, account)}>{Lang.get(\"change_username\")}</p>\n\t\t\t\n\t\t\t{DropdownMenu(\"changePassword\",\n\t\t\t\t<p class=\"clickable vertical\">{Lang.get(\"change_password\")}</p>,\n\t\t\t\t(close) =>\n\t\t\t\t\tChangeAccount(\n\t\t\t\t\t\tasync (_accountName, password) => {\n\t\t\t\t\t\t\tawait this.changePassword(account, password)\n\t\t\t\t\t\t\tclose()\n\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(msg) => { this.section.loader.error(msg) },\n\t\t\t\t\t\taccount.accountName.get(),\n\t\t\t\t\t\tLang.get(\"change_password\")\n\t\t\t\t\t)\n\t\t\t)}\n\t\t\t\n\t\t\t\n\t\t\t<label class=\"vertical noTitle noDesc\">\n\t\t\t\t<input type=\"checkbox\" {... BindObservable(account.admin)}/>\n\t\t\t\t<span>{Lang.get(\"permissions_admin\")}</span>\n\t\t\t</label>\n\t\t\t{!account.admin.get() &&\n\t\t\t\t<label class=\"vertical noTitle noDesc\">\n\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(account.create)}/>\n\t\t\t\t\t<span>{Lang.get(\"permissions_create\")}</span>\n\t\t\t\t</label>\n\t\t\t}\n\t\t\t\n\t\t\t{this.getListPermissionView(account, Lang.getWithColon(\"permissions_publish\"), \"publish\")}\n\t\t\t{this.getListPermissionView(account, Lang.getWithColon(\"permissions_write\"), \"write\")}\n\t\t\t{this.getListPermissionView(account, Lang.getWithColon(\"permissions_msg\"), \"msg\")}\n\t\t\t{this.getListPermissionView(account, Lang.getWithColon(\"permissions_read\"), \"read\")}\n\t\t</div>\n\t}\n\t\n\tprivate getListPermissionView(account: Account, title: string, permissionName: keyof AccountPermissions): Vnode<any, any> {\n\t\tconst permission = account[permissionName]\n\t\t\n\t\treturn <div>\n\t\t\t{TitleRow(title)}\n\t\t\t<div class=\"listParent\">\n\t\t\t\t{account.admin.get()\n\t\t\t\t\t? m.trust(\"&#10004;\")\n\t\t\t\t\t: <div>\n\t\t\t\t\t\t<div class=\"listChild\">\n\t\t\t\t\t\t\t{ permission.get().map((obs) => {\n\t\t\t\t\t\t\t\tconst studyId = obs.get()\n\t\t\t\t\t\t\t\treturn <div>\n\t\t\t\t\t\t\t\t\t{BtnTrash(this.removePermission.bind(this, account, permissionName, studyId))}\n\t\t\t\t\t\t\t\t\t<a class=\"middle\" href={this.getUrl(`studyEdit,id:${studyId}`)}>{this.getStudyOrNull(studyId)?.title.get() ?? `${Lang.get('unknown')} (${studyId})`}</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{DropdownMenu(\n\t\t\t\t\t\t\t\t\"addPermission\",\n\t\t\t\t\t\t\t\tBtnAdd(),\n\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t<h2>{Lang.get(\"select_a_study\")}</h2>\n\t\t\t\t\t\t\t\t\t\t{this.section.siteData.studyLoader.getSortedStudyList()\n\t\t\t\t\t\t\t\t\t\t\t.filter((study) => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst id = study.id.get()\n\t\t\t\t\t\t\t\t\t\t\t\tfor(const obs of permission.get()) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif(obs.get() == id)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t.map((study) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass={`clickable ${study.published.get() ? \"\" : \"unPublishedStudy\"}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonclick={this.addPermission.bind(this, account, permissionName, study.id.get())}\n\t\t\t\t\t\t\t\t\t\t\t\t>{study.title.get()}</li>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {BindObservable} from \"./BindObservable\";\n\nconst ACCOUNTNAME_MIN_LENGTH = 3;\nconst PASSWORD_MIN_LENGTH = 12;\n\nconst neutralStyle = \"background-color: transparent\"\nconst failStyle = \"background-color: #ffe1d5\"\nconst successStyle = \"background-color: #dfd\"\n\nclass InputStyleData {\n\tmsg: string = \"\"\n\tstyle: typeof neutralStyle | typeof failStyle | typeof successStyle = neutralStyle\n}\n\ninterface AccountChangerComponentOptions {\n\tonFinish: (accountName: string, password: string) => Promise<boolean>\n\tonError: (msg: string) => void\n\taccountName?: string\n\tbtnLabel: string\n}\nclass AccountChangerComponent implements Component<AccountChangerComponentOptions, any> {\n\tprivate needsAccountName: boolean = false\n\tprivate readonly accountName: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"accountName\")\n\tprivate readonly password: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"password\")\n\tprivate readonly passwordRepeat: ObservablePrimitive<string> = new ObservablePrimitive(\"\", null, \"passwordRepeat\")\n\tprivate accountNameStyle = new InputStyleData()\n\tprivate passStyle = new InputStyleData()\n\tprivate passRepeatStyle = new InputStyleData()\n\tprivate formEnabled: boolean = false\n\t\n\tpublic oncreate(vNode: VnodeDOM<AccountChangerComponentOptions, any>): void {\n\t\tconst accountName = vNode.attrs.accountName\n\t\tthis.needsAccountName = !accountName\n\t\t\n\t\tif(accountName)\n\t\t\tthis.accountName.set(accountName)\n\t\t\n\t\tthis.accountName.addObserver(() => {\n\t\t\tthis.accountNameStyle = this.lengthCheck(this.accountName.get(), ACCOUNTNAME_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t\tthis.password.addObserver(() => {\n\t\t\tthis.passStyle = this.lengthCheck(this.password.get(), PASSWORD_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t\tthis.passwordRepeat.addObserver(() => {\n\t\t\tthis.passRepeatStyle = this.password.get() != this.passwordRepeat.get()\n\t\t\t\t? { msg: \"\", style: failStyle }\n\t\t\t\t: this.lengthCheck(this.passwordRepeat.get(), PASSWORD_MIN_LENGTH)\n\t\t\tthis.tryEnableForm()\n\t\t})\n\t}\n\t\n\tprivate lengthCheck(value: string, minLength: number): InputStyleData {\n\t\tif(!value.length)\n\t\t\treturn { msg: \"\", style: neutralStyle }\n\t\telse if(value.length < minLength)\n\t\t\treturn { msg: Lang.get(\"minimal_length\", minLength), style: failStyle }\n\t\telse\n\t\t\treturn { msg: \"\", style: successStyle }\n\t}\n\t\n\tprivate tryEnableForm(): void {\n\t\tthis.formEnabled = (!this.needsAccountName || this.accountNameStyle.style == successStyle) && this.passStyle.style == successStyle && this.passRepeatStyle.style == successStyle\n\t}\n\t\n\tprivate async submitForm(onFinish: (accountName: string, password: string) => Promise<boolean>, onError: (msg: string) => void, e: InputEvent): Promise<any> {\n\t\te.preventDefault()\n\t\tif(this.accountName.get().length < 3)\n\t\t\tonError(Lang.get('error_short_username'))\n\t\telse if(this.password.get().length < PASSWORD_MIN_LENGTH)\n\t\t\tonError(Lang.get('error_bad_password'))\n\t\telse {\n\t\t\tconst response = await onFinish(this.accountName.get(), this.password.get())\n\t\t\tif(response) {\n\t\t\t\tif(this.needsAccountName)\n\t\t\t\t\tthis.accountName.set(\"\")\n\t\t\t\tthis.password.set(\"\")\n\t\t\t\tthis.passwordRepeat.set(\"\")\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic view(vNode: Vnode<AccountChangerComponentOptions, any>): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<form method=\"post\" action=\"\" class=\"nowrap\" onsubmit={this.submitForm.bind(this, vNode.attrs.onFinish, vNode.attrs.onError)}>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t{this.needsAccountName &&\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<small>{Lang.get(\"username\")}</small>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tautocomplete=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\" {... BindObservable(this.accountName)}\n\t\t\t\t\t\t\t\tstyle={this.accountNameStyle.style}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<small>{this.accountNameStyle.msg}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t<label class=\"noDesc\">\n\t\t\t\t\t\t<small>{Lang.get(\"password\")}</small>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tstyle={this.passStyle.style}\n\t\t\t\t\t\t\t{... BindObservable(this.password, undefined, undefined, \"onkeyup\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>{this.passStyle.msg}</small>\n\t\t\t\t\t</label>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<small>{Lang.get(\"repeat_password\")}</small>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautocomplete=\"new-password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tstyle={this.passRepeatStyle.style}\n\t\t\t\t\t\t\t{... BindObservable(this.passwordRepeat, undefined, undefined, \"onkeyup\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<small>{this.passRepeatStyle.msg}</small>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"element\">\n\t\t\t\t\t<input type=\"submit\" value={vNode.attrs.btnLabel} disabled={!this.formEnabled}/>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t}\n}\n\nexport function ChangeAccount(\n\tonFinish: (accountName: string, password: string) => Promise<boolean>,\n\tonError: (msg: string) => void,\n\taccountName?: string,\n\tbtnLabel: string = Lang.get(\"save\")\n): Vnode<any, any> {\n\treturn m(AccountChangerComponent, {\n\t\tonFinish: onFinish,\n\t\tonError: onError,\n\t\taccountName: accountName,\n\t\tbtnLabel: btnLabel\n\t})\n}","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["section","accountsLoader","showPasswordField","account","getAccount","isOwnAccount","accountName","get","getTools","admin","addObserver","toggleAdmin","bind","create","toggleCreate","preLoad","init","getStrippedStudyListPromise","title","this","getAccounts","getStaticInt","changeUsername","oldAccountName","newAccountName","prompt","loader","loadJson","set","info","changePassword","password","addPermission","permissionName","studyId","tools","permissions","push","write","indexOf","removePermission","i","splice","list","index","remove","getView","class","onclick","close","_accountName","msg","error","type","getListPermissionView","getWithColon","permission","map","obs","href","getUrl","getStudyOrNull","siteData","studyLoader","getSortedStudyList","filter","study","id","published","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","dynamicValues","setChild","getStaticString","studies","getStudies","getCount","getFirst","getEntry","getStudyOrThrow","Error","getQuestionnaireOrNull","qId","questionnaires","questionnaire","internalId","getQuestionnaireOrThrow","getAdmin","hasPermission","name","isLoggedIn","depth","getHash","goTo","target","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","value","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","BooleanTransformer","DateTransformer","intValue","toString","Date","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","BindObservable","transformer","attr","event","attrValue","e","element","BtnCustom","icon","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","neutralStyle","failStyle","successStyle","style","needsAccountName","passwordRepeat","accountNameStyle","InputStyleData","passStyle","passRepeatStyle","formEnabled","oncreate","vNode","attrs","lengthCheck","tryEnableForm","minLength","length","submitForm","onFinish","onError","preventDefault","view","method","action","onsubmit","autocomplete","undefined","btnLabel","disabled","ChangeAccount","AccountChangerComponent","TitleRow"],"sourceRoot":""}