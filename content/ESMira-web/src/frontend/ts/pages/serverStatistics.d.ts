import { SectionContent } from "../site/SectionContent";
import { Vnode } from "mithril";
import { Section } from "../site/Section";
import { ChartData } from "../data/study/ChartData";
import { ObservablePromise } from "../observable/ObservablePromise";
import { LoadedStatistics } from "../loader/csv/CsvLoaderCollectionFromCharts";
import { JsonTypes } from "../observable/types/JsonTypes";
import { StatisticsEntry } from "../data/statistics/StatisticsEntry";
import { DayEntry } from "../data/serverStatistics/DayEntry";
import { ServerStatistics } from "../data/serverStatistics/ServerStatistics";
export declare class Content extends SectionContent {
    private readonly serverStatistics;
    private readonly appTypeChart;
    protected dailyAppVersionChart?: ChartData;
    private readonly dailyQuestionnaireChart;
    private readonly dailyJoinedChart;
    private readonly weekdaysQuestionnaireChart;
    private readonly weekdaysJoinedChart;
    private readonly appTypePromise;
    protected dailyAppVersionPromise?: ObservablePromise<LoadedStatistics>;
    private readonly dailyQuestionnairePromise;
    private readonly dailyJoinedPromise;
    private readonly weekdaysQuestionnairePromise;
    private readonly weekdaysJoinedPromise;
    static preLoad(_section: Section): Promise<any>[];
    constructor(section: Section, serverStatistics: ServerStatistics);
    titleExtra(): Vnode<any, any> | null;
    protected createChartPromise(variable: string, entries: StatisticsEntry[]): ObservablePromise<LoadedStatistics>;
    private createWeeklyStatisticsEntry;
    protected createDailyStatisticsEntry(serverStatistics: ServerStatistics, variable: keyof DayEntry, subVariable?: string): StatisticsEntry;
    private createAppTypeChart;
    protected createDailyAppVersionChart(appVersionAxisContainer: Record<string, JsonTypes>[]): ChartData;
    private createDailyQuestionnaireChart;
    private createDailyJoinedChart;
    private createWeekdaysQuestionnaireChart;
    private createWeekdaysJoinedChart;
    title(): string;
    getView(): Vnode<any, any>;
}
