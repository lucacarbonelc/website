import { Vnode } from "mithril";
import { Section } from "../site/Section";
import { Study } from "../data/study/Study";
import { StudiesDataType } from "../loader/StudyLoader";
import { Content as StudiesContent } from "../pages/studies";
import { SectionAlternative } from "../site/SectionContent";
export declare class Content extends StudiesContent {
    protected targetPage: string;
    protected titleString: string;
    private readonly selectedTab;
    private readonly selectedPublicAccessKeyTab;
    private readonly selectedDisabledAccessKeyTab;
    private readonly selectedOwner;
    private readonly ownerRegister;
    private publicAccessKeysTabs;
    private disabledAccessKeysTabs;
    protected studies: Study[];
    private readonly destroyImpl;
    static preLoad(section: Section): Promise<any>[];
    constructor(section: Section, studiesObs: StudiesDataType);
    preInit(): Promise<any>;
    titleExtra(): Vnode<any, any> | null;
    hasAlternatives(): boolean;
    getAlternatives(): SectionAlternative[] | null;
    protected updateSortedStudies(unsortedStudies: Study[]): void;
    private getStudiesFromObservable;
    private getStudiesPerAccessKey;
    private getAccessKeyTab;
    private getAccessKeyTitle;
    private getStudyBundleKey;
    private getAccessKeyTabList;
    private createAccessKeyTabLists;
    private getStudyListView;
    getView(): Vnode<any, any>;
    destroy(): void;
}
