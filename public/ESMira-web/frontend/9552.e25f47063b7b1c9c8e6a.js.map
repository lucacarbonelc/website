{"version":3,"file":"9552.e25f47063b7b1c9c8e6a.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/studySettings.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {Study} from \"../data/study/Study\";\nimport {safeConfirm} from \"../constants/methods\";\nimport {FILE_ADMIN} from \"../constants/urls\";\nimport {Requests} from \"../singletons/Requests\";\nimport {Section} from \"../site/Section\";\nimport {BtnTrash} from \"../widgets/BtnWidgets\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport { DashElement } from \"../widgets/DashElement\";\nimport {StudyMetadata} from \"../loader/StudyLoader\";\n\nexport class Content extends SectionContent {\n\tprivate isFrozen: boolean = false\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tRequests.loadJson(`${FILE_ADMIN}?type=IsFrozen&study_id=${section.getStaticInt(\"id\")}`),\n\t\t\tsection.getStudyPromise()\n\t\t]\n\t}\n\t\n\tconstructor(section: Section, [ frozen ] : boolean[]) {\n\t\tsuper(section);\n\t\tthis.isFrozen = frozen\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"study_description\")\n\t}\n\t\n\tprivate async toggleFreezeStudy(study: Study, e: InputEvent): Promise<void> {\n\t\tconst sendFrozen = (e.target as HTMLInputElement).checked\n\t\tconst [ loadFrozen ]: boolean[] = await this.section.loader.loadJson(`${FILE_ADMIN}?type=FreezeStudy${sendFrozen ? \"&frozen\" : \"\"}&study_id=${study.id.get()}`)\n\t\tthis.isFrozen = loadFrozen\n\t\tthis.section.loader.info(this.isFrozen ? Lang.get(\"info_study_frozen\") : Lang.get(\"info_study_unfrozen\"))\n\t}\n\t\n\tprivate async deleteStudy(study: Study): Promise<void> {\n\t\tif(!safeConfirm(Lang.get(\"confirm_delete_study\", study.title.get())))\n\t\t\treturn\n\t\t\n\t\tawait this.section.loader.showLoader(this.section.siteData.studyLoader.deleteStudy(study))\n\t\t\n\t\tthis.goTo(\"admin/allStudies:edit\")\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tconst studyMetadata: StudyMetadata | null = this.section.siteData.studyLoader.studyMetadata[study.id.get()]\n\t\tconst uploadSettings = study.eventUploadSettings\n\t\treturn <div>\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t<table class=\"studyInfoTable\">\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{Lang.getWithColon(\"study_version\")}</td>\n\t\t\t\t\t\t\t\t\t<td>{`${study.version.get()}.${study.subVersion.get()}`}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{Lang.getWithColon(\"created_by\")}</td>\n\t\t\t\t\t\t\t\t\t{studyMetadata && <td>{studyMetadata.owner}</td>}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{Lang.getWithColon(\"creation_date\")}</td>\n\t\t\t\t\t\t\t\t\t{studyMetadata && <td>{new Date(studyMetadata.createdTimestamp * 1000).toLocaleString()}</td>}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t{studyMetadata && studyMetadata.owner != studyMetadata.lastSavedBy && <tr>\n\t\t\t\t\t\t\t\t\t<td>{Lang.getWithColon(\"last_saved_by\")}</td>\n\t\t\t\t\t\t\t\t\t{<td>{studyMetadata.lastSavedBy}</td>}\n\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t\t{studyMetadata && studyMetadata.lastSavedAt != studyMetadata.createdTimestamp && <tr>\n\t\t\t\t\t\t\t\t\t<td>{Lang.getWithColon(\"last_saved_at\")}</td>\n\t\t\t\t\t\t\t\t\t{<td>{new Date(studyMetadata.lastSavedAt * 1000).toLocaleString()}</td>}\n\t\t\t\t\t\t\t\t</tr>}\n\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t<span class=\"middle spacingRight\">\n\t\t\t\t\t\t\t\t{Lang.getWithColon(\"study_availability\")}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<label class=\"middle noDesc\">\n\t\t\t\t\t\t\t\t<small>{Lang.get('Android')}</small>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(study.publishedAndroid)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<label class=\"middle noDesc\">\n\t\t\t\t\t\t\t\t<small>{Lang.get('iOS')}</small>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(study.publishedIOS)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t\t<label class=\"middle noDesc\">\n\t\t\t\t\t\t\t\t<small>{Lang.get('Web')}</small>\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(study.publishedWeb)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(\"vertical\", {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"vertical noTitle noDesc\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(study.sendMessagesAllowed)}/>\n\t\t\t\t\t\t\t\t<span>{Lang.get('allow_incoming_messages')}</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(null,  {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<label class=\"vertical noTitle\">\n\t\t\t\t\t\t\t\t<input type=\"checkbox\" checked={this.isFrozen} onchange={this.toggleFreezeStudy.bind(this, study)}/>\n\t\t\t\t\t\t\t\t<span>{Lang.get(\"freeze_study\")}</span>\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"desc_freeze_study\")}</small>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t})\n\t\t\t)}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"inform_server_about_events\"))}\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\tcontent:\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" disabled=\"disabled\"/>\n\t\t\t\t\t\t\t<span>joined</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_joined\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" disabled=\"disabled\"/>\n\t\t\t\t\t\t\t<span>questionnaire</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_questionnaire\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" disabled=\"disabled\"/>\n\t\t\t\t\t\t\t<span>quit</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_quit\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" {...BindObservable(uploadSettings.actions_executed)}/>\n\t\t\t\t\t\t\t<span>actions_executed</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_actions_executed\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.invitation)}/>\n\t\t\t\t\t\t\t<span>invitation</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_invitation\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.invitation_missed)}/>\n\t\t\t\t\t\t\t<span>invitation_missed</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_invitation_missed\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.message)}/>\n\t\t\t\t\t\t\t<span>message</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_message\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.notification)}/>\n\t\t\t\t\t\t\t<span>notification</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_notification\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.rejoined)}/>\n\t\t\t\t\t\t\t<span>rejoined</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_rejoined\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.reminder)}/>\n\t\t\t\t\t\t\t<span>reminder</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_reminder\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" {...BindObservable(uploadSettings.schedule_planned)}/>\n\t\t\t\t\t\t\t<span>schedule_planned</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_schedule_planned\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" checked=\"checked\" {...BindObservable(uploadSettings.schedule_removed)}/>\n\t\t\t\t\t\t\t<span>schedule_removed</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_schedule_removed\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.schedule_changed)}/>\n\t\t\t\t\t\t\t<span>schedule_changed</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_schedule_changed\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.statistic_viewed)}/>\n\t\t\t\t\t\t\t<span>statistic_viewed</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_statistic_viewed\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.study_message)}/>\n\t\t\t\t\t\t\t<span>study_message</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_study_message\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label class=\"noTitle vertical\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" {...BindObservable(uploadSettings.study_updated)}/>\n\t\t\t\t\t\t\t<span>study_updated</span>\n\t\t\t\t\t\t\t<small>{Lang.get(\"desc_study_updated\")}</small>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t}))}\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"delete_study\"))}\n\t\t\t<div class=\"center\">\n\t\t\t\t{BtnTrash(this.deleteStudy.bind(this, study), Lang.get(\"delete_study\"))}\n\t\t\t</div>\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["section","frozen","isFrozen","preLoad","loadJson","getStaticInt","getStudyPromise","title","get","toggleFreezeStudy","study","e","sendFrozen","target","checked","this","loader","id","loadFrozen","info","deleteStudy","showLoader","siteData","studyLoader","goTo","getView","getStudyOrThrow","studyMetadata","uploadSettings","eventUploadSettings","content","class","getWithColon","version","subVersion","owner","Date","createdTimestamp","toLocaleString","lastSavedBy","lastSavedAt","type","publishedAndroid","publishedIOS","publishedWeb","sendMessagesAllowed","onchange","bind","disabled","actions_executed","invitation","invitation_missed","message","notification","rejoined","reminder","schedule_planned","schedule_removed","schedule_changed","statistic_viewed","study_message","study_updated","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","dynamicValues","setChild","getStaticString","getStudyOrNull","studies","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","questionnaires","questionnaire","internalId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","getUrl","depth","getHash","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","value","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","BindObservable","transformer","attr","event","attrValue","element","set","BtnCustom","icon","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","view","classString","floatingRight","floating","small","highlight","template","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","href","DashTemplateView","startsWith","showAsClickable","attrs","hasOwnProperty","getNewClassString","size","oldClassString","DashElement","length","map","option","DashRow","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","NotCompatibleIcon","translationRecord","Lang","devices","device","join","onpointerenter","onpointerleave","TitleRow"],"sourceRoot":""}