{"version":3,"file":"1139.fa0d5c6f9613edb44ee0.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/observable/ObservablePromise.ts","webpack://ESMira/./src/frontend/ts/pages/statsWeb.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/ChartView.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/SearchBox.tsx","webpack://ESMira/./src/frontend/ts/widgets/SearchWidget.tsx"],"sourcesContent":["import {ObservableTypes} from \"./types/ObservableTypes\";\nimport {BaseObservable} from \"./BaseObservable\";\nimport { JsonTypes } from \"./types/JsonTypes\";\n\n/**\n * A observable Wrapper that can hold a Promise\n */\nexport class ObservablePromise<T> extends BaseObservable<Promise<T>> {\n\tprotected backingField: Promise<T>\n\t\n\tconstructor(value: Promise<T>, parent: BaseObservable<ObservableTypes> | null, key: string) {\n\t\tsuper(parent, key)\n\t\tthis.keyName = key\n\t\tthis.backingField = value\n\t}\n\t\n\tpublic reCalcIsDifferent(_: boolean = false): void {\n\t\t//do nothing\n\t}\n\t\n\tpublic createJson(): JsonTypes {\n        return \"\"\n    }\n\t\n\tpublic isDifferent(): boolean {\n\t\treturn false\n\t}\n\t\n\tpublic get(): Promise<any> {\n\t\treturn this.backingField\n\t}\n\tpublic set(value: Promise<T>, silently: boolean = false): void {\n\t\tthis.backingField = value\n\t\tif(!silently)\n\t\t\tthis.hasMutated(true, true)\n\t}\n\tpublic setValue(value: T, silently: boolean = false) {\n\t\tthis.set(Promise.resolve(value), silently)\n\t}\n}","import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {FILE_RESPONSES} from \"../constants/urls\";\nimport {CsvLoader} from \"../loader/csv/CsvLoader\";\nimport {ChartData} from \"../data/study/ChartData\";\nimport {\n\tCONDITION_OPERATOR_GREATER,\n\tCONDITION_OPERATOR_LESS,\n\tCONDITION_TYPE_AND,\n\tSTATISTICS_CHARTTYPES_BARS, STATISTICS_CHARTTYPES_PIE,\n\tSTATISTICS_DATATYPES_FREQ_DISTR,\n\tSTATISTICS_VALUETYPES_COUNT\n} from \"../constants/statistics\";\nimport {getChartColor} from \"../helpers/ChartJsBox\";\nimport {LoadedStatistics} from \"../loader/csv/CsvLoaderCollectionFromCharts\";\nimport {ObservablePromise} from \"../observable/ObservablePromise\";\nimport {ChartView} from \"../widgets/ChartView\";\nimport {JsonTypes} from \"../observable/types/JsonTypes\";\nimport {SearchBox, SearchBoxEntry} from \"../widgets/SearchBox\";\nimport {ValueListInfo} from \"../loader/csv/ValueListInfo\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {BtnReload} from \"../widgets/BtnWidgets\";\n\nexport class Content extends SectionContent {\n\tprivate csvLoader: CsvLoader\n\t\n\tprivate monthsCount: ObservablePrimitive<number> = new ObservablePrimitive<number>(3, null, \"days\")\n\t\n\tprivate refererList: ValueListInfo[] = []\n\tprivate userAgentList: ValueListInfo[] = []\n\t\n\t\n\tprivate readonly totalChart: ChartData\n\tprivate readonly perMonthsChart: ChartData\n\t\n\tprivate readonly totalChartPromise: ObservablePromise<LoadedStatistics>\n\tprivate readonly perMonthsPromise: ObservablePromise<LoadedStatistics>\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\tconst url = FILE_RESPONSES.replace('%1', (section.getStaticInt(\"id\") ?? 0).toString()).replace('%2', 'web_access');\n\t\treturn [\n\t\t\tCsvLoader.fromUrl(section.loader, url),\n\t\t\tsection.getStudyPromise()\n\t\t]\n\t}\n\t\n\tconstructor(section: Section, csvLoader: CsvLoader) {\n\t\tsuper(section)\n\t\tthis.csvLoader = csvLoader\n\t\t\n\t\tthis.totalChart = this.createPieChartData(Lang.get(\"total_pageViews\"))\n\t\tthis.perMonthsChart = this.createPerMonthChartData(Lang.get(\"monthly_pageViews\"), this.monthsCount.get())\n\t\t\n\t\tconst tempPromise = Promise.resolve({mainStatistics: {}})\n\t\tthis.totalChartPromise = new ObservablePromise<LoadedStatistics>(tempPromise, null, \"totalChartPromise\")\n\t\tthis.perMonthsPromise = new ObservablePromise<LoadedStatistics>(tempPromise, null, \"perMonthsPromise\")\n\t\t\n\t\tthis.monthsCount.addObserver(this.reloadDynamicStatistics.bind(this))\n\t}\n\t\n\tpublic async preInit(): Promise<any> {\n\t\tawait this.loadFixedStatistics()\n\t\tawait this.reloadDynamicStatistics()\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"web_access\")\n\t}\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn <div>\n\t\t\t<label class=\"noTitle noDesc spacingRight\">\n\t\t\t\t<span>{Lang.getWithColon(\"months\")}</span>\n\t\t\t\t<input type=\"number\" {... BindObservable(this.monthsCount)}/>\n\t\t\t</label>\n\t\t\t{BtnReload(this.section.reload.bind(this.section), Lang.get(\"reload\"))}\n\t\t</div>\n\t}\n\t\n\tprivate createPieChartData(title: string): ChartData {\n\t\treturn new ChartData(\n\t\t\t{\n\t\t\t\ttitle: title,\n\t\t\t\taxisContainer: [{\n\t\t\t\t\tlabel: \"page\",\n\t\t\t\t\txAxis: {\n\t\t\t\t\t\tconditions: []\n\t\t\t\t\t},\n\t\t\t\t\tyAxis: {\n\t\t\t\t\t\tconditions: [],\n\t\t\t\t\t\tvariableName: \"page\",\n\t\t\t\t\t\tobservedVariableIndex: 0\n\t\t\t\t\t}\n\t\t\t\t}],\n\t\t\t\tvalueType: STATISTICS_VALUETYPES_COUNT,\n\t\t\t\tdataType: STATISTICS_DATATYPES_FREQ_DISTR,\n\t\t\t\tchartType: STATISTICS_CHARTTYPES_PIE\n\t\t\t},\n\t\t\tnull,\n\t\t\t\"chartTemp\"\n\t\t)\n\t}\n\t\n\t\n\tprivate getDayPerMonthAxisContainerCode(monthsNum: number): Record<string, JsonTypes>[] {\n\t\tconst date = new Date()\n\t\tlet currentDate = date.getTime()\n\t\tlet month = date.getMonth()\n\t\tlet year = date.getFullYear()\n\t\tdate.setHours(0, 0, 0, 0)\n\t\tdate.setFullYear(year, month, 1)\n\t\t\n\t\tconst axisContainerArray: Record<string, JsonTypes>[] = []\n\t\t\n\t\tfor(let i=0; i<monthsNum; ++i) {\n\t\t\tconst previousDate = currentDate\n\t\t\tcurrentDate = date.getTime()\n\t\t\taxisContainerArray.push({\n\t\t\t\txAxis: {\n\t\t\t\t\tconditions: []\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\tconditions: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"responseTime\",\n\t\t\t\t\t\t\tvalue: previousDate,\n\t\t\t\t\t\t\toperator: CONDITION_OPERATOR_LESS\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tkey: \"responseTime\",\n\t\t\t\t\t\t\tvalue: currentDate,\n\t\t\t\t\t\t\toperator: CONDITION_OPERATOR_GREATER\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\tvariableName: \"page\",\n\t\t\t\t\tobservedVariableIndex: i,\n\t\t\t\t\tconditionType: CONDITION_TYPE_AND\n\t\t\t\t},\n\t\t\t\tlabel: date.toLocaleString('default', { month: 'long' }),\n\t\t\t\tcolor: getChartColor(i)\n\t\t\t})\n\t\t\t\n\t\t\t\n\t\t\tif(--month <0) {\n\t\t\t\tyear -= 1\n\t\t\t\tmonth = 11\n\t\t\t\tdate.setFullYear(year)\n\t\t\t\tdate.setMonth(month)\n\t\t\t}\n\t\t\telse\n\t\t\t\tdate.setMonth(month)\n\t\t}\n\t\t\n\t\treturn axisContainerArray\n\t}\n\tprivate createPerMonthChartData(title: string, monthsNum: number): ChartData {\n\t\treturn new ChartData(\n\t\t\t{\n\t\t\t\ttitle: title,\n\t\t\t\taxisContainer: this.getDayPerMonthAxisContainerCode(monthsNum),\n\t\t\t\tvalueType: STATISTICS_VALUETYPES_COUNT,\n\t\t\t\tdataType: STATISTICS_DATATYPES_FREQ_DISTR,\n\t\t\t\tchartType: STATISTICS_CHARTTYPES_BARS\n\t\t\t},\n\t\t\tnull,\n\t\t\t\"chartTemp\"\n\t\t)\n\t}\n\t\n\tprivate async loadFixedStatistics(): Promise<void> {\n\t\tthis.refererList = await this.csvLoader.getValueListInfo(\"referer\", true)\n\t\tthis.userAgentList = await this.csvLoader.getValueListInfo(\"userAgent\", true)\n\t\tthis.totalChartPromise.set(this.csvLoader.getPersonalStatisticsFromChart(this.totalChart))\n\t}\n\t\n\tprivate async reloadDynamicStatistics(): Promise<void> {\n\t\tthis.perMonthsChart.axisContainer.replace(this.getDayPerMonthAxisContainerCode(this.monthsCount.get()))\n\t\tthis.perMonthsPromise.set(this.csvLoader.getPersonalStatisticsFromChart(this.perMonthsChart))\n\t}\n\t\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\treturn DashRow(\n\t\t\tDashElement(null, {\n\t\t\t\tcontent: ChartView(this.perMonthsChart, this.perMonthsPromise)\n\t\t\t}),\n\t\t\tDashElement(null, {\n\t\t\t\tcontent: ChartView(this.totalChart, this.totalChartPromise)\n\t\t\t}),\n\t\t\tDashElement(\"stretched\", {\n\t\t\t\tcontent: SearchBox(Lang.get(\"referer_with_count\", this.refererList.length), this.refererList.map((valueList) =>\n\t\t\t\t\tthis.getValueListView(valueList))\n\t\t\t\t)\n\t\t\t}),\n\t\t\tDashElement(\"stretched\", {\n\t\t\t\tcontent: SearchBox(Lang.get(\"userAgent_with_count\", this.userAgentList.length), this.userAgentList.map((valueList) =>\n\t\t\t\t\tthis.getValueListView(valueList))\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\tprivate getValueListView(valueList: ValueListInfo): SearchBoxEntry {\n\t\treturn {\n\t\t\tkey: valueList.name,\n\t\t\tview: <div class=\"verticalPadding smallText nowrap\">\n\t\t\t\t<a class=\"searchTarget\" target=\"_blank\" href={valueList.name}>{valueList.name}</a>\n\t\t\t\t<span class=\"bold\">&nbsp;({valueList.count})</span>\n\t\t\t</div>\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Component, Vnode, VnodeDOM} from \"mithril\";\nimport {LoadedStatistics} from \"../loader/csv/CsvLoaderCollectionFromCharts\";\nimport {ChartJsBox} from \"../helpers/ChartJsBox\";\nimport {ObserverId} from \"../observable/BaseObservable\";\nimport {ChartData} from \"../data/study/ChartData\";\nimport {LoadingSpinner} from \"./LoadingSpinner\";\nimport {ObservablePromise} from \"../observable/ObservablePromise\";\n\ninterface ChartComponentOptions {\n\tpromise: ObservablePromise<LoadedStatistics>\n\tchart: ChartData\n\tclassName?: string //in case the parent has added a className that we need to include\n\tnoSort: boolean\n}\n\nclass ChartComponent implements Component<ChartComponentOptions, any> {\n\tprivate enabled: boolean = false\n\tprivate chart?: ChartData\n\tprivate chartView?: HTMLElement\n\tprivate chartViewBox?: ChartJsBox\n\tprivate promiseObserverId?: ObserverId\n\t\n\t\n\tprivate async drawGraph(chart: ChartData, promise: Promise<LoadedStatistics>, noSort: boolean): Promise<void> {\n\t\tthis.enabled = false\n\t\tm.redraw()\n\t\t\n\t\tconst data = await promise\n\t\tconst view = this.chartView\n\t\t\n\t\tif(!view)\n\t\t\treturn\n\t\twhile(view?.hasChildNodes()) {\n\t\t\tview.removeChild(view.lastChild!)\n\t\t}\n\t\t\n\t\tthis.chartViewBox = new ChartJsBox(view, data.mainStatistics, data.additionalStatistics ?? {}, chart, noSort)\n\t\tthis.enabled = true\n\t\tm.redraw()\n\t}\n\t\n\tpublic oncreate(vNode: VnodeDOM<ChartComponentOptions, any>): void {\n\t\tconst promise = vNode.attrs.promise\n\t\tconst chart = vNode.attrs.chart\n\t\tconst noSort = vNode.attrs.noSort\n\t\tthis.chart = chart\n\t\tthis.chartView = vNode.dom.getElementsByClassName(\"chartViewWindow\")[0] as HTMLElement\n\t\t\n\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\tthis.promiseObserverId = promise.addObserver(() => {\n\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t})\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<ChartComponentOptions, any>): void {\n\t\t//when a section is replaced with another section with the same content (but from a different study), mithril js will not reload this ChartView but call onupdate instead\n\t\tconst promise = vNode.attrs.promise\n\t\tconst chart = vNode.attrs.chart\n\t\tconst noSort = vNode.attrs.noSort\n\t\t\n\t\tif(chart != this.chart) {\n\t\t\tthis.chart = chart\n\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t\tthis.promiseObserverId?.removeObserver()\n\t\t\t\n\t\t\tthis.promiseObserverId = promise.addObserver(() => {\n\t\t\t\tthis.drawGraph(chart, promise.get(), noSort)\n\t\t\t})\n\t\t}\n\t}\n\t\n\tpublic onremove(): void {\n\t\tthis.promiseObserverId?.removeObserver()\n\t}\n\t\n\tpublic view(vNode: VnodeDOM<ChartComponentOptions, any>): Vnode<any, any> {\n\t\treturn <div class={`chartView center ${vNode.attrs.className ?? \"\"}`}>\n\t\t\t<div class={`chartViewWindow ${this.enabled ? \"fadeIn\" : \"\"}`}></div>\n\t\t\t{!this.enabled &&\n\t\t\t\tLoadingSpinner()\n\t\t\t}\n\t\t</div>\n\t}\n}\n\nexport function ChartView(chart: ChartData, promise: ObservablePromise<LoadedStatistics>, noSort: boolean = false) {\n\treturn m(ChartComponent, {\n\t\tchart: chart,\n\t\tpromise: promise,\n\t\tnoSort: noSort\n\t})\n}","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nimport {SearchWidget} from \"./SearchWidget\";\nimport {Lang} from \"../singletons/Lang\";\n\nexport interface SearchBoxEntry {\n\tkey: string\n\tview: Vnode<any, any>\n}\nexport function SearchBox(title: string, viewList: SearchBoxEntry[]): Vnode<any, any> {\n\treturn SearchWidget((tools) =>\n\t\t<div class=\"searchBox\">\n\t\t\t<h2>{title}</h2>\n\t\t\t<input placeholder={Lang.get(\"search\")} class=\"search small vertical\" type=\"text\" onkeyup={tools.updateSearchFromEvent.bind(tools)}/>\n\t\t\t<div class=\"scrollBox noBorder\">\n\t\t\t\t{viewList.map((entry) => tools.searchView(entry.key, entry.view))}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import m, {Component, Vnode} from \"mithril\"\n\nexport interface SearchTools {\n\tsearchView(key: string, content: Vnode<any, any>): Vnode<any, any> | null\n\tupdateSearchFromEvent(e: InputEvent): void\n\tupdateSearch(s: string): void\n}\ninterface SearchBarComponentOptions {\n\tcontent: (tools: SearchTools) => Vnode<any, any>\n\tclassName?: string //in case the parent has added a className that we need to include\n}\nclass SearchBarComponent implements SearchTools, Component<SearchBarComponentOptions, any> {\n\tprivate currentSearchValue: string = \"\"\n\t\n\tpublic updateSearch(s: string): void {\n\t\tthis.currentSearchValue = s\n\t}\n\tpublic updateSearchFromEvent(e: InputEvent): void {\n\t\tthis.updateSearch((e.target as HTMLInputElement).value)\n\t}\n\tpublic searchView(key: string, content: Vnode<any, any>): Vnode<any, any> | null {\n\t\treturn key.search(this.currentSearchValue) != -1 ? content : null\n\t}\n\t\n\tpublic view(vNode: Vnode<SearchBarComponentOptions, any>): Vnode<any, any> {\n\t\tconst view = vNode.attrs.content(this)\n\t\tview.attrs.className = `${vNode.attrs.className ?? \"\"} ${view.attrs.className ?? \"\"}`\n\t\treturn view\n\t}\n}\n\nexport function SearchWidget(content: (tools: SearchTools) => Vnode<any, any>): Vnode<any, any> {\n\treturn m(SearchBarComponent, { content: content })\n}"],"names":["value","parent","key","keyName","backingField","reCalcIsDifferent","_","createJson","isDifferent","get","this","set","silently","hasMutated","setValue","Promise","resolve","section","csvLoader","monthsCount","refererList","userAgentList","totalChart","createPieChartData","perMonthsChart","createPerMonthChartData","tempPromise","mainStatistics","totalChartPromise","perMonthsPromise","addObserver","reloadDynamicStatistics","bind","preLoad","url","replace","getStaticInt","toString","fromUrl","loader","getStudyPromise","preInit","loadFixedStatistics","title","titleExtra","class","getWithColon","type","reload","axisContainer","label","xAxis","conditions","yAxis","variableName","observedVariableIndex","valueType","dataType","chartType","getDayPerMonthAxisContainerCode","monthsNum","date","Date","currentDate","getTime","month","getMonth","year","getFullYear","setHours","setFullYear","axisContainerArray","i","previousDate","push","operator","conditionType","toLocaleString","color","setMonth","getValueListInfo","getPersonalStatisticsFromChart","getView","content","length","map","valueList","getValueListView","name","view","target","href","count","_section","hasAlternatives","getAlternatives","getDynamic","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticString","getStudyOrNull","id","studies","studyLoader","getStudies","getCount","getFirst","getEntry","getStudyOrThrow","study","Error","getQuestionnaireOrNull","qId","questionnaires","questionnaire","internalId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","studyId","isLoggedIn","getUrl","depth","getHash","goTo","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toISOString","split","TimeTransformer","midnight","parts","setMinutes","BindObservable","transformer","attr","event","attrValue","e","element","enabled","drawGraph","chart","promise","noSort","data","chartView","hasChildNodes","removeChild","lastChild","chartViewBox","additionalStatistics","oncreate","vNode","attrs","dom","getElementsByClassName","promiseObserverId","onupdate","removeObserver","onremove","className","ChartView","ChartComponent","DashElementView","options","classString","floatingRight","floating","small","highlight","disabled","template","icon","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","DashTemplateView","startsWith","onclick","showAsClickable","hasOwnProperty","getNewClassString","size","oldClassString","DashElement","option","DashRow","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","NotCompatibleIcon","translationRecord","Lang","devices","device","join","onpointerenter","onpointerleave","SearchBox","viewList","tools","placeholder","onkeyup","updateSearchFromEvent","entry","searchView","currentSearchValue","updateSearch","s","search","SearchWidget","SearchBarComponent"],"sourceRoot":""}