{"version":3,"file":"4876.f37e993eeac17d75cc3d.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/filterTrigger.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnCollection.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/DragContainer.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TabBar.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport calendarSvg from \"../../imgs/icons/calendar.svg?raw\"\nimport schedulesSvg from \"../../imgs/icons/schedules.svg?raw\"\nimport eventsSvg from \"../../imgs/icons/events.svg?raw\"\nimport {ActionTrigger} from \"../data/study/ActionTrigger\";\nimport {EventTrigger} from \"../data/study/EventTrigger\";\nimport {Schedule} from \"../data/study/Schedule\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {Section} from \"../site/Section\";\nimport {DropdownMenu} from \"../widgets/DropdownMenu\";\nimport {BindObservable, DateTransformer, TimeTransformer} from \"../widgets/BindObservable\";\nimport {NotCompatibleIcon} from \"../widgets/NotCompatibleIcon\";\nimport {BtnCollection} from \"../widgets/BtnCollection\";\nimport {TabBar} from \"../widgets/TabBar\";\nimport {BtnAdd, BtnCopy, BtnCustom, BtnOk, BtnTrash} from \"../widgets/BtnWidgets\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\n\n\ninterface FilterEntry {\n\ttitle: string,\n\tdropdownView?: Vnode<any, any>,\n\tisActive: () => boolean\n\tdisable: () => void\n\tenable?: () => void\n}\n\n/**\n * Note: Triggers are implemented so that each could hold MULTIPLE schedules, cues and actions.\n * But since we suspect that this will not be used often, and it is easier to grasp for configuration, we removed that functionality in the admin panel\n */\nexport class Content extends SectionContent {\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"filter_and_trigger\")\n\t}\n\t\n\tprivate removeActionTrigger(questionnaire: Questionnaire, index: number): void {\n\t\tquestionnaire.actionTriggers.remove(index)\n\t\twindow.location.hash = `${this.section.getHash(this.section.depth)}`\n\t}\n\tprivate copyActionTrigger(questionnaire: Questionnaire, actionTrigger: ActionTrigger, index: number): void {\n\t\tquestionnaire.actionTriggers.addCopy(actionTrigger, index)\n\t}\n\t\n\tprivate addSchedule(questionnaire: Questionnaire): void {\n\t\tquestionnaire.actionTriggers.push({\n\t\t\tschedules: [{\n\t\t\t\tsignalTimes: [{startTimeOfDay: 0}]\n\t\t\t}],\n\t\t\tactions: [{}]\n\t\t})\n\t\tthis.newSection(`triggerEdit,qId:${questionnaire.internalId.get()},triggerI:${questionnaire.actionTriggers.get().length - 1}`)\n\t}\n\t\n\tprivate addEvent(questionnaire: Questionnaire): void {\n\t\tquestionnaire.actionTriggers.push({\n\t\t\teventTriggers: [{}],\n\t\t\tactions: [{}]\n\t\t})\n\t\tthis.newSection(`triggerEdit,qId:${questionnaire.internalId.get()},triggerI:${questionnaire.actionTriggers.get().length - 1}`)\n\t}\n\t\n\tprivate getSchedule(actionTrigger: ActionTrigger): Schedule {\n\t\treturn actionTrigger.schedules.get()[0]\n\t}\n\tprivate getEventTrigger(actionTrigger: ActionTrigger): EventTrigger {\n\t\treturn actionTrigger.eventTriggers.get()[0]\n\t}\n\t\n\t\n\tprivate getScheduleTitle(schedule: Schedule): string {\n\t\tconst midnight = getMidnightMillis(Date.now())\n\t\tconst signaleTimes = schedule.signalTimes.get()\n\t\t\n\t\tif(signaleTimes.length == 0)\n\t\t\treturn Lang.get(\"empty\")\n\t\telse if(signaleTimes.length == 1 && !signaleTimes[0].random.get())\n\t\t\treturn timeStampToTimeString(midnight + signaleTimes[0].startTimeOfDay.get())\n\t\t\n\t\tlet lowest = Number.MAX_VALUE\n\t\tlet highest = Number.MIN_VALUE\n\t\tlet count = 0\n\t\t\n\t\tfor(let signalTime of schedule.signalTimes.get()) {\n\t\t\tif(signalTime.startTimeOfDay.get() < lowest)\n\t\t\t\tlowest = signalTime.startTimeOfDay.get()\n\t\t\t\n\t\t\tif(signalTime.random.get()) {\n\t\t\t\tcount += signalTime.frequency.get()\n\t\t\t\tif(signalTime.endTimeOfDay.get() > highest)\n\t\t\t\t\thighest = signalTime.endTimeOfDay.get()\n\t\t\t}\n\t\t\telse {\n\t\t\t\t++count\n\t\t\t\tif(signalTime.startTimeOfDay.get() > highest)\n\t\t\t\t\thighest = signalTime.startTimeOfDay.get()\n\t\t\t}\n\t\t}\n\t\treturn Lang.get(\"x_times_between_y_and_z\", count, timeStampToTimeString(midnight + lowest), timeStampToTimeString(midnight + highest))\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tif(!study.questionnaires.get().length)\n\t\t\treturn <div class=\"center spacingTop\">{Lang.get(\"info_no_questionnaires_created\")}</div>\n\t\t\n\t\treturn TabBar(this.getDynamic(\"questionnaireIndex\", 0), study.questionnaires.get().map((questionnaire) => {\n\t\t\treturn {\n\t\t\t\ttitle: questionnaire.getTitle(),\n\t\t\t\tview: () => this.getQuestionnaireView(questionnaire)\n\t\t\t}\n\t\t}))\n\t}\n\t\n\t\n\t\n\tprivate getQuestionnaireView(questionnaire: Questionnaire): Vnode<any, any> {\n\t\tconst filterEntries = this.createFilterEntries(questionnaire)\n\t\t\n\t\treturn <div class=\"spacingTop spacingBottom\">\n\t\t\t{DashRow(\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent: this.getFilterView(filterEntries)\n\t\t\t\t}),\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent: this.getActionTriggerView(questionnaire)\n\t\t\t\t}),\n\t\t\t\t\n\t\t\t\tDropdownMenu(\"filterMenu\",\n\t\t\t\t\tDashElement(null, {\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\tBtnCustom(m.trust(calendarSvg), undefined, Lang.get(\"add_filter\")),\n\t\t\t\t\t\tsmall: true,\n\t\t\t\t\t\tshowAsClickable: true\n\t\t\t\t\t}),\n\t\t\t\t\t() => this.getFilterDropdownView(filterEntries),\n\t\t\t\t\t{connectedDropdowns: [\"filterSubMenu\"]}\n\t\t\t\t),\n\t\t\t\tDashElement(\"horizontal\",\n\t\t\t\t\t{content: BtnCustom(m.trust(schedulesSvg), undefined, Lang.get(\"add_schedule\")), onclick: this.addSchedule.bind(this, questionnaire)},\n\t\t\t\t\t{content: BtnCustom(m.trust(eventsSvg), undefined, Lang.get(\"add_event\")),  onclick: this.addEvent.bind(this, questionnaire)},\n\t\t\t\t),\n\t\t\t)}\n\t\t</div>\n\t}\n\t\n\tprivate getActionTriggerView(questionnaire: Questionnaire): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<h2 class=\"center\">\n\t\t\t\t{Lang.getWithColon(\"trigger\")}\n\t\t\t\t{NotCompatibleIcon(\"Web\")}\n\t\t\t</h2>\n\t\t\t{questionnaire.actionTriggers.get().map((actionTrigger, index) => {\n\t\t\t\tconst schedule = this.getSchedule(actionTrigger)\n\t\t\t\tconst eventTrigger = this.getEventTrigger(actionTrigger)\n\t\t\t\treturn <div class=\"verticalPadding\">\n\t\t\t\t\t{BtnCollection([\n\t\t\t\t\t\tBtnTrash(this.removeActionTrigger.bind(this, questionnaire, index)),\n\t\t\t\t\t\tBtnCopy(this.copyActionTrigger.bind(this, questionnaire, actionTrigger, index)),\n\t\t\t\t\t\t<a href={this.getUrl(`triggerEdit,qId:${questionnaire.internalId.get()},triggerI:${index}`)}>\n\t\t\t\t\t\t\t{schedule\n\t\t\t\t\t\t\t\t? BtnCustom(m.trust(schedulesSvg), undefined,\n\t\t\t\t\t\t\t\t\tthis.getScheduleTitle(schedule)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: BtnCustom(m.trust(eventsSvg), undefined,\n\t\t\t\t\t\t\t\t\t`${eventTrigger.cueCode.get()}. ${Lang.get('after_x_seconds', eventTrigger.delaySec.get())}`\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t])}\n\t\t\t\t</div>\n\t\t\t})\n\t\t\t}</div>\n\t}\n\t\n\t\n\tprivate createFilterEntries(questionnaire: Questionnaire): FilterEntry[] {\n\t\tconst study = this.getStudyOrThrow()\n\t\tconst list: FilterEntry[] = [\n\t\t\t{\n\t\t\t\ttitle: questionnaire.durationStart.get() != 0\n\t\t\t\t\t? `${Lang.getWithColon(\"start_date\")} ${new Date(questionnaire.durationStart.get()).toLocaleDateString()}`\n\t\t\t\t\t: Lang.get(\"start_date\"),\n\t\t\t\tisActive: () => questionnaire.durationStart.get() != 0,\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label class=\"noDesc\">\n\t\t\t\t\t\t<small>{Lang.get(\"start_date\")}</small>\n\t\t\t\t\t\t<input type=\"date\" {... BindObservable(questionnaire.durationStart, DateTransformer)}/>\n\t\t\t\t\t</label>,\n\t\t\t\tdisable: () => questionnaire.durationStart.set(0)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.durationEnd.get() != 0\n\t\t\t\t\t? `${Lang.getWithColon(\"end_date\")} ${new Date(questionnaire.durationEnd.get()).toLocaleDateString()}`\n\t\t\t\t\t: Lang.get(\"end_date\"),\n\t\t\t\tisActive: () => questionnaire.durationEnd.get() != 0,\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label class=\"noDesc\">\n\t\t\t\t\t\t<small>{Lang.get(\"end_date\")}</small>\n\t\t\t\t\t\t<input type=\"date\" {... BindObservable(questionnaire.durationEnd, DateTransformer)}/>\n\t\t\t\t\t</label>,\n\t\t\t\tdisable: () => questionnaire.durationEnd.set(0)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.durationStartingAfterDays.get() != 0\n\t\t\t\t\t? `${Lang.getWithColon(\"activation\")} ${Lang.get(\"after_x_days\", questionnaire.durationStartingAfterDays.get())}`\n\t\t\t\t\t: Lang.get(\"activation_after\"),\n\t\t\t\tisActive: () => questionnaire.durationStartingAfterDays.get() != 0,\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<small>{Lang.get(\"activation_after\")}</small>\n\t\t\t\t\t\t<input type=\"number\" {... BindObservable(questionnaire.durationStartingAfterDays)}/>\n\t\t\t\t\t\t<span>{Lang.get(\"days\")}</span>\n\t\t\t\t\t\t<small>{Lang.get(\"after_joining_study\")}</small>\n\t\t\t\t\t</label>,\n\t\t\t\tdisable: () => questionnaire.durationStartingAfterDays.set(0)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.durationPeriodDays.get() != 0\n\t\t\t\t\t? `${Lang.getWithColon(\"expiration\")} ${Lang.get(\"after_x_days\", questionnaire.durationPeriodDays.get())}`\n\t\t\t\t\t: Lang.get(\"expiration_after\"),\n\t\t\t\tisActive: () => questionnaire.durationPeriodDays.get() != 0,\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<small>{Lang.get(\"expiration_after\")}</small>\n\t\t\t\t\t\t<input type=\"number\" {... BindObservable(questionnaire.durationPeriodDays)}/>\n\t\t\t\t\t\t<span>{Lang.get(\"days\")}</span>\n\t\t\t\t\t\t<small>{Lang.get(\"after_joining_study\")}</small>\n\t\t\t\t\t</label>,\n\t\t\t\tdisable: () => questionnaire.durationPeriodDays.set(0)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: Lang.get(\"questionnaires_can_only_be_completed_once\"),\n\t\t\t\tisActive: () => questionnaire.completableOnce.get(),\n\t\t\t\tenable: () => questionnaire.completableOnce.set(true),\n\t\t\t\tdisable: () => questionnaire.completableOnce.set(false)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.completableMinutesAfterNotification.get() != 0\n\t\t\t\t\t? `${Lang.get(\"questionnaires_can_only_be_completed_per_notification\")} (${questionnaire.completableMinutesAfterNotification.get()} ${Lang.get(\"minutes\")})`\n\t\t\t\t\t: Lang.get(\"questionnaires_can_only_be_completed_per_notification\"),\n\t\t\t\tisActive: () => questionnaire.completableOncePerNotification.get(),\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<span>{Lang.get(\"part_visibleFor\")}</span>\n\t\t\t\t\t\t<input type=\"number\" {... BindObservable(questionnaire.completableMinutesAfterNotification)}/>\n\t\t\t\t\t\t<span>{Lang.get(\"minutes\")}</span>\n\t\t\t\t\t\t<small>{Lang.get(\"info_zero_disables_timeout\")}</small>\n\t\t\t\t\t</label>,\n\t\t\t\tenable: () => questionnaire.completableOncePerNotification.set(true),\n\t\t\t\tdisable: () => questionnaire.completableOncePerNotification.set(false)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.limitCompletionFrequency.get()\n\t\t\t\t\t? `${Lang.getWithColon(\"timeDistance_between_completion_of_questionnaire\")} ${questionnaire.completionFrequencyMinutes.get()} ${Lang.get(\"minutes\")}`\n\t\t\t\t\t: Lang.get(\"timeDistance_between_completion_of_questionnaire\"),\n\t\t\t\tisActive: () => questionnaire.limitCompletionFrequency.get(),\n\t\t\t\tdropdownView:\n\t\t\t\t\t<label>\n\t\t\t\t\t\t<input type=\"number\" {... BindObservable(questionnaire.completionFrequencyMinutes)}/>\n\t\t\t\t\t\t<span>{Lang.get(\"minutes\")}</span>\n\t\t\t\t\t</label>,\n\t\t\t\tenable: () => questionnaire.limitCompletionFrequency.set(true),\n\t\t\t\tdisable: () => questionnaire.limitCompletionFrequency.set(false)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: questionnaire.completableAtSpecificTime.get()\n\t\t\t\t\t? `${Lang.getWithColon(\"only_at_specific_time\")} ${TimeTransformer.toAttribute(questionnaire.completableAtSpecificTimeStart.get())} - ${TimeTransformer.toAttribute(questionnaire.completableAtSpecificTimeEnd.get())}`\n\t\t\t\t\t: Lang.get(\"only_at_specific_time\"),\n\t\t\t\tisActive: () => questionnaire.completableAtSpecificTime.get(),\n\t\t\t\tdropdownView:\n\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"from\")}</small>\n\t\t\t\t\t\t\t<input type=\"time\" {... BindObservable(questionnaire.completableAtSpecificTimeStart, TimeTransformer)}/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<small>{Lang.getWithColon(\"until\")}</small>\n\t\t\t\t\t\t\t<input type=\"time\" {... BindObservable(questionnaire.completableAtSpecificTimeEnd, TimeTransformer)}/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>,\n\t\t\t\tenable: () => questionnaire.completableAtSpecificTime.set(true),\n\t\t\t\tdisable: () => questionnaire.completableAtSpecificTime.set(false)\n\t\t\t}\n\t\t]\n\t\tif(study.randomGroups.get() != 0) {\n\t\t\tlist.push({\n\t\t\t\ttitle: questionnaire.limitToGroup.get() != 0\n\t\t\t\t\t? `${Lang.getWithColon(\"group_availability\")} ${questionnaire.limitToGroup.get()}`\n\t\t\t\t\t: Lang.get(\"group_availability\"),\n\t\t\t\tisActive: () => questionnaire.limitToGroup.get() != 0,\n\t\t\t\tdropdownView:\n\t\t\t\t\t<select {...BindObservable(questionnaire.limitToGroup)}>\n\t\t\t\t\t\t<option value=\"0\">{Lang.get('in_all_groups')}</option>\n\t\t\t\t\t\t{Array.from({length: study.randomGroups.get()}).map((_, index) =>\n\t\t\t\t\t\t\t<option>{index+1}</option>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</select>,\n\t\t\t\tdisable: () => questionnaire.limitToGroup.set(0)\n\t\t\t})\n\t\t}\n\t\treturn list\n\t}\n\t\n\tprivate getFilterView(filterEntries: FilterEntry[]): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<h2 class=\"center\">{Lang.getWithColon(\"filter\")}</h2>\n\t\t\t{filterEntries.map((entry) =>\n\t\t\t\tentry.isActive() &&\n\t\t\t\t<div class=\"line\">\n\t\t\t\t\t{BtnTrash(entry.disable.bind(this))}\n\t\t\t\t\t{this.getFilterEntryView(entry, (dropdown) => <span class={`${dropdown ? \"clickable\" : \"\"} smallText`}>{entry.title}</span>)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t</div>\n\t}\n\t\n\tprivate getFilterEntryView(entry: FilterEntry, clickElement: (dropdown: boolean) => Vnode<any, any>): Vnode<any, any> {\n\t\treturn entry.dropdownView ?\n\t\t\tDropdownMenu(\"filterSubMenu\",\n\t\t\t\tclickElement(true),\n\t\t\t\t(close) =>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class=\"middle horizontal\">{entry.dropdownView}</div>\n\t\t\t\t\t\t<div class=\"middle horizontal spacingLeft\">{BtnOk(() => {\n\t\t\t\t\t\t\tif(entry.enable)\n\t\t\t\t\t\t\t\tentry.enable()\n\t\t\t\t\t\t\twindow.setTimeout(() => close(), 10)\n\t\t\t\t\t\t})}</div>\n\t\t\t\t\t</div>,\n\t\t\t\t{dontCenter: true}\n\t\t\t)\n\t\t\t: clickElement(false)\n\t}\n\t\n\tprivate getFilterDropdownView(filterEntries: FilterEntry[]): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t{filterEntries.map((entry) =>\n\t\t\t\t<div>{\n\t\t\t\t\t!entry.isActive() &&\n\t\t\t\t\t\tthis.getFilterEntryView(entry, (dropdown) => dropdown || !entry.enable\n\t\t\t\t\t\t\t? BtnAdd(undefined, entry.title)\n\t\t\t\t\t\t\t: BtnAdd(entry.enable, entry.title)\n\t\t\t\t\t\t)\n\t\t\t\t}</div>\n\t\t\t)}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\n\nexport function BtnCollection(\n\tbtns: Vnode<any, any>[]\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btnCollection\">\n\t\t\t{btns}\n\t\t</div>\n\t)\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport addSvg from \"../../imgs/icons/dragHandle.svg?raw\"\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface DragTools {\n\tgetDragTarget(index: number, targetList: ArrayType, content?: Vnode<any, any>): Vnode<any, any>\n\tgetDragStarter(index: number, dragTarget: ArrayType): Vnode<any, any>\n}\n\ntype ArrayType = ArrayInterface<any, BaseObservable<any>>\n\ninterface DragContainerImpOptions {\n\tcontent: (container: DragTools) => Vnode<any, any>\n}\nclass DragContainerImp implements DragTools, Component<DragContainerImpOptions, any> {\n\tprivate contentVNode?: VnodeDOM<any, any>\n\tprivate currentStartList?: ArrayType\n\tprivate currentTargetList?: ArrayType\n\tprivate currentStartIndex: number = 0\n\tprivate currentTargetIndex: number = 0\n\tprivate currentDragClone?: HTMLElement\n\tprivate currentStartElement?: HTMLElement\n\tprivate startIndex: number = 0\n\t\n\tpublic getDragTarget(index: number, targetList: ArrayType, content: Vnode<any, any> = <div></div>): Vnode<any, any> {\n\t\tcontent.attrs[\"className\"] = `dragTarget ${content.attrs[\"className\"] ?? \"\"}`\n\t\tcontent.attrs[\"ondragend\"] = this.ondragend.bind(this)\n\t\tcontent.attrs[\"ondragenter\"] = this.ondragenter.bind(this, index, targetList)\n\t\treturn content\n\t}\n\t\n\tpublic getDragStarter(index: number, targetList: ArrayType): Vnode<any, any> {\n\t\treturn <div class=\"btn clickable dragStarter\" draggable=\"true\" ondragstart={this.ondragstart.bind(this, index, targetList)}>\n\t\t\t{m.trust(addSvg)}\n\t\t</div>\n\t}\n\t\n\t\n\tprivate getIndexInContainer(searchEl: HTMLElement): number {\n\t\tconst htmlCollection = this.contentVNode?.dom.getElementsByClassName(\"dragTarget\")\n\t\tif(htmlCollection) {\n\t\t\tfor(let i = htmlCollection.length - 1; i >= 0; --i) {\n\t\t\t\tif(htmlCollection[i] === searchEl)\n\t\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\tprivate addDragSpacer(locationEl: HTMLElement): void {\n\t\tlet insertBefore: Element | null = locationEl //when insertBefore is null, currentDragClone will be placed at the end\n\t\tif(!this.currentDragClone)\n\t\t\treturn\n\t\tif(this.currentDragClone.parentNode) {\n\t\t\tconst locationIndex = this.getIndexInContainer(locationEl)\n\t\t\tconst spacerIndex = this.getIndexInContainer(this.currentDragClone)\n\t\t\t\n\t\t\tif(spacerIndex < this.startIndex) { //mouse moved up (/right) from starting point\n\t\t\t\tif(spacerIndex < locationIndex) { //mouse is moving down (/left) again\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { //mouse moved down (/left) from starting point\n\t\t\t\t\n\t\t\t\t//we need to add one to targetIndex.\n\t\t\t\t// But when we are in the same list, removing the item (before moving it) means that targetIndex points to the element afterwards anyway.\n\t\t\t\t// But when we are in another list, we need to correct manually:\n\t\t\t\tif(this.currentStartList != this.currentTargetList)\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t\n\t\t\t\tif(spacerIndex > locationIndex) //mouse is moving up (/right) again\n\t\t\t\t\t--this.currentTargetIndex\n\t\t\t\telse\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t}\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t}\n\t\tlocationEl.parentNode?.insertBefore(this.currentDragClone, insertBefore)\n\t}\n\t\n\tprivate ondragstart(index: number, targetList: ArrayType, e: DragEvent): boolean {\n\t\tlet targetElement = e.currentTarget as HTMLElement\n\t\twhile(targetElement && !targetElement.classList.contains(\"dragTarget\")) {\n\t\t\ttargetElement = targetElement.parentNode as HTMLElement\n\t\t}\n\t\tconst dragRoot = this.contentVNode?.dom\n\t\tif(!dragRoot)\n\t\t\treturn false\n\t\t\n\t\t\n\t\tthis.startIndex = this.getIndexInContainer(targetElement)\n\t\t\n\t\tthis.currentStartList = targetList\n\t\tthis.currentStartIndex = index\n\t\t\n\t\tthis.currentDragClone = targetElement.cloneNode(true) as HTMLElement\n\t\tthis.currentDragClone?.classList.add(\"drag_spacer\")\n\t\t\n\t\tthis.currentDragClone?.addEventListener(\"dragover\", this.ondragover.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"dragleave\", this.ondragleave.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"drop\", this.ondrop.bind(this))\n\t\t\n\t\ttargetElement.classList.add(\"dragStarted\")\n\t\te.dataTransfer?.setDragImage(targetElement, 0, 0)\n\t\t\n\t\t\n\t\tthis.currentStartElement = targetElement\n\t\t\n\t\twindow.setTimeout( () => {\n\t\t\t//in firefox: setDragImage() seems to stop working when the class of document.body is changed\n\t\t\t//in chrome: DOM changes seem to cancel dragging altogether\n\t\t\t//solution: doing this stuff in a different \"thread\" seems to do the trick\n\t\t\tthis.addDragSpacer(targetElement)\n\t\t\tdragRoot.classList.add(\"is_dragging\")\n\t\t}, 0)\n\t\treturn true\n\t}\n\tprivate ondragend(e: DragEvent): void {\n\t\tthis.ondragleave(e)\n\t\te.preventDefault()\n\t\t\n\t\tthis.contentVNode?.dom.classList.remove(\"is_dragging\")\n\t\tthis.currentStartElement?.classList.remove(\"dragStarted\")\n\t\tif(this.currentDragClone?.parentNode)\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t\n\t\tthis.currentDragClone = undefined\n\t}\n\tprivate ondragenter(index: number, targetList: ArrayType, e: DragEvent): false {\n\t\tconst targetElement = e.currentTarget as HTMLElement\n\t\tif(!this.contentVNode?.dom.contains(targetElement))\n\t\t\treturn false\n\t\t\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"none\"\n\t\te.preventDefault()\n\t\t\n\t\tthis.currentTargetList = targetList\n\t\tthis.currentTargetIndex = index\n\t\t\n\t\tthis.addDragSpacer(targetElement)\n\t\treturn false\n\t}\n\t\n\tprivate ondragover(e: DragEvent): void {\n\t\te.preventDefault()\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"move\"\n\t}\n\tprivate ondragleave(e: DragEvent): void {\n\t\te.preventDefault()\n\t}\n\tprivate ondrop(e: DragEvent): void {\n\t\te.preventDefault()\n\t\t\n\t\tif(this.currentStartList == null || this.currentTargetList == null)\n\t\t\treturn\n\t\t\n\t\tif(this.currentTargetList == this.currentStartList)\n\t\t\tthis.currentTargetList.move(this.currentStartIndex, this.currentTargetIndex)\n\t\telse\n\t\t\tthis.currentTargetList.moveFromOtherList(this.currentStartList, this.currentStartIndex, this.currentTargetIndex)\n\t\t\n\t\tthis.currentStartList = this.currentTargetList = undefined\n\t\tthis.ondragend(e)\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<DragContainerImpOptions, any>): void {\n\t\tthis.contentVNode = vNode\n\t}\n\t\n\tpublic view(vNode: Vnode<DragContainerImpOptions, any>): Vnode<any, any> {\n\t\treturn vNode.attrs.content(this)\n\t}\n}\n\n\nexport function DragContainer(\n\tcontent: (container: DragTools) => Vnode<any, any>\n): Vnode<any, any> {\n\treturn m(DragContainerImp, { content: content })\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {DragContainer} from \"./DragContainer\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface TabContent {\n\ttitle: string | Vnode<any, any>\n\tdraggableList?: ArrayInterface<any, BaseObservable<any>>\n\thighlight?: boolean\n\tview: () => Vnode<any, any>\n}\n\nexport function TabBar(selectedIndex: ObservablePrimitive<number>, tabs: (TabContent | undefined | false)[], smallBar: boolean = false, addBtnCallback?: (e: MouseEvent) => void): Vnode<any, any> {\n\tif(!tabs.length)\n\t\treturn (<div></div>)\n\t\n\tif(selectedIndex.get() >= tabs.length)\n\t\tselectedIndex.set(0)\n\treturn (\n\t\tDragContainer((dragTools) => {\n\t\t\tconst selectedTab = tabs[selectedIndex.get()]\n\t\t\treturn <div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class={smallBar ? \"tabBar smallBar\" : \"tabBar\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttabs.map((tab, index) => {\n\t\t\t\t\t\t\t\tif(!tab)\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\tconst className = `tab ${(selectedIndex.get() == index) ? \"selected\" : \"\"} ${tab.highlight ? \"highlight\" : \"\"}`\n\t\t\t\t\t\t\t\tconst content = <div class={className} onclick={() => {selectedIndex.set(index)}}>\n\t\t\t\t\t\t\t\t\t<div class=\"left\">\n\t\t\t\t\t\t\t\t\t\t{tab.draggableList && dragTools.getDragStarter(index, tab.draggableList)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span class=\"middle\">{tab.title}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\treturn tab.draggableList\n\t\t\t\t\t\t\t\t\t? dragTools.getDragTarget(index, tab.draggableList, content)\n\t\t\t\t\t\t\t\t\t: content\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{addBtnCallback &&\n\t\t\t\t\t\t\t<div class=\"tab addBtn\" onclick={addBtnCallback}>\n\t\t\t\t\t\t\t\t<span class=\"middle\">+</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"tabContent\">\n\t\t\t\t\t{selectedTab && selectedTab.view()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t})\n\t)\n}"],"names":["preLoad","section","getStudyPromise","title","Lang","get","removeActionTrigger","questionnaire","index","actionTriggers","remove","window","location","hash","this","getHash","depth","copyActionTrigger","actionTrigger","addCopy","addSchedule","push","schedules","signalTimes","startTimeOfDay","actions","newSection","internalId","length","addEvent","eventTriggers","getSchedule","getEventTrigger","getScheduleTitle","schedule","midnight","Date","now","signaleTimes","random","lowest","Number","MAX_VALUE","highest","MIN_VALUE","count","signalTime","frequency","endTimeOfDay","getView","study","getStudyOrThrow","questionnaires","TabBar","getDynamic","map","getTitle","view","getQuestionnaireView","class","filterEntries","createFilterEntries","DashRow","DashElement","content","getFilterView","getActionTriggerView","DropdownMenu","undefined","small","showAsClickable","getFilterDropdownView","connectedDropdowns","onclick","bind","getWithColon","NotCompatibleIcon","btns","eventTrigger","href","getUrl","cueCode","delaySec","list","durationStart","toLocaleDateString","isActive","dropdownView","type","BindObservable","disable","set","durationEnd","durationStartingAfterDays","durationPeriodDays","completableOnce","enable","completableMinutesAfterNotification","completableOncePerNotification","limitCompletionFrequency","completionFrequencyMinutes","completableAtSpecificTime","toAttribute","completableAtSpecificTimeStart","completableAtSpecificTimeEnd","randomGroups","limitToGroup","value","Array","from","_","entry","getFilterEntryView","dropdown","clickElement","close","setTimeout","dontCenter","SectionContent","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","id","studies","studyLoader","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","goTo","target","destroy","OptimusPrimeTransformer","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","toISOString","split","getTime","TimeTransformer","parts","date","setHours","setMinutes","transformer","attr","event","attrValue","e","element","BtnCustom","icon","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","classString","floatingRight","floating","highlight","disabled","template","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","DashTemplateView","startsWith","attrs","hasOwnProperty","getNewClassString","size","oldClassString","option","currentStartIndex","currentTargetIndex","startIndex","getDragTarget","targetList","ondragend","ondragenter","getDragStarter","draggable","ondragstart","getIndexInContainer","searchEl","htmlCollection","contentVNode","dom","getElementsByClassName","i","addDragSpacer","locationEl","insertBefore","currentDragClone","parentNode","locationIndex","spacerIndex","nextElementSibling","currentStartList","currentTargetList","removeChild","targetElement","currentTarget","classList","contains","dragRoot","cloneNode","add","addEventListener","ondragover","ondragleave","ondrop","dataTransfer","setDragImage","currentStartElement","preventDefault","dropEffect","move","moveFromOtherList","onupdate","vNode","DragContainer","DragContainerImp","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","translationRecord","devices","device","join","onpointerenter","onpointerleave","selectedIndex","tabs","smallBar","addBtnCallback","dragTools","selectedTab","tab","className","draggableList"],"sourceRoot":""}