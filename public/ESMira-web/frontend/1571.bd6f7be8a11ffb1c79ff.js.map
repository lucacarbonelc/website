{"version":3,"file":"1571.bd6f7be8a11ffb1c79ff.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/helpers/AddJsToServerHtml.ts","webpack://ESMira/./src/frontend/ts/pages/attend.tsx","webpack://ESMira/./src/frontend/ts/pages/demo.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx"],"sourcesContent":["import {createStudyUrl} from \"../constants/methods\";\nimport qrcode from \"qrcode-generator\";\nimport {SectionContent} from \"../site/SectionContent\";\n\nexport class AddJsToServerHtml {\n\tprivate static getAccessKey(sectionContent: SectionContent): string {\n\t\tconst study = sectionContent.getStudyOrThrow()\n\t\treturn sectionContent.getDynamic(\"accessKey\", study.accessKeys.get().length ? study.accessKeys.get()[0].get() : \"\").get()\n\t}\n\t\n\tprivate static processView(view: HTMLElement, sectionContent: SectionContent): void {\n\t\tconst type = view.getAttribute(\"js-action\")\n\t\t\n\t\tswitch(type) {\n\t\t\tcase \"internalUrl\":\n\t\t\t\tview.setAttribute(\"href\", sectionContent.getUrl(view.getAttribute(\"href\")?.substring(1) ?? \"\"))\n\t\t\t\tbreak\n\t\t\tcase \"shown\":\n\t\t\t\tview.classList.remove(\"hidden\")\n\t\t\t\tbreak\n\t\t\tcase \"hidden\":\n\t\t\t\tview.classList.add(\"hidden\")\n\t\t\t\tbreak\n\t\t\tcase \"clickable\":\n\t\t\t\tview.classList.add(\"clickable\")\n\t\t\t\tif(view.hasAttribute(\"click-show\")) {\n\t\t\t\t\tconst showTarget = document.getElementById(view.getAttribute(\"click-show\") ?? \"\") as HTMLElement\n\t\t\t\t\tif(showTarget) {\n\t\t\t\t\t\tview.addEventListener(\"click\", () => {\n\t\t\t\t\t\t\tif(showTarget.classList.contains(\"hidden\"))\n\t\t\t\t\t\t\t\tshowTarget.classList.remove(\"hidden\")\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tshowTarget.classList.add(\"hidden\")\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"qr\":\n\t\t\t\tconst id = sectionContent.getStaticInt(\"id\") ?? -1\n\t\t\t\tconst qrCodeUrl = createStudyUrl(this.getAccessKey(sectionContent), id, id != -1)\n\t\t\t\tconst qr = qrcode(0, 'L')\n\t\t\t\t\n\t\t\t\tqr.addData(qrCodeUrl)\n\t\t\t\tqr.make()\n\t\t\t\tconst imgUrl = qr.createDataURL(6);\n\t\t\t\t(view as HTMLImageElement).src = imgUrl\n\t\t\t\tbreak\n\t\t}\n\t}\n\t\n\tpublic static process(rootView: HTMLElement, sectionContent: SectionContent): void {\n\t\tconst views = rootView.querySelectorAll(\"*[js-action]\")\n\t\tfor(let view of views as any) {\n\t\t\tthis.processView(view, sectionContent)\n\t\t}\n\t}\n}","import {SectionContent} from \"../site/SectionContent\";\nimport m, {Component, Vnode, VnodeDOM} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Study} from \"../data/study/Study\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {Input} from \"../data/study/Input\";\nimport {FILE_GET_QUESTIONNAIRE} from \"../constants/urls\";\nimport {Section} from \"../site/Section\";\nimport {AddJsToServerHtml} from \"../helpers/AddJsToServerHtml\";\n\ninterface ServerResponse {\n\tdataType: \"questionnaire\" | \"finished\" | \"forwarded\"\n\tsid: string\n\tcurrentPageInt: number\n\tpageHtml: string\n\tpageTitle: string\n\tmissingInput: string\n}\n\nexport class Content extends SectionContent {\n\tprivate pageTitle: string = \"\"\n\tprivate currentPageHtml: string = \"\"\n\tprivate currentPageInt: number = 0\n\tprotected noCookieSID: string = \"\"\n\tprivate isFinished: boolean = false\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\t\n\tpublic preInit(_study: Study): Promise<void> {\n\t\treturn this.loadQuestionnaire()\n\t}\n\t\n\tpublic title(): string {\n\t\treturn this.pageTitle\n\t}\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn <a class=\"smallText\" href={\"mailto: \" + this.getStudyOrThrow().contactEmail.get()}>{Lang.get(\"contactEmail\")}</a>\n\t}\n\t\n\tprotected getAttendQuestionnaire(): Questionnaire {\n\t\treturn this.getQuestionnaireOrThrow()\n\t}\n\t\n\tprotected createUrl(): string {\n\t\tconst studyId = this.getStaticInt(\"id\") ?? -1\n\t\tconst questionnaireId = this.getStaticInt(\"qId\") ?? -1\n\t\tconst accessKey = this.getDynamic(\"accessKey\", \"\")\n\t\t\n\t\treturn FILE_GET_QUESTIONNAIRE\n\t\t\t.replace(\"%d1\", studyId.toString())\n\t\t\t.replace(\"%d2\", questionnaireId.toString())\n\t\t\t.replace(\"%s1\", accessKey.get())\n\t\t\t.replace(\"%s2\", Lang.code)\n\t\t\t.replace(\"%s3\", this.noCookieSID)\n\t}\n\t\n\tpublic async loadQuestionnaire(formData: string = \"load\"): Promise<void> {\n\t\tconst response: ServerResponse = await this.section.loader.loadJson(this.createUrl(), \"post\", formData)\n\t\tthis.noCookieSID = response.sid\n\t\tthis.pageTitle = response.pageTitle\n\t\t\n\t\tswitch(response.dataType) {\n\t\t\tcase \"questionnaire\":\n\t\t\t\tthis.currentPageHtml = response.pageHtml\n\t\t\t\tthis.currentPageInt = response.currentPageInt\n\t\t\t\t\n\t\t\t\tif(response.missingInput) {\n\t\t\t\t\tconst missingElement = document.getElementById(`item-${response.missingInput}`)\n\t\t\t\t\tif(!missingElement)\n\t\t\t\t\t\treturn\n\t\t\t\t\tmissingElement.scrollIntoView({behavior: 'smooth'})\n\t\t\t\t\tmissingElement.style.outline = \"5px solid red\"\n\t\t\t\t\twindow.setTimeout(() => {\n\t\t\t\t\t\tmissingElement.style.outline = \"unset\"\n\t\t\t\t\t}, 3000)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase \"finished\":\n\t\t\t\tthis.isFinished = true\n\t\t\t\tbreak\n\t\t\tcase \"forwarded\":\n\t\t\t\tthis.currentPageHtml = response.pageHtml\n\t\t}\n\t\t\n\t\tm.redraw()\n\t}\n\t\n\tprotected getQuestionnaireView(questionnaire: Questionnaire): Vnode<any, any> {\n\t\treturn m(QuestionnaireComponent, {\n\t\t\tquestionnaire: questionnaire,\n\t\t\tcurrentPageHtml: this.currentPageHtml,\n\t\t\tcurrentPageInt: this.currentPageInt,\n\t\t\tsectionContent: this\n\t\t})\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tconst questionnaire = this.getAttendQuestionnaire()\n\t\t\n\t\treturn this.isFinished\n\t\t\t? <div class=\"center spacingTop highlight\">{study.webQuestionnaireCompletedInstructions.get() || Lang.get(\"default_webQuestionnaireCompletedInstructions\")}</div>\n\t\t\t: this.getQuestionnaireView(questionnaire)\n\t}\n}\n\ninterface QuestionnaireComponentOptions {\n\tquestionnaire: Questionnaire\n\tcurrentPageHtml: string\n\tcurrentPageInt: number\n\tsectionContent: Content\n}\nclass QuestionnaireComponent implements Component<QuestionnaireComponentOptions, any> {\n\tprivate rootView?: HTMLElement\n\tprivate handleInputs(input: Input): void {\n\t\tconst form = document.forms.namedItem(\"sectionContent\")\n\t\tif(!form)\n\t\t\treturn\n\t\tconst formElements = form.elements\n\t\tconst child = formElements.namedItem(`responses[${input.name.get()}]`) as HTMLInputElement\n\t\t\n\t\tif(!child)\n\t\t\treturn\n\t\tif(child.hasAttribute(\"was-processed\"))\n\t\t\treturn\n\t\tif(child instanceof Element)\n\t\t\tchild.setAttribute(\"was-processed\", \"true\")\n\t\tif(child instanceof RadioNodeList) {\n\t\t\tconst entry =  (child[0] as HTMLInputElement)\n\t\t\tentry.setAttribute(\"was-processed\", \"true\")\n\t\t}\n\t\t\n\t\tswitch(input.responseType.get()) {\n\t\t\tcase \"va_scale\":\n\t\t\t\tif(child?.getAttribute(\"no-value\")) {\n\t\t\t\t\tchild.classList.add(\"not-clicked\")\n\t\t\t\t\tconst wasClicked = () => {\n\t\t\t\t\t\tchild.classList.remove(\"not-clicked\")\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t\tchild.addEventListener(\"mousedown\", wasClicked)\n\t\t\t\t\tchild.addEventListener(\"touchstart\", wasClicked)\n\t\t\t\t}\n\t\t\t\tif(input.showValue.get()) {\n\t\t\t\t\tchild.addEventListener(\"change\", () => {\n\t\t\t\t\t\tif(child.previousElementSibling)\n\t\t\t\t\t\t\t(child.previousElementSibling as HTMLElement).innerText = child.value\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\t\n\tpublic oncreate(vNode: VnodeDOM<QuestionnaireComponentOptions, any>): void {\n\t\tthis.rootView = vNode.dom as HTMLElement\n\t}\n\tpublic onupdate(vNode: VnodeDOM<QuestionnaireComponentOptions, any>): void {\n\t\t//update inputs:\n\t\t\n\t\tconst inputs = vNode.attrs.questionnaire.pages.get()[vNode.attrs.currentPageInt].inputs.get()\n\t\tinputs.forEach(this.handleInputs)\n\t\t\n\t\t\n\t\t//add event to form:\n\t\t\n\t\tconst forms = vNode.dom.getElementsByTagName(\"form\")\n\t\tfor(let form of forms as any) {\n\t\t\tif(form.getAttribute(\"was-processed\"))\n\t\t\t\tcontinue\n\t\t\tform.setAttribute(\"was-processed\", \"1\")\n\t\t\tform.addEventListener(\"submit\", this.onFormSubmit.bind(this, vNode.attrs.sectionContent.loadQuestionnaire.bind(vNode.attrs.sectionContent)))\n\t\t}\n\t\t\n\t\t\n\t\t// add javascript content:\n\t\t\n\t\tAddJsToServerHtml.process(vNode.dom as HTMLElement, vNode.attrs.sectionContent)\n\t}\n\t\n\tprivate async onFormSubmit(loadQuestionnaire: (type: string) => Promise<void>, e: SubmitEvent): Promise<void> {\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\t\tconst formData = new FormData(e.target as HTMLFormElement)\n\t\t\n\t\tlet data = (e.submitter as HTMLInputElement).name\n\t\tformData.forEach((value, key) => {\n\t\t\tdata += `&${key}=${value}`\n\t\t})\n\t\t\n\t\tawait loadQuestionnaire(data)\n\t\twindow.setTimeout(() => this.rootView?.scrollIntoView({block: \"start\", behavior: 'smooth'}), 300)\n\t}\n\t\n\tpublic view(vNode: Vnode<QuestionnaireComponentOptions, any>): Vnode<any, any> {\n\t\treturn <div class=\"questionnaireBox\">\n\t\t\t{m.trust(vNode.attrs.currentPageHtml)}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Content as AttendContent} from \"../pages/attend\";\nimport {FILE_GET_QUESTIONNAIRE} from \"../constants/urls\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {ObserverId} from \"../observable/BaseObservable\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {Study} from \"../data/study/Study\";\n\nexport class Content extends AttendContent {\n\tprivate readonly questionnaireIndex: ObservablePrimitive<number>\n\tprivate readonly indexObserverId: ObserverId\n\tprivate langObserverId: ObserverId\n\t\n\tconstructor(section: Section, study: Study) {\n\t\tsuper(section)\n\t\tthis.questionnaireIndex = this.getDynamic(\"questionnaireIndex\", 0)\n\t\tthis.indexObserverId = this.questionnaireIndex.addObserver(() => {\n\t\t\tthis.loadQuestionnaire()\n\t\t})\n\t\tthis.langObserverId = study.currentLangCode.addObserver(() => {\n\t\t\tthis.loadQuestionnaire()\n\t\t})\n\t}\n\t\n\tprotected createUrl(): string {\n\t\tconst studyId = this.getStaticInt(\"id\") ?? -1\n\t\tconst questionnaire = this.getAttendQuestionnaire()\n\t\tconst accessKey = this.getDynamic(\"accessKey\", \"\").get()\n\n\t\treturn FILE_GET_QUESTIONNAIRE\n\t\t\t.replace(\"%d1\", studyId.toString())\n\t\t\t.replace(\"%d2\", questionnaire.internalId.get().toString())\n\t\t\t.replace(\"%s1\", accessKey)\n\t\t\t.replace(\"%s2\", Lang.code)\n\t\t\t.replace(\"%s3\", `demo=1&${this.noCookieSID}`)\n\t}\n\t\n\tprotected getAttendQuestionnaire(): Questionnaire {\n\t\tif(this.section.sectionValue == \"static\") {\n\t\t\treturn this.getQuestionnaireOrThrow()\n\t\t}\n\t\telse {\n\t\t\tconst study = this.getStudyOrThrow()\n\t\t\tconst questionnaireIndex = this.questionnaireIndex.get()\n\t\t\treturn study.questionnaires.get()[questionnaireIndex]\n\t\t}\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\t\n\t\tconst questionnaire = this.getAttendQuestionnaire()\n\t\t\n\t\treturn <div>\n\t\t\t{questionnaire.isDifferent() &&\n\t\t\t\t<div class=\"highlight center\">\n\t\t\t\t\t{Lang.get(\"questionnaire_outdated\")}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{this.getQuestionnaireView(questionnaire)}\n\t\t</div>\n\t}\n\t\n\tdestroy(): void {\n\t\tsuper.destroy()\n\t\tthis.indexObserverId.removeObserver()\n\t\tthis.langObserverId.removeObserver()\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}"],"names":["getAccessKey","sectionContent","study","getStudyOrThrow","getDynamic","accessKeys","get","length","processView","view","getAttribute","setAttribute","getUrl","substring","classList","remove","add","hasAttribute","document","getElementById","addEventListener","contains","id","getStaticInt","qrCodeUrl","this","qr","addData","make","imgUrl","createDataURL","src","process","rootView","querySelectorAll","pageTitle","currentPageHtml","currentPageInt","noCookieSID","isFinished","preLoad","section","getStudyPromise","preInit","_study","loadQuestionnaire","title","titleExtra","class","href","contactEmail","getAttendQuestionnaire","getQuestionnaireOrThrow","createUrl","studyId","questionnaireId","accessKey","replace","toString","code","formData","loader","loadJson","response","sid","dataType","pageHtml","missingInput","scrollIntoView","behavior","style","outline","window","setTimeout","getQuestionnaireView","questionnaire","QuestionnaireComponent","getView","webQuestionnaireCompletedInstructions","handleInputs","input","form","forms","namedItem","child","elements","name","Element","RadioNodeList","responseType","wasClicked","showValue","previousElementSibling","innerText","value","oncreate","vNode","dom","onupdate","attrs","pages","inputs","forEach","getElementsByTagName","onFormSubmit","bind","e","preventDefault","stopPropagation","FormData","target","data","submitter","key","block","questionnaireIndex","indexObserverId","addObserver","langObserverId","currentLangCode","internalId","sectionValue","questionnaires","isDifferent","destroy","removeObserver","_section","Promise","resolve","hasAlternatives","getAlternatives","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticString","getStudyOrNull","studies","studyLoader","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","getTools","getAdmin","hasPermission","isLoggedIn","depth","getHash","goTo","location","hash","newSection"],"sourceRoot":""}