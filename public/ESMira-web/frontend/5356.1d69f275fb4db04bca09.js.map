{"version":3,"file":"5356.1d69f275fb4db04bca09.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/sumScores.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {Section} from \"../site/Section\";\nimport {BtnAdd, BtnTrash} from \"../widgets/BtnWidgets\";\nimport {createUniqueName} from \"../helpers/UniqueName\";\nimport { SumScore } from \"../data/study/SumScore\";\nimport { DashRow } from \"../widgets/DashRow\";\nimport { DashElement } from \"../widgets/DashElement\";\n\nexport class Content extends SectionContent {\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\tpublic title(): string {\n\t\treturn Lang.get(\"edit_sumScores\")\n\t}\n\t\n\tprivate addSumScore(questionnaire: Questionnaire): void {\n\t\tconst name = createUniqueName(this.getStudyOrThrow())\n\t\tif(!name)\n\t\t\treturn\n\t\tquestionnaire.sumScores.push({name: name})\n\t\tthis.newSection(`sumScoreEdit,qId:${questionnaire.internalId.get()},sumScoreI:${questionnaire.sumScores.get().length - 1}`)\n\t}\n\tprivate removeSumScore(questionnaire: Questionnaire, index: number): void {\n\t\tquestionnaire.sumScores.remove(index)\n\t\twindow.location.hash = `${this.section.getHash(this.section.depth)}`\n\t}\n\n\tprivate addVirtualInput(questionnaire: Questionnaire): void {\n\t\tconst name = createUniqueName(this.getStudyOrThrow())\n\t\tif(!name)\n\t\t\treturn\n\t\tquestionnaire.virtualInputs.push(name)\n\t}\n\n\tprivate removeVirtualInput(questionnaire: Questionnaire, index: number): void {\n\t\tquestionnaire.virtualInputs.remove(index)\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\tif(!study.questionnaires.get().length)\n\t\t\treturn <div class=\"center spacingTop\">{Lang.get(\"info_no_questionnaires_created\")}</div>\n\t\t\n\t\treturn <div>\n\t\t\t{study.questionnaires.get().map((questionnaire) =>\n\t\t\t\t<div>\n\t\t\t\t\t{TitleRow(questionnaire.getTitle())}\n\t\t\t\t\t<div class=\"spacingTop spacingBottom\">\n\t\t\t\t\t\t{DashRow(\n\t\t\t\t\t\t\tDashElement(null, {\n\t\t\t\t\t\t\t\tcontent: this.getSumScoresEntryView(questionnaire)\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\tDashElement(null, {\n\t\t\t\t\t\t\t\tcontent: this.getVirtualInputsEntryView(questionnaire)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t\n\t\t</div>\n\t}\n\n\tprivate getSumScoresEntryView(questionnaire: Questionnaire): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<h2 class=\"center\">\n\t\t\t\t{Lang.getWithColon(\"sum_scores\")}\n\t\t\t</h2>\n\t\t\t<div class=\"listParent\">\n\t\t\t\t<div class=\"lastChild\">\n\t\t\t\t\t{questionnaire.sumScores.get().map((SumScore, index) =>\n\t\t\t\t\t\t<div class=\"verticalPadding\">\n\t\t\t\t\t\t\t{BtnTrash(this.removeSumScore.bind(this, questionnaire, index))}\n\t\t\t\t\t\t\t<a href={this.getUrl(`sumScoreEdit,qId:${questionnaire.internalId.get()},sumScoreI:${index}`)}>\n\t\t\t\t\t\t\t\t<span>{SumScore.name.get()}</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t{BtnAdd(this.addSumScore.bind(this, questionnaire), Lang.get(\"add\"))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\tprivate getVirtualInputsEntryView(questionnaire: Questionnaire): Vnode<any, any> {\n\t\treturn <div>\n\t\t\t<h2 class=\"center\">\n\t\t\t\t{Lang.getWithColon(\"virtual_inputs\")}\n\t\t\t</h2>\n\t\t\t<div class=\"listParent\">\n\t\t\t\t<div class=\"lastChild\">\n\t\t\t\t\t{questionnaire.virtualInputs.get().map((VirtualInput, index) =>\n\t\t\t\t\t\t<div class=\"verticalPadding\">\n\t\t\t\t\t\t\t{BtnTrash(this.removeVirtualInput.bind(this, questionnaire, index))}\n\t\t\t\t\t\t\t<span>{VirtualInput.get()}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t{BtnAdd(this.addVirtualInput.bind(this, questionnaire), Lang.get(\"add\"))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["preLoad","section","getStudyPromise","title","get","addSumScore","questionnaire","name","this","getStudyOrThrow","sumScores","push","newSection","internalId","length","removeSumScore","index","remove","window","location","hash","getHash","depth","addVirtualInput","virtualInputs","removeVirtualInput","getView","study","questionnaires","map","getTitle","class","content","getSumScoresEntryView","getVirtualInputsEntryView","getWithColon","SumScore","bind","href","getUrl","VirtualInput","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","id","studies","studyLoader","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","studyId","isLoggedIn","goTo","target","destroy","BtnCustom","icon","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","view","classString","floatingRight","floating","small","highlight","disabled","template","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","DashTemplateView","startsWith","showAsClickable","attrs","hasOwnProperty","getNewClassString","size","oldClassString","DashElement","option","DashRow","imageRecord","Android","iOS","Web","onPointerEnter","e","onPointerLeave","NotCompatibleIcon","translationRecord","Lang","devices","device","join","onpointerenter","onpointerleave","TitleRow"],"sourceRoot":""}