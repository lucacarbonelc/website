{"version":3,"file":"7316.2701d1e9388f178ac436.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/serverSettings.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/ChangeLanguageList.tsx","webpack://ESMira/./src/frontend/ts/widgets/DragContainer.tsx","webpack://ESMira/./src/frontend/ts/widgets/TabBar.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {TabBar} from \"../widgets/TabBar\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {FILE_ADMIN, URL_RELEASES_LIST} from \"../constants/urls\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {RichText} from \"../widgets/RichText\";\nimport {ObservableLangChooser} from \"../widgets/ObservableLangChooser\";\nimport {ChangeLanguageList} from \"../widgets/ChangeLanguageList\";\nimport {Section} from \"../site/Section\";\nimport {ObserverId} from \"../observable/BaseObservable\";\nimport {ServerSettingsLoader} from \"../loader/ServerSettingsLoader\";\nimport MarkdownIt from \"markdown-it\";\nimport {Requests} from \"../singletons/Requests\";\nimport {PackageVersionComparator} from \"../singletons/PackageVersionComparator\";\n\ntype ReleaseType = {version: string, date: Date, changeLog: string, downloadUrl: string}\n\nexport class Content extends SectionContent {\n\tprivate loader: ServerSettingsLoader\n\tprivate markdownRenderer = new MarkdownIt()\n\tprivate noConnection = false\n\tprivate loadPreReleases = false\n\tprivate selectedIndex = new ObservablePrimitive(0, null, \"serverSettings\")\n\tprivate readonly observerId: ObserverId\n\tprivate hasUpdates: boolean = false\n\tprivate newestVersionName: string = \"\"\n\tprivate newestVersionDownloadUrl: string = \"\"\n\tprivate releaseData: ReleaseType[] = []\n\tprivate debuggingOn = process.env.NODE_ENV !== \"production\"\n\tprivate changeLanguageList: ChangeLanguageList\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tsection.getTools().settingsLoader.init()\n\t\t]\n\t}\n\t\n\tconstructor(sitePage: Section, loader: ServerSettingsLoader) {\n\t\tsuper(sitePage)\n\t\tthis.loader = loader\n\t\tthis.changeLanguageList = new ChangeLanguageList(() => {\n\t\t\treturn this.loader.getSettings()\n\t\t})\n\t\t\n\t\tthis.observerId = loader.getSettings().addObserver(this.updateSaveState.bind(this))\n\t\tthis.section.siteData.dynamicCallbacks.save = this.saveServerSettings.bind(this)\n\t\tthis.updateSaveState()\n\t}\n\tpublic async preInit(): Promise<any> {\n\t\tawait this.changeLanguageList.promise\n\t\tawait this.loadUpdates()\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"server_settings\")\n\t}\n\tpublic titleExtra(): Vnode<any, any> {\n\t\treturn ObservableLangChooser(this.loader.getSettings())\n\t}\n\t\n\tprivate getUpdateUrl(): string {\n\t\treturn `${FILE_ADMIN}?type=UpdateVersion&fromVersion=${this.section.siteData.packageVersion}`\n\t}\n\t\n\tprivate async saveServerSettings(): Promise<void> {\n\t\tawait this.section.loader.showLoader(\n\t\t\tthis.getTools().settingsLoader.saveSettings()\n\t\t)\n\t}\n\t\n\tprivate async loadUpdates(): Promise<void> {\n\t\tlet jsonString: string = \"\"\n\t\ttry {\n\t\t\tjsonString = await this.section.loader.loadRaw(URL_RELEASES_LIST)\n\t\t\tthis.noConnection = false\n\t\t}\n\t\tcatch(e) {\n\t\t\tthis.noConnection = true\n\t\t\treturn\n\t\t}\n\t\tconst releases = JSON.parse(jsonString)\n\t\tconst stableReleases: ReleaseType[] = []\n\t\tconst unstableReleases: ReleaseType[] = []\n\t\t\n\t\t\n\t\t//sort releases:\n\t\t\n\t\tlet searchingForRelease = true;\n\t\tfor(let i=releases.length-1; i>=0; --i) {\n\t\t\tlet {tag_name: tagName, prerelease, body, published_at: publishedAt, assets} = releases[i];\n\t\t\t\n\t\t\tif(!PackageVersionComparator(this.section.siteData.packageVersion).isBelowThen(tagName))\n\t\t\t\tcontinue\n\t\t\t\n\t\t\tlet data = {version: tagName, date: new Date(publishedAt), changeLog: body, downloadUrl: assets[0][\"browser_download_url\"]};\n\t\t\tif(prerelease)\n\t\t\t\tunstableReleases.push(data);\n\t\t\telse\n\t\t\t\tstableReleases.push(data);\n\t\t}\n\t\t\n\t\t//set release information:\n\t\t\n\t\tthis.releaseData = this.loadPreReleases ? unstableReleases : stableReleases\n\t\t\n\t\tif(this.releaseData.length) {\n\t\t\tthis.hasUpdates = true\n\t\t\tconst lastRelease = this.releaseData[this.releaseData.length-1]\n\t\t\tthis.newestVersionName = lastRelease.version\n\t\t\tthis.newestVersionDownloadUrl = lastRelease.downloadUrl\n\t\t}\n\t\telse\n\t\t\tthis.hasUpdates = false\n\t}\n\tprivate async updateNow(): Promise<void> {\n\t\tif(this.loadPreReleases) {\n\t\t\tif(!confirm(Lang.get(\"confirm_prerelease_update\")))\n\t\t\t\treturn;\n\t\t}\n\t\tconst loader = this.section.loader\n\t\tawait loader.showLoader(new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait Requests.loadJson(`${FILE_ADMIN}?type=DownloadUpdate`, \"post\", `url=${this.newestVersionDownloadUrl}`)\n\t\t\t\t\n\t\t\t\tloader.update(Lang.get(\"state_installing\"))\n\t\t\t\tawait Requests.loadJson(`${FILE_ADMIN}?type=DoUpdate`)\n\t\t\t\t\n\t\t\t\tloader.update(Lang.get(\"state_finish_installing\"))\n\t\t\t\tawait Requests.loadJson(`${FILE_ADMIN}?type=UpdateVersion&fromVersion=${this.section.siteData.packageVersion}`)\n\t\t\t\tresolve(null)\n\t\t\t}\n\t\t\tcatch(e) {\n\t\t\t\treject(e)\n\t\t\t}\n\t\t}), Lang.get(\"state_downloading\"))\n\t\t\n\t\talert(Lang.get(\"info_web_update_complete\"));\n\t\twindow.location.reload();\n\t}\n\tprivate async changeRelease(e: InputEvent): Promise<void> {\n\t\tthis.loadPreReleases = (e.target as HTMLSelectElement).selectedIndex == 1\n\t\tawait this.loadUpdates()\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\treturn TabBar(this.selectedIndex, [\n\t\t\t{\n\t\t\t\ttitle: Lang.get(\"general\"),\n\t\t\t\tview: this.getGeneralView.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: Lang.get(\"home_message\"),\n\t\t\t\tview: this.getHomeMessageView.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: Lang.get(\"impressum\"),\n\t\t\t\tview: this.getImpressumView.bind(this)\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: Lang.get(\"privacyPolicy\"),\n\t\t\t\tview: this.getPrivacyPolicyView.bind(this)\n\t\t\t}\n\t\t])\n\t}\n\t\n\tprivate getGeneralView(): Vnode<any, any> {\n\t\tconst settings = this.loader.getSettings()\n\t\t\n\t\treturn <div>\n\t\t\t\n\t\t\t<div class=\"center\">\n\t\t\t\t<label>\n\t\t\t\t\t<small>{Lang.get(\"server_name\")}</small>\n\t\t\t\t\t<input type=\"text\" {... BindObservable(settings.siteTranslations.serverName)}/>\n\t\t\t\t\t{ObservableLangChooser(settings)}\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"server_update\", this.section.siteData.packageVersion))}\n\t\t\t\n\t\t\t<label class=\"right\">\n\t\t\t\t<small>{Lang.get(\"update_version\")}</small>\n\t\t\t\t<select class=\"small\" onchange={this.changeRelease.bind(this)}>\n\t\t\t\t\t<option>{Lang.get(\"stable\")}</option>\n\t\t\t\t\t<option>{Lang.get(\"unstable\")}</option>\n\t\t\t\t</select>\n\t\t\t</label>\n\t\t\t\n\t\t\t{this.hasUpdates\n\t\t\t\t? <div class=\"spacingTop\">\n\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t<span>{Lang.get(\"info_newVersionAvailable\")}</span>\n\t\t\t\t\t\t&nbsp;\n\t\t\t\t\t\t<span class=\"highlight\">{this.newestVersionName}</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"center spacingTop\">\n\t\t\t\t\t\t<input type=\"button\" onclick={this.updateNow.bind(this)} value={Lang.get(\"update_now\")}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.releaseData.map((data) =>\n\t\t\t\t\t\t<div class=\"spacingTop\">\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t<span>{data.version}</span>\n\t\t\t\t\t\t\t\t<span class=\"spacingLeft smallText middle\">({data.date.toLocaleString()})</span>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<div>{m.trust(this.markdownRenderer.render(data.changeLog))}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t: <div class=\"center highlight\">{this.noConnection ? Lang.get('info_no_connection_to_update_server') : Lang.get('info_ESMira_is_up_to_date')}</div>\n\t\t\t}\n\t\t\t<br/><br/>\n\t\t\t\n\t\t\t\n\t\t\t{TitleRow(Lang.getWithColon(\"additional_languages\"))}\n\t\t\t{this.changeLanguageList.getView()}\n\t\t\t\n\t\t\t{this.debuggingOn &&\n\t\t\t\t<div>\n\t\t\t\t\t<br/><br/>\n\t\t\t\t\t{TitleRow(\"Debugging:\")}\n\t\t\t\t\t<a href={this.getUpdateUrl()}>Run update script</a>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t</div>\n\t}\n\tprivate getHomeMessageView(): Vnode<any, any> {\n\t\tconst settings = this.loader.getSettings()\n\t\treturn <div>\n\t\t\t<div class=\"line fakeLabel spacingBottom\">\n\t\t\t\t{RichText(settings.siteTranslations.homeMessage)}\n\t\t\t\t{ObservableLangChooser(settings)}\n\t\t\t</div>\n\t\t</div>\n\t}\n\tprivate getImpressumView(): Vnode<any, any> {\n\t\tconst settings = this.loader.getSettings()\n\t\treturn <div>\n\t\t\t<div class=\"line fakeLabel spacingBottom\">\n\t\t\t\t{RichText(settings.siteTranslations.impressum)}\n\t\t\t\t{ObservableLangChooser(settings)}\n\t\t\t</div>\n\t\t</div>\n\t}\n\tprivate getPrivacyPolicyView(): Vnode<any, any> {\n\t\tconst settings = this.loader.getSettings()\n\t\treturn <div>\n\t\t\t<div class=\"line fakeLabel spacingBottom\">\n\t\t\t\t{RichText(settings.siteTranslations.privacyPolicy)}\n\t\t\t\t{ObservableLangChooser(settings)}\n\t\t\t</div>\n\t\t</div>\n\t}\n\t\n\tprivate updateSaveState(): void {\n\t\tthis.setDynamic(\"showSaveButton\", this.loader.getSettings().isDifferent() ?? false)\n\t\tm.redraw()\n\t}\n\t\n\tpublic destroy(): void {\n\t\tthis.observerId.removeObserver()\n\t\tthis.setDynamic(\"showSaveButton\", false)\n\t\tthis.section.siteData.dynamicCallbacks.save = undefined\n\t\tsuper.destroy();\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {BindObservable, OnBeforeChangeTransformer} from \"./BindObservable\";\nimport {TranslationRootInterface} from \"../observable/interfaces/TranslationRootInterface\";\nimport {BtnTrash} from \"./BtnWidgets\";\n\nexport class ChangeLanguageList {\n\tpublic readonly promise: Promise<void>\n\tprivate readonly langCodeNames: { langName: string, langCode: string }[] = []\n\tprivate readonly getTranslationRoot: () => TranslationRootInterface\n\t\n\tconstructor(getTranslationRoot: () => TranslationRootInterface) {\n\t\tthis.getTranslationRoot = getTranslationRoot\n\t\tthis.promise = import(`../../langCodes/${Lang.code}.json`)\n\t\t\t.then(({default: data}) => data)\n\t\t\t.then((langCollection: Record<string, string>) => {\n\t\t\t\tfor(let code in langCollection) {\n\t\t\t\t\tthis.langCodeNames.push({langName: langCollection[code], langCode: code})\n\t\t\t\t}\n\t\t\t})\n\t}\n\t\n\tprivate addLang(translationRoot: TranslationRootInterface, e: InputEvent): void {\n\t\tconst element = e.target as HTMLSelectElement\n\t\tconst langCode = element.value\n\t\t\n\t\ttranslationRoot.langCodes.push(langCode)\n\t\ttranslationRoot.addLanguage(langCode)\n\t\telement.selectedIndex = 0\n\t\tconsole.log(translationRoot, langCode)\n\t}\n\t\n\tprivate removeLang(translationRoot: TranslationRootInterface, langCode: string): void {\n\t\tconst index = translationRoot.langCodes.indexOf(langCode)\n\t\ttranslationRoot.langCodes.remove(index)\n\t\ttranslationRoot.removeLanguage(langCode)\n\t\t\n\t\tif(langCode === translationRoot.defaultLang.get())\n\t\t\ttranslationRoot.defaultLang.set(translationRoot.langCodes.get()[0].get() ?? \"unknown\")\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst translationRoot = this.getTranslationRoot()\n\t\tconst langCodes = translationRoot.langCodes.get()\n\t\treturn <div class=\"listParent\">\n\t\t\t<div class=\"listChild\">\n\t\t\t\t{langCodes.map((langCode) =>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{ langCodes.length > 1 &&\n\t\t\t\t\t\t\tBtnTrash(this.removeLang.bind(this, translationRoot, langCode.get()))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t<label class=\"middle\">\n\t\t\t\t\t\t\t<small>{Lang.get(\"language\")}</small>\n\t\t\t\t\t\t\t<select {... BindObservable(langCode, new OnBeforeChangeTransformer<string>((before, after) => {\n\t\t\t\t\t\t\t\ttranslationRoot.renameLanguage(before, after)\n\t\t\t\t\t\t\t\tif(translationRoot.defaultLang.get() == before)\n\t\t\t\t\t\t\t\t\ttranslationRoot.defaultLang.set(after)\n\t\t\t\t\t\t\t\treturn after\n\t\t\t\t\t\t\t}))}>\n\t\t\t\t\t\t\t\t<option>unnamed</option>\n\t\t\t\t\t\t\t\t{this.langCodeNames.map((entry) => <option value={entry.langCode}>{entry.langName}</option>)}\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<input type=\"radio\" name=\"default_language\" checked={translationRoot.defaultLang.get() == langCode.get()} onchange={function(this:HTMLInputElement) {\n\t\t\t\t\t\t\t\tif(this.checked)\n\t\t\t\t\t\t\t\t\ttranslationRoot.defaultLang.set(langCode.get())\n\t\t\t\t\t\t\t}}/>\n\t\t\t\t\t\t\t<span>{Lang.get(\"default_language\")}</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div class=\"spacingTop\">\n\t\t\t\t\t<label class=\"middle spacingLeft\">\n\t\t\t\t\t\t<small>{Lang.get(\"language\")}</small>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<select class=\"smallText\" onchange={this.addLang.bind(this, translationRoot)}>\n\t\t\t\t\t\t\t<option>{Lang.get(\"select_to_add\")}</option>\n\t\t\t\t\t\t\t{this.langCodeNames.map((entry) => <option value={entry.langCode}>{entry.langName}</option>)}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t}\n}","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport addSvg from \"../../imgs/icons/dragHandle.svg?raw\"\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface DragTools {\n\tgetDragTarget(index: number, targetList: ArrayType, content?: Vnode<any, any>): Vnode<any, any>\n\tgetDragStarter(index: number, dragTarget: ArrayType): Vnode<any, any>\n}\n\ntype ArrayType = ArrayInterface<any, BaseObservable<any>>\n\ninterface DragContainerImpOptions {\n\tcontent: (container: DragTools) => Vnode<any, any>\n}\nclass DragContainerImp implements DragTools, Component<DragContainerImpOptions, any> {\n\tprivate contentVNode?: VnodeDOM<any, any>\n\tprivate currentStartList?: ArrayType\n\tprivate currentTargetList?: ArrayType\n\tprivate currentStartIndex: number = 0\n\tprivate currentTargetIndex: number = 0\n\tprivate currentDragClone?: HTMLElement\n\tprivate currentStartElement?: HTMLElement\n\tprivate startIndex: number = 0\n\t\n\tpublic getDragTarget(index: number, targetList: ArrayType, content: Vnode<any, any> = <div></div>): Vnode<any, any> {\n\t\tcontent.attrs[\"className\"] = `dragTarget ${content.attrs[\"className\"] ?? \"\"}`\n\t\tcontent.attrs[\"ondragend\"] = this.ondragend.bind(this)\n\t\tcontent.attrs[\"ondragenter\"] = this.ondragenter.bind(this, index, targetList)\n\t\treturn content\n\t}\n\t\n\tpublic getDragStarter(index: number, targetList: ArrayType): Vnode<any, any> {\n\t\treturn <div class=\"btn clickable dragStarter\" draggable=\"true\" ondragstart={this.ondragstart.bind(this, index, targetList)}>\n\t\t\t{m.trust(addSvg)}\n\t\t</div>\n\t}\n\t\n\t\n\tprivate getIndexInContainer(searchEl: HTMLElement): number {\n\t\tconst htmlCollection = this.contentVNode?.dom.getElementsByClassName(\"dragTarget\")\n\t\tif(htmlCollection) {\n\t\t\tfor(let i = htmlCollection.length - 1; i >= 0; --i) {\n\t\t\t\tif(htmlCollection[i] === searchEl)\n\t\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\tprivate addDragSpacer(locationEl: HTMLElement): void {\n\t\tlet insertBefore: Element | null = locationEl //when insertBefore is null, currentDragClone will be placed at the end\n\t\tif(!this.currentDragClone)\n\t\t\treturn\n\t\tif(this.currentDragClone.parentNode) {\n\t\t\tconst locationIndex = this.getIndexInContainer(locationEl)\n\t\t\tconst spacerIndex = this.getIndexInContainer(this.currentDragClone)\n\t\t\t\n\t\t\tif(spacerIndex < this.startIndex) { //mouse moved up (/right) from starting point\n\t\t\t\tif(spacerIndex < locationIndex) { //mouse is moving down (/left) again\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { //mouse moved down (/left) from starting point\n\t\t\t\t\n\t\t\t\t//we need to add one to targetIndex.\n\t\t\t\t// But when we are in the same list, removing the item (before moving it) means that targetIndex points to the element afterwards anyway.\n\t\t\t\t// But when we are in another list, we need to correct manually:\n\t\t\t\tif(this.currentStartList != this.currentTargetList)\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t\n\t\t\t\tif(spacerIndex > locationIndex) //mouse is moving up (/right) again\n\t\t\t\t\t--this.currentTargetIndex\n\t\t\t\telse\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t}\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t}\n\t\tlocationEl.parentNode?.insertBefore(this.currentDragClone, insertBefore)\n\t}\n\t\n\tprivate ondragstart(index: number, targetList: ArrayType, e: DragEvent): boolean {\n\t\tlet targetElement = e.currentTarget as HTMLElement\n\t\twhile(targetElement && !targetElement.classList.contains(\"dragTarget\")) {\n\t\t\ttargetElement = targetElement.parentNode as HTMLElement\n\t\t}\n\t\tconst dragRoot = this.contentVNode?.dom\n\t\tif(!dragRoot)\n\t\t\treturn false\n\t\t\n\t\t\n\t\tthis.startIndex = this.getIndexInContainer(targetElement)\n\t\t\n\t\tthis.currentStartList = targetList\n\t\tthis.currentStartIndex = index\n\t\t\n\t\tthis.currentDragClone = targetElement.cloneNode(true) as HTMLElement\n\t\tthis.currentDragClone?.classList.add(\"drag_spacer\")\n\t\t\n\t\tthis.currentDragClone?.addEventListener(\"dragover\", this.ondragover.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"dragleave\", this.ondragleave.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"drop\", this.ondrop.bind(this))\n\t\t\n\t\ttargetElement.classList.add(\"dragStarted\")\n\t\te.dataTransfer?.setDragImage(targetElement, 0, 0)\n\t\t\n\t\t\n\t\tthis.currentStartElement = targetElement\n\t\t\n\t\twindow.setTimeout( () => {\n\t\t\t//in firefox: setDragImage() seems to stop working when the class of document.body is changed\n\t\t\t//in chrome: DOM changes seem to cancel dragging altogether\n\t\t\t//solution: doing this stuff in a different \"thread\" seems to do the trick\n\t\t\tthis.addDragSpacer(targetElement)\n\t\t\tdragRoot.classList.add(\"is_dragging\")\n\t\t}, 0)\n\t\treturn true\n\t}\n\tprivate ondragend(e: DragEvent): void {\n\t\tthis.ondragleave(e)\n\t\te.preventDefault()\n\t\t\n\t\tthis.contentVNode?.dom.classList.remove(\"is_dragging\")\n\t\tthis.currentStartElement?.classList.remove(\"dragStarted\")\n\t\tif(this.currentDragClone?.parentNode)\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t\n\t\tthis.currentDragClone = undefined\n\t}\n\tprivate ondragenter(index: number, targetList: ArrayType, e: DragEvent): false {\n\t\tconst targetElement = e.currentTarget as HTMLElement\n\t\tif(!this.contentVNode?.dom.contains(targetElement))\n\t\t\treturn false\n\t\t\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"none\"\n\t\te.preventDefault()\n\t\t\n\t\tthis.currentTargetList = targetList\n\t\tthis.currentTargetIndex = index\n\t\t\n\t\tthis.addDragSpacer(targetElement)\n\t\treturn false\n\t}\n\t\n\tprivate ondragover(e: DragEvent): void {\n\t\te.preventDefault()\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"move\"\n\t}\n\tprivate ondragleave(e: DragEvent): void {\n\t\te.preventDefault()\n\t}\n\tprivate ondrop(e: DragEvent): void {\n\t\te.preventDefault()\n\t\t\n\t\tif(this.currentStartList == null || this.currentTargetList == null)\n\t\t\treturn\n\t\t\n\t\tif(this.currentTargetList == this.currentStartList)\n\t\t\tthis.currentTargetList.move(this.currentStartIndex, this.currentTargetIndex)\n\t\telse\n\t\t\tthis.currentTargetList.moveFromOtherList(this.currentStartList, this.currentStartIndex, this.currentTargetIndex)\n\t\t\n\t\tthis.currentStartList = this.currentTargetList = undefined\n\t\tthis.ondragend(e)\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<DragContainerImpOptions, any>): void {\n\t\tthis.contentVNode = vNode\n\t}\n\t\n\tpublic view(vNode: Vnode<DragContainerImpOptions, any>): Vnode<any, any> {\n\t\treturn vNode.attrs.content(this)\n\t}\n}\n\n\nexport function DragContainer(\n\tcontent: (container: DragTools) => Vnode<any, any>\n): Vnode<any, any> {\n\treturn m(DragContainerImp, { content: content })\n}","import m, {Vnode} from \"mithril\"\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {DragContainer} from \"./DragContainer\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface TabContent {\n\ttitle: string | Vnode<any, any>\n\tdraggableList?: ArrayInterface<any, BaseObservable<any>>\n\thighlight?: boolean\n\tview: () => Vnode<any, any>\n}\n\nexport function TabBar(selectedIndex: ObservablePrimitive<number>, tabs: (TabContent | undefined | false)[], smallBar: boolean = false, addBtnCallback?: (e: MouseEvent) => void): Vnode<any, any> {\n\tif(!tabs.length)\n\t\treturn (<div></div>)\n\t\n\tif(selectedIndex.get() >= tabs.length)\n\t\tselectedIndex.set(0)\n\treturn (\n\t\tDragContainer((dragTools) => {\n\t\t\tconst selectedTab = tabs[selectedIndex.get()]\n\t\t\treturn <div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class={smallBar ? \"tabBar smallBar\" : \"tabBar\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttabs.map((tab, index) => {\n\t\t\t\t\t\t\t\tif(!tab)\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\tconst className = `tab ${(selectedIndex.get() == index) ? \"selected\" : \"\"} ${tab.highlight ? \"highlight\" : \"\"}`\n\t\t\t\t\t\t\t\tconst content = <div class={className} onclick={() => {selectedIndex.set(index)}}>\n\t\t\t\t\t\t\t\t\t<div class=\"left\">\n\t\t\t\t\t\t\t\t\t\t{tab.draggableList && dragTools.getDragStarter(index, tab.draggableList)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span class=\"middle\">{tab.title}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\treturn tab.draggableList\n\t\t\t\t\t\t\t\t\t? dragTools.getDragTarget(index, tab.draggableList, content)\n\t\t\t\t\t\t\t\t\t: content\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{addBtnCallback &&\n\t\t\t\t\t\t\t<div class=\"tab addBtn\" onclick={addBtnCallback}>\n\t\t\t\t\t\t\t\t<span class=\"middle\">+</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"tabContent\">\n\t\t\t\t\t{selectedTab && selectedTab.view()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t})\n\t)\n}","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["sitePage","loader","markdownRenderer","noConnection","loadPreReleases","selectedIndex","hasUpdates","newestVersionName","newestVersionDownloadUrl","releaseData","debuggingOn","changeLanguageList","getSettings","observerId","addObserver","updateSaveState","bind","section","siteData","dynamicCallbacks","save","saveServerSettings","preLoad","getTools","settingsLoader","init","preInit","this","promise","loadUpdates","title","get","titleExtra","getUpdateUrl","packageVersion","showLoader","saveSettings","jsonString","loadRaw","releases","JSON","parse","stableReleases","unstableReleases","i","length","tagName","prerelease","body","publishedAt","assets","isBelowThen","data","version","date","Date","changeLog","downloadUrl","push","lastRelease","updateNow","confirm","Promise","resolve","reject","loadJson","update","alert","window","location","reload","changeRelease","e","target","getView","view","getGeneralView","getHomeMessageView","getImpressumView","getPrivacyPolicyView","settings","class","type","siteTranslations","serverName","getWithColon","onchange","onclick","value","map","toLocaleString","render","href","homeMessage","impressum","privacyPolicy","setDynamic","isDifferent","destroy","removeObserver","undefined","BtnCustom","icon","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","getTranslationRoot","langCodeNames","code","then","langCollection","langName","langCode","addLang","translationRoot","element","langCodes","addLanguage","console","log","removeLang","index","indexOf","remove","removeLanguage","defaultLang","set","before","after","renameLanguage","entry","name","checked","currentStartIndex","currentTargetIndex","startIndex","getDragTarget","targetList","content","attrs","ondragend","ondragenter","getDragStarter","draggable","ondragstart","getIndexInContainer","searchEl","htmlCollection","contentVNode","dom","getElementsByClassName","addDragSpacer","locationEl","insertBefore","currentDragClone","parentNode","locationIndex","spacerIndex","nextElementSibling","currentStartList","currentTargetList","removeChild","targetElement","currentTarget","classList","contains","dragRoot","cloneNode","add","addEventListener","ondragover","ondragleave","ondrop","dataTransfer","setDragImage","currentStartElement","setTimeout","preventDefault","dropEffect","move","moveFromOtherList","onupdate","vNode","DragContainer","DragContainerImp","TabBar","tabs","smallBar","addBtnCallback","dragTools","selectedTab","tab","className","highlight","draggableList","TitleRow"],"sourceRoot":""}