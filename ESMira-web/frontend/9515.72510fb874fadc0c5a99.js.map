{"version":3,"file":"9515.72510fb874fadc0c5a99.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/helpers/Scheduler.ts","webpack://ESMira/./src/frontend/ts/pages/calendar.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import { SignalTime } from \"../data/study/SignalTime\"\nimport {ActionTrigger} from \"../data/study/ActionTrigger\";\nimport {Schedule} from \"../data/study/Schedule\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport \"../number.extensions\"\nimport {getMidnightMillis} from \"../constants/methods\";\n\nconst ONE_DAY_MS = 1000 * 60 * 60* 24\nconst MIN_SCHEDULE_DISTANCE = 60000\nconst WEEKDAY_CODES = [ //Date.getDay() starts with Sunday\n\t1,  //Sunday\n\t2,  //Monday\n\t4,  //Tuesday\n\t8,  //Wednesday\n\t16,  //Thursday\n\t32,  //Friday\n\t64, //Saturday\n]\n\nclass Alarm {\n\tpublic readonly questionnaire: Questionnaire\n\tpublic readonly schedule: Schedule\n\tpublic readonly signalTime: SignalTime\n\tpublic readonly actionTrigger: ActionTrigger\n\tpublic readonly indexNum: number\n\tpublic readonly timestamp: number\n\t\n\tconstructor(questionnaire: Questionnaire, schedule: Schedule, signalTime: SignalTime, actionTrigger: ActionTrigger, timestamp: number, indexNum: number) {\n\t\tthis.questionnaire = questionnaire\n\t\tthis.schedule = schedule\n\t\tthis.signalTime = signalTime\n\t\tthis.actionTrigger = actionTrigger\n\t\tthis.timestamp = timestamp\n\t\tthis.indexNum = indexNum\n\t}\n\t\n\t\n\tpublic canBeRescheduled(): boolean {\n\t\tconst signalTime = this.signalTime\n\t\treturn signalTime != null && (!signalTime.random.get() || this.indexNum == signalTime.frequency.get())\n\t}\n}\n\n/**\n * This class is a copy of the Kotlin code in sharedCode.Scheduler\n * (only the needed methods are included)\n */\nexport class Scheduler {\n\tpublic readonly alarms: Alarm[] = []\n\tprivate readonly lastAlarmsPerSignalTime: Record<number, Alarm> = {}\n\t\n\t\n\tpublic scheduleAheadJavascript(joined: number) {\n\t\tfor(let i=50; i >= 0; --i) { //limit the amount of loops to not crash the browser\n\t\t\tfor(const id in this.lastAlarmsPerSignalTime) {\n\t\t\t\tthis.rescheduleFromAlarm(joined, this.lastAlarmsPerSignalTime[id])\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate createAlarm(joined: number, questionnaire: Questionnaire, schedule: Schedule, signalTime: SignalTime, actionTrigger: ActionTrigger, timestamp: number, indexNum: number = 1) {\n\t\tconst alarm = new Alarm(questionnaire, schedule, signalTime, actionTrigger, timestamp, indexNum)\n\t\tif(!questionnaire.isActive(joined, timestamp)) {\n\t\t\tif(questionnaire.willBeActiveIn(joined, timestamp) > 0) {\n\t\t\t\tthis.rescheduleFromAlarm(joined, alarm)\n\t\t\t\treturn\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdelete this.lastAlarmsPerSignalTime[signalTime.id]\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\t\tthis.alarms.push(alarm)\n\t\tconst lastAlarm = this.lastAlarmsPerSignalTime[signalTime.id]\n\t\tif(!lastAlarm || lastAlarm.timestamp < timestamp)\n\t\t\tthis.lastAlarmsPerSignalTime[signalTime.id] = alarm\n\t}\n\t\n\t\n\t\n\t\n\t\n\tprivate getRandom(): number {\n\t\treturn Math.random()\n\t}\n\t\n\tprivate rescheduleFromAlarm(joined: number, alarm: Alarm) {\n\t\tconst signalTime = alarm.signalTime\n\t\t\n\t\tif(!alarm.canBeRescheduled) {//when frequency > 1, then we want to reschedule only when all the other alarms are done as well\n\t\t\treturn\n\t\t}\n\t\t\n\t\t//Note: We use getLastSignalTimeAlarm() for iOS. On Android no other alarms should exist at this point (the original is deleted in Alarm.exec() )\n\t\tconst lastAlarm = alarm\n\t\t//we have to use lastAlarm.timestamp to make sure we do not skip a day if this function was executed late:\n\t\tthis.rescheduleFromSignalTime(joined, lastAlarm.questionnaire, lastAlarm.schedule, signalTime, lastAlarm.actionTrigger, lastAlarm.timestamp)\n\t}\n\t\n\tprivate rescheduleFromSignalTime(joined: number, questionnaire: Questionnaire, schedule: Schedule, signalTime: SignalTime, actionTrigger: ActionTrigger, timestampAnchor: number): void {\n\t\tif(signalTime.randomFixed.get()) {\n\t\t\t//this does the same as scheduleSignalTime() but it ignores frequency and reuses the time from the alarm.\n\t\t\t\n\t\t\tconst loopMs = ONE_DAY_MS * schedule.dailyRepeatRate.get()\n\t\t\t\n\t\t\tconst baseTimestamp = this.considerDayOptions(joined, timestampAnchor + loopMs, questionnaire, schedule)\n\t\t\tif(baseTimestamp == -1)\n\t\t\t\treturn\n\t\t\tthis.createAlarm(joined, questionnaire, schedule, signalTime, actionTrigger, baseTimestamp)\n\t\t}\n\t\telse\n\t\t\tthis.scheduleSignalTime(joined, questionnaire, schedule, signalTime, actionTrigger, timestampAnchor)\n\t}\n\t\n\tprivate calculateRandomPeriod(questionnaire: Questionnaire, signalTime: SignalTime): number {\n\t\tif(questionnaire.completableAtSpecificTime.get()) {\n\t\t\tif(questionnaire.completableAtSpecificTimeStart.get() != -1 && questionnaire.completableAtSpecificTimeEnd.get() != -1) {\n\t\t\t\tif(questionnaire.completableAtSpecificTimeStart.get() > questionnaire.completableAtSpecificTimeEnd.get()) { //start and end include midnight\n\t\t\t\t\tlet period = 0\n\t\t\t\t\tif(questionnaire.completableAtSpecificTimeStart.get() < signalTime.endTimeOfDay.get())\n\t\t\t\t\t\tperiod += signalTime.endTimeOfDay.get() - questionnaire.completableAtSpecificTimeStart.get()\n\t\t\t\t\tif(questionnaire.completableAtSpecificTimeEnd.get() > signalTime.startTimeOfDay.get())\n\t\t\t\t\t\tperiod += questionnaire.completableAtSpecificTimeEnd.get() - signalTime.startTimeOfDay.get()\n\t\t\t\t\treturn period\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet period = 0\n\t\t\t\t\tif(questionnaire.completableAtSpecificTimeEnd.get() < signalTime.endTimeOfDay.get())\n\t\t\t\t\t\tperiod += signalTime.endTimeOfDay.get() - questionnaire.completableAtSpecificTimeEnd.get()\n\t\t\t\t\tif(questionnaire.completableAtSpecificTimeStart.get() > signalTime.startTimeOfDay.get())\n\t\t\t\t\t\tperiod += questionnaire.completableAtSpecificTimeStart.get() - signalTime.startTimeOfDay.get()\n\t\t\t\t\treturn period\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(questionnaire.completableAtSpecificTimeStart.get() != -1)\n\t\t\t\treturn questionnaire.completableAtSpecificTimeStart.get() - signalTime.startTimeOfDay.get()\n\t\t\telse if(questionnaire.completableAtSpecificTimeEnd.get() != -1)\n\t\t\t\treturn signalTime.endTimeOfDay.get() - questionnaire.completableAtSpecificTimeEnd.get()\n\t\t\telse\n\t\t\t\treturn signalTime.endTimeOfDay.get() - signalTime.startTimeOfDay.get()\n\t\t}\n\t\telse\n\t\t\treturn signalTime.endTimeOfDay.get() - signalTime.startTimeOfDay.get()\n\t}\n\t\n\tpublic scheduleSignalTime(joined: number, questionnaire: Questionnaire, schedule: Schedule, signalTime: SignalTime, actionTrigger: ActionTrigger, anchorTimestamp: number, manualDelayDays: number = -1): void {\n\t\tconst frequency = signalTime.frequency.get()\n\t\tconst msBetween = signalTime.minutesBetween.get() * 60000\n\t\tconst period = (signalTime.random.get()) ? this.calculateRandomPeriod(questionnaire, signalTime) : 0\n\t\tconst block = period / frequency\n\t\tif(signalTime.random.get() && frequency > 1 && block < msBetween)\n\t\t\tthrow new Error(`${frequency} blocks with ${msBetween} ms do not fit into ${period} ms for ${questionnaire.title.get()}.`)\n\t\t\n\t\t//\n\t\t//correct timestamp:\n\t\t//\n\t\tconst midnight = getMidnightMillis(anchorTimestamp)\n\t\t\n\t\t//set beginning time:\n\t\tlet baseTimestamp = midnight + signalTime.startTimeOfDay.get()\n\t\tlet minDate: number\n\t\tif(manualDelayDays != -1) { //is only set when schedules are freshly created\n\t\t\tbaseTimestamp += ONE_DAY_MS * manualDelayDays\n\t\t\tminDate = anchorTimestamp + (ONE_DAY_MS * manualDelayDays).coerceAtLeast(MIN_SCHEDULE_DISTANCE)\n\t\t\t\n\t\t\t// Assuming that anchorTimestamp = 23:58, startTimeOfDay = 00:00 and dailyRepeatRate = 5 (anything greater than 1).\n\t\t\t// When we used getMidnightMillis(), we calculated backwards a whole day, so baseTimestamp is one day short.\n\t\t\t// That means, when we just added ONE_DAY_MS * dailyRepeatRate, we effectively only added 4 days instead of 5.\n\t\t\t// This would not be true if startTimeOfDay = 23:59, so we cant just blindly add a day.\n\t\t\t// This loop fixes it:\n\t\t\twhile(baseTimestamp < minDate) {\n\t\t\t\tbaseTimestamp += ONE_DAY_MS\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbaseTimestamp += ONE_DAY_MS * schedule.dailyRepeatRate.get()\n\t\t\n\t\t\n\t\t//options:\n\t\tbaseTimestamp = this.considerDayOptions(joined, baseTimestamp, questionnaire, schedule)\n\t\tif(baseTimestamp == -1) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t//\n\t\t//Create alarms for each frequency:\n\t\t//\n\t\tlet nextBlock = block //this variable is needed when we need to shorten a loop-block when a random notification was set less than minutes_between to the next block\n\t\tfor(let i=1; i<= frequency; ++i) { //currently, frequency is always 1 when random == false.\n\t\t\tlet workTimestamp: number\n\t\t\tif(signalTime.random) {\n\t\t\t\tconst randomBlock = (nextBlock * this.getRandom())\n\t\t\t\t\n\t\t\t\tworkTimestamp = this.considerHourOptions(baseTimestamp + randomBlock, questionnaire) //set the actual timing of the notification\n\t\t\t\tbaseTimestamp = this.considerHourOptions(baseTimestamp + nextBlock, questionnaire) //prepare timestamp for the next loop\n\t\t\t\t\n\t\t\t\tif(baseTimestamp - workTimestamp < msBetween) { //if random is very late in this block, make sure that the next time gets shortened to account for minutesBetween\n\t\t\t\t\tconst shorten = msBetween - (baseTimestamp - workTimestamp)\n\t\t\t\t\tbaseTimestamp += shorten //start the next block later\n\t\t\t\t\tnextBlock = block - shorten //make sure that the next block ends at the same time (so we shorten it in the end, to account for the later start)\n\t\t\t\t}\n\t\t\t\telse nextBlock = block\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbaseTimestamp += block //this has no effect. I will leave it in, in case we ever want to use frequency on non-random schedules\n\t\t\t\tworkTimestamp = baseTimestamp\n\t\t\t}\n\t\t\t\n\t\t\tthis.createAlarm(joined, questionnaire, schedule, signalTime, actionTrigger, workTimestamp, i)\n\t\t}\n\t}\n\t\n\tprivate considerHourOptions(timestamp: number, questionnaire: Questionnaire): number {\n\t\tconst midnight = getMidnightMillis(timestamp)\n\t\tconst fromMidnight = timestamp - midnight\n\t\tif(!questionnaire.completableAtSpecificTime.get())\n\t\t\treturn timestamp\n\t\telse if(questionnaire.completableAtSpecificTimeStart.get() != -1 && questionnaire.completableAtSpecificTimeEnd.get() != -1) {\n\t\t\tif(questionnaire.completableAtSpecificTimeStart.get() > questionnaire.completableAtSpecificTimeEnd.get()) { //start and end include midnight\n\t\t\t\tif(fromMidnight < questionnaire.completableAtSpecificTimeStart.get())\n\t\t\t\t\treturn midnight + questionnaire.completableAtSpecificTimeStart.get()\n\t\t\t\telse if(fromMidnight > questionnaire.completableAtSpecificTimeEnd.get()) //this should never happen\n\t\t\t\t\treturn fromMidnight + questionnaire.completableAtSpecificTimeEnd.get()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(fromMidnight > questionnaire.completableAtSpecificTimeStart.get() && fromMidnight < questionnaire.completableAtSpecificTimeEnd.get())\n\t\t\t\t\treturn midnight + questionnaire.completableAtSpecificTimeEnd.get()\n\t\t\t}\n\t\t}\n\t\telse if(questionnaire.completableAtSpecificTimeStart.get() != -1) {\n\t\t\tif(fromMidnight < questionnaire.completableAtSpecificTimeStart.get())\n\t\t\t\treturn midnight + questionnaire.completableAtSpecificTimeStart.get()\n\t\t}\n\t\telse if(questionnaire.completableAtSpecificTimeEnd.get() != -1) {\n\t\t\tif(fromMidnight > questionnaire.completableAtSpecificTimeEnd.get()) //this should never happen\n\t\t\t\treturn midnight + questionnaire.completableAtSpecificTimeEnd.get()\n\t\t}\n\t\t\n\t\treturn timestamp\n\t}\n\t\n\t\n\tprivate considerDayOptions(joined: number, timestamp: number, questionnaire: Questionnaire, schedule: Schedule): number {\n\t\tconst activeInDays = Math.ceil(questionnaire.willBeActiveIn(joined, timestamp) / ONE_DAY_MS)\n\t\tconst newTimestamp = this.considerDayOptionsLogic(timestamp + activeInDays * ONE_DAY_MS, schedule)\n\t\t\n\t\treturn (questionnaire.isActive(joined, newTimestamp)) ? newTimestamp : -1\n\t}\n\t\n\tprivate considerDayOptionsLogic(timestamp: number, schedule: Schedule): number {\n\t\tlet cal = new Date(timestamp)\n\t\tif(schedule.dayOfMonth.get() != 0) {\n\t\t\tif(cal.getDate() <= schedule.dayOfMonth.get())\n\t\t\t\tcal = new Date(\n\t\t\t\t\tcal.getFullYear(),\n\t\t\t\t\tcal.getMonth(),\n\t\t\t\t\tschedule.dayOfMonth.get(),\n\t\t\t\t\tcal.getHours(),\n\t\t\t\t\tcal.getMinutes(),\n\t\t\t\t\tcal.getSeconds(),\n\t\t\t\t)\n\t\t\telse {\n\t\t\t\tif(cal.getMonth() < 11)\n\t\t\t\t\tcal = new Date(\n\t\t\t\t\t\tcal.getFullYear(),\n\t\t\t\t\t\tcal.getMonth() + 1,\n\t\t\t\t\t\tschedule.dayOfMonth.get(),\n\t\t\t\t\t\tcal.getHours(),\n\t\t\t\t\t\tcal.getMinutes(),\n\t\t\t\t\t\tcal.getSeconds(),\n\t\t\t\t\t)\n\t\t\t\telse\n\t\t\t\t\tcal = new Date(\n\t\t\t\t\t\tcal.getFullYear() + 1,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tschedule.dayOfMonth.get(),\n\t\t\t\t\t\tcal.getHours(),\n\t\t\t\t\t\tcal.getMinutes(),\n\t\t\t\t\t\tcal.getSeconds(),\n\t\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\t\n\t\t//consider weekdays:\n\t\tif(schedule.weekdays.get() != 0) {\n\t\t\tlet i = 365\n\t\t\twhile((schedule.weekdays.get() | WEEKDAY_CODES[cal.getDay()]) != schedule.weekdays.get()) {\n\t\t\t\tcal = new Date(cal.getTime() + ONE_DAY_MS)\n\t\t\t\tif(--i==0) {\n\t\t\t\t\tthrow new Error(`Could not find appropriate weekday (weekdaycode=${schedule.weekdays.get()}!`)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cal.getTime()\n\t}\n}","import {SectionContent} from \"../site/SectionContent\";\nimport m, {Component, Vnode, VnodeDOM} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {Section} from \"../site/Section\";\nimport {Study} from \"../data/study/Study\";\nimport {Calendar, EventInput} from \"@fullcalendar/core\";\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listPlugin from '@fullcalendar/list';\nimport deLocale from '@fullcalendar/core/locales/de';\nimport ukLocale from '@fullcalendar/core/locales/uk';\nimport calendarSvg from \"../../imgs/icons/calendar.svg?raw\"\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement} from \"../widgets/DashElement\";\nimport {BindObservable, DateTransformer, TimeTransformer} from \"../widgets/BindObservable\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {BaseObservable, ObserverId} from \"../observable/BaseObservable\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {getChartColor} from \"../helpers/ChartJsBox\";\nimport {Scheduler} from \"../helpers/Scheduler\";\nimport {LoadingSpinner} from \"../widgets/LoadingSpinner\";\nimport {getMidnightMillis} from \"../constants/methods\";\nimport {ActionTrigger} from \"../data/study/ActionTrigger\";\nimport {BtnReload} from \"../widgets/BtnWidgets\";\nimport {TitleRow} from \"../widgets/TitleRow\";\n\ninterface FullcalendarComponentOptions {\n\tstudy: Study\n\tjoinTimestamp: ObservablePrimitive<number>\n\tonError: (msg: string) => void\n}\n\nconst ONE_DAY = 1000 * 60 * 60 * 24\nconst INFINITE_QUESTIONNAIRE_DURATION = ONE_DAY * 365\nclass FullcalendarComponent implements Component<FullcalendarComponentOptions, any> {\n\tprivate calendarView?: HTMLElement\n\tprivate scheduler = new Scheduler()\n\tprivate calendar?: Calendar\n\tprivate joinDate: BaseObservable<number> = new ObservablePrimitive(0, null, \"joinDate\")\n\tprivate joinTime: BaseObservable<number> = new ObservablePrimitive(0, null, \"joinTime\")\n\tprivate studyObserverId?: ObserverId\n\tprivate visibleCalendars: Record<number, Questionnaire> = {}\n\tprivate colors: Record<number, string> = {}\n\tprivate isLoading: boolean = false\n\tprivate onError: (msg: string) => void = (msg) => console.error(msg)\n\t\n\tprivate getJoinTimestamp(): number {\n\t\treturn getMidnightMillis(this.joinDate.get()) + this.joinTime.get()\n\t}\n\t\n\tprivate calcQuestionnaireStart(questionnaire: Questionnaire): number {\n\t\tconst joinDate = this.getJoinTimestamp()\n\t\t\n\t\tif(questionnaire.durationStart.get() != 0)\n\t\t\treturn questionnaire.durationStart.get()\n\t\telse if(questionnaire.durationStartingAfterDays.get() != 0)\n\t\t\treturn joinDate + ONE_DAY * questionnaire.durationStartingAfterDays.get()\n\t\telse\n\t\t\treturn joinDate\n\t}\n\tprivate calcQuestionnaireEnd(questionnaire: Questionnaire): number | null {\n\t\tconst joinTimestamp = this.getJoinTimestamp()\n\t\tif(questionnaire.durationEnd.get() != 0)\n\t\t\treturn questionnaire.durationEnd.get()\n\t\telse if(questionnaire.durationPeriodDays.get() != 0)\n\t\t\treturn joinTimestamp + ONE_DAY * (questionnaire.durationPeriodDays.get())\n\t\telse\n\t\t\treturn null\n\t}\n\t\n\tprivate getQuestionnaireEvent(questionnaire: Questionnaire): EventInput {\n\t\treturn {\n\t\t\ttitle: questionnaire.getTitle(),\n\t\t\tstart: this.calcQuestionnaireStart(questionnaire),\n\t\t\tend: this.calcQuestionnaireEnd(questionnaire) ?? this.getJoinTimestamp() + INFINITE_QUESTIONNAIRE_DURATION,\n\t\t\tcolor: this.colors[questionnaire.internalId.get()],\n\t\t\tallDay: true,\n\t\t}\n\t}\n\t\n\tprivate getActionName(actionTrigger: ActionTrigger): string {\n\t\tswitch(actionTrigger.actions.get()[0].type.get()) {\n\t\t\tcase 1:\n\t\t\t\treturn \"[invitation]\"\n\t\t\tcase 2:\n\t\t\t\treturn \"[message]\"\n\t\t\tcase 3:\n\t\t\t\treturn \"[notification]\"\n\t\t\tdefault:\n\t\t\t\treturn \"[unknown]\"\n\t\t}\n\t}\n\t\n\tprivate addEventsFromScheduler(events: EventInput[]) {\n\t\tfor(let alarm of this.scheduler.alarms) {\n\t\t\tevents.push({\n\t\t\t\ttitle: this.getActionName(alarm.actionTrigger),\n\t\t\t\ticon: m.trust(calendarSvg),\n\t\t\t\tstart: alarm.timestamp,\n\t\t\t\tcolor: this.colors[alarm.questionnaire.internalId.get()],\n\t\t\t})\n\t\t}\n\t}\n\t\n\tprivate collectScheduleEvents(questionnaire: Questionnaire) {\n\t\tconst joined = this.getJoinTimestamp()\n\t\tlet start = this.getJoinTimestamp()\n\t\tfor(const actionTrigger of questionnaire.actionTriggers.get()) {\n\t\t\tif(actionTrigger.schedules.get().length == 0)\n\t\t\t\tcontinue\n\t\t\tconst schedule = actionTrigger.schedules.get()[0]\n\t\t\tconst initialDelay = schedule.getInitialDelayDays()\n\t\t\tfor(let signalTime of schedule.signalTimes.get()) {\n\t\t\t\tthis.scheduler.scheduleSignalTime(joined, questionnaire, schedule, signalTime, actionTrigger, start, initialDelay)\n\t\t\t}\n\t\t}\n\t\t\n\t\tthis.scheduler.scheduleAheadJavascript(joined)\n\t}\n\t\n\tprivate initCalendar() {\n\t\tif(!this.calendarView)\n\t\t\treturn\n\t\tthis.isLoading = true\n\t\tm.redraw()\n\t\tthis.scheduler = new Scheduler()\n\t\tconst events: EventInput[] = []\n\t\t\n\t\ttry {\n\t\t\tfor(const qId in this.visibleCalendars) {\n\t\t\t\tconst questionnaire = this.visibleCalendars[qId]\n\t\t\t\tevents.push(this.getQuestionnaireEvent(questionnaire))\n\t\t\t\tthis.collectScheduleEvents(questionnaire)\n\t\t\t}\n\t\t}\n\t\tcatch(e: any) {\n\t\t\tthis.onError(e.message || e)\n\t\t\tthis.isLoading = false\n\t\t\treturn\n\t\t}\n\t\tthis.addEventsFromScheduler(events)\n\t\t\n\t\tthis.calendar = new Calendar(this.calendarView, {\n\t\t\tplugins: [ dayGridPlugin, timeGridPlugin, listPlugin ],\n\t\t\tlocales: [deLocale, ukLocale],\n\t\t\tlocale: Lang.code,\n\t\t\tinitialView: this.calendar?.view.type ?? \"dayGridMonth\",\n\t\t\theaderToolbar: {\n\t\t\t\tleft: \"title\",\n\t\t\t\tright: \"prev,next,dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\n\t\t\t},\n\t\t\tcontentHeight: \"auto\",\n\t\t\tinitialDate: this.calendar?.getDate() ?? this.getJoinTimestamp(),\n\t\t\tallDayText: \"\",\n\t\t\teditable: false,\n\t\t\tdayMaxEvents: false,\n\t\t\t\n\t\t\tevents: events,\n\t\t\teventTimeFormat: {\n\t\t\t\thour: \"2-digit\",\n\t\t\t\tminute: \"2-digit\",\n\t\t\t\thour12: false\n\t\t\t}\n\t\t})\n\t\t\n\t\t\n\t\tthis.calendar.render()\n\t\t\n\t\tthis.isLoading = false\n\t\tm.redraw()\n\t}\n\t\n\tprivate toggleQuestionnaire(questionnaire: Questionnaire, e: EventInput) {\n\t\tconst target = e.target as HTMLInputElement\n\t\t\n\t\tif(target.checked) {\n\t\t\tthis.visibleCalendars[questionnaire.internalId.get()] = questionnaire\n\t\t}\n\t\telse\n\t\t\tdelete this.visibleCalendars[questionnaire.internalId.get()]\n\t\t\n\t\tthis.initCalendar()\n\t}\n\t\n\tpublic oncreate(vNode: VnodeDOM<FullcalendarComponentOptions, any>): void {\n\t\tthis.onError = vNode.attrs.onError\n\t\tconst study = vNode.attrs.study\n\t\tconst joinTimestamp = vNode.attrs.joinTimestamp\n\t\tthis.joinDate.set(joinTimestamp.get())\n\t\tthis.joinTime.set(joinTimestamp.get() - getMidnightMillis(joinTimestamp.get()))\n\t\t\n\t\tstudy.questionnaires.get().forEach((questionnaire, index) => {\n\t\t\tif(questionnaire.hasSchedules())\n\t\t\t\tthis.visibleCalendars[questionnaire.internalId.get()] = questionnaire\n\t\t\tthis.colors[questionnaire.internalId.get()] = getChartColor(index)\n\t\t})\n\t\t\n\t\tthis.joinDate.addObserver(() => {\n\t\t\tjoinTimestamp.set(this.getJoinTimestamp())\n\t\t\tthis.initCalendar()\n\t\t})\n\t\tthis.joinTime.addObserver(() => {\n\t\t\tjoinTimestamp.set(this.getJoinTimestamp())\n\t\t\tthis.initCalendar()\n\t\t})\n\t\tthis.studyObserverId = study.addObserver(() => {\n\t\t\tthis.initCalendar()\n\t\t})\n\t\tthis.calendarView = vNode.dom.getElementsByClassName(\"calendarView\")[0] as HTMLElement\n\t\tthis.initCalendar()\n\t}\n\tpublic onupdate(vNode: VnodeDOM<FullcalendarComponentOptions, any>): void {\n\t\tthis.onError = vNode.attrs.onError\n\t\tthis.calendarView = vNode.dom.getElementsByClassName(\"calendarView\")[0] as HTMLElement\n\t\tthis.calendar?.updateSize()\n\t}\n\t\n\tpublic view(vNode: Vnode<FullcalendarComponentOptions, any>): Vnode<any, any> {\n\t\tconst study = vNode.attrs.study\n\t\t\n\t\treturn <div>\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent: <div>\n\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t<label class=\"noDesc middle\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"join_date\")}</small>\n\t\t\t\t\t\t\t\t<input type=\"date\" {... BindObservable(this.joinDate, DateTransformer)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label class=\"noDesc middle\">\n\t\t\t\t\t\t\t\t<small>{Lang.get(\"join_time\")}</small>\n\t\t\t\t\t\t\t\t<input type=\"time\" {... BindObservable(this.joinTime, TimeTransformer)}/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<div class=\"horizontal middle\">\n\t\t\t\t\t\t\t\t{ BtnReload(() => {\n\t\t\t\t\t\t\t\t\tthis.initCalendar()\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div class=\"smallText spacingLeft spacingRight\">{Lang.get(\"calendar_description\")}</div>\n\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\t...study.questionnaires.get().map((questionnaire) => {\n\t\t\t\t\tconst endTimeStamp = this.calcQuestionnaireEnd(questionnaire)\n\t\t\t\t\treturn DashElement(null, {\n\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label class=\"noTitle noDesc line\">\n\t\t\t\t\t\t\t\t\t<input checked={this.visibleCalendars.hasOwnProperty(questionnaire.internalId.get())} type=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t   onchange={this.toggleQuestionnaire.bind(this, questionnaire)}/>\n\t\t\t\t\t\t\t\t\t<span style={`color: ${this.colors[questionnaire.internalId.get()]}`}>{questionnaire.getTitle()}</span>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<table class=\"spacingLeft smallText\">\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td><b>{Lang.getWithColon(\"from\")}</b></td>\n\t\t\t\t\t\t\t\t\t\t<td>{new Date(this.calcQuestionnaireStart(questionnaire)).toLocaleString()}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td><b>{Lang.getWithColon(\"to\")}</b></td>\n\t\t\t\t\t\t\t\t\t\t<td>{endTimeStamp ? new Date(endTimeStamp).toLocaleString() : \"∞\"}</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t)}\n\t\t\t{TitleRow(Lang.getWithColon(\"calendar\"))}\n\t\t\t<div>\n\t\t\t\t<div class=\"center\">{LoadingSpinner(!this.isLoading)}</div>\n\t\t\t\t<div class=\"calendarView\"></div>\n\t\t\t</div>\n\t\t</div>\n\t}\n\t\n\tpublic onremove(): void {\n\t\tthis.studyObserverId?.removeObserver()\n\t}\n}\n\nexport class Content extends SectionContent {\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\tpublic title(): string {\n\t\treturn Lang.get(\"study_description\")\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\t\n\t\tif(!study.questionnaires.get().length)\n\t\t\treturn <div class=\"center spacingTop\">{Lang.get(\"info_no_questionnaires_created\")}</div>\n\t\telse\n\t\t\treturn m(FullcalendarComponent, {\n\t\t\t\tstudy: study,\n\t\t\t\tjoinTimestamp: this.getDynamic(\"joinTimestamp\", Date.now()),\n\t\t\t\tonError: (msg) => this.section.loader.error(msg)\n\t\t\t})\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["ONE_DAY_MS","WEEKDAY_CODES","questionnaire","schedule","signalTime","actionTrigger","timestamp","indexNum","this","canBeRescheduled","random","get","frequency","alarms","lastAlarmsPerSignalTime","scheduleAheadJavascript","joined","i","id","rescheduleFromAlarm","createAlarm","alarm","Alarm","isActive","willBeActiveIn","push","lastAlarm","getRandom","Math","rescheduleFromSignalTime","timestampAnchor","randomFixed","loopMs","dailyRepeatRate","baseTimestamp","considerDayOptions","scheduleSignalTime","calculateRandomPeriod","completableAtSpecificTime","completableAtSpecificTimeStart","completableAtSpecificTimeEnd","period","endTimeOfDay","startTimeOfDay","anchorTimestamp","manualDelayDays","msBetween","minutesBetween","block","Error","title","minDate","coerceAtLeast","nextBlock","workTimestamp","randomBlock","considerHourOptions","shorten","midnight","fromMidnight","activeInDays","ceil","newTimestamp","considerDayOptionsLogic","cal","Date","dayOfMonth","getDate","getFullYear","getMonth","getHours","getMinutes","getSeconds","weekdays","getDay","getTime","ONE_DAY","scheduler","Scheduler","joinDate","ObservablePrimitive","joinTime","visibleCalendars","colors","isLoading","onError","msg","console","error","getJoinTimestamp","calcQuestionnaireStart","durationStart","durationStartingAfterDays","calcQuestionnaireEnd","joinTimestamp","durationEnd","durationPeriodDays","getQuestionnaireEvent","getTitle","start","end","color","internalId","allDay","getActionName","actions","type","addEventsFromScheduler","events","icon","collectScheduleEvents","actionTriggers","schedules","length","initialDelay","getInitialDelayDays","signalTimes","initCalendar","calendarView","qId","e","message","calendar","plugins","list","locales","de","uk","locale","Lang","code","initialView","view","headerToolbar","left","right","contentHeight","initialDate","allDayText","editable","dayMaxEvents","eventTimeFormat","hour","minute","hour12","render","toggleQuestionnaire","target","checked","oncreate","vNode","attrs","study","set","questionnaires","forEach","index","hasSchedules","addObserver","studyObserverId","dom","getElementsByClassName","onupdate","updateSize","DashRow","DashElement","content","class","BindObservable","map","endTimeStamp","hasOwnProperty","onchange","bind","style","getWithColon","toLocaleString","TitleRow","LoadingSpinner","onremove","removeObserver","preLoad","section","getStudyPromise","getView","getStudyOrThrow","FullcalendarComponent","getDynamic","now","loader","SectionContent","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","studies","studyLoader","getStudies","getCount","getFirst","getEntry","getQuestionnaireOrNull","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","name","studyId","isLoggedIn","getUrl","depth","getHash","goTo","window","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","value","toObs","OptimusPrimeNumberTransformer","parseInt","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","toISOString","split","TimeTransformer","parts","date","setHours","setMinutes","transformer","attr","event","attrValue","element","BtnCustom","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","classString","floatingRight","floating","small","highlight","disabled","template","noCompatibilityIcon","innerLinkTitle","innerLinkHref","href","DashTemplateView","startsWith","showAsClickable","getNewClassString","size","oldClassString","option","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","NotCompatibleIcon","translationRecord","devices","device","join","onpointerenter","onpointerleave"],"sourceRoot":""}