{"version":3,"file":"3289.e2b0d6f9902b57145c77.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/publish.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BindObservable.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashElement.tsx","webpack://ESMira/./src/frontend/ts/widgets/DashRow.tsx","webpack://ESMira/./src/frontend/ts/widgets/DragContainer.tsx","webpack://ESMira/./src/frontend/ts/widgets/NotCompatibleIcon.tsx","webpack://ESMira/./src/frontend/ts/widgets/TabBar.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport {BindObservable} from \"../widgets/BindObservable\";\nimport {Study} from \"../data/study/Study\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {TabBar, TabContent} from \"../widgets/TabBar\";\nimport {createAppUrl, createQuestionnaireUrl, createStudyUrl} from \"../constants/methods\";\nimport qrcode from \"qrcode-generator\"\nimport {Section} from \"../site/Section\";\nimport {BtnAdd, BtnCopy, BtnTrash} from \"../widgets/BtnWidgets\";\nimport {DashRow} from \"../widgets/DashRow\";\nimport {DashElement, DashViewOptions} from \"../widgets/DashElement\";\nimport {closeDropdown, openDropdown} from \"../widgets/DropdownMenu\";\nimport downloadSvg from \"../../imgs/icons/download.svg?raw\"\nimport studyDesc from \"../../imgs/dashIcons/studyDesc.svg?raw\"\nimport {safeConfirm} from \"../constants/methods\";\n\nexport class Content extends SectionContent {\n\tprivate readonly selectedIndex: ObservablePrimitive<number> = new ObservablePrimitive<number>(0, null, \"accessKeyIndex\")\n\tprivate qrSize: number = 5\n\tprivate currentUrl: number = 0\n\tprivate allUrls: string[] = []\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [section.getStudyPromise()]\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"publish_study\")\n\t}\n\tprivate checkAccessKeyFormat(s: string): boolean {\n\t\treturn !!s.match(/^([a-zA-Z][a-zA-Z0-9]+)$/);\n\t}\n\tprivate addAccessKey(study: Study): void {\n\t\tconst accessKey = prompt()\n\t\tif(accessKey == null)\n\t\t\treturn\n\t\t\n\t\tif(this.checkAccessKeyFormat(accessKey)) {\n\t\t\tif(study.accessKeys.indexOf(accessKey) == -1)\n\t\t\t\tstudy.accessKeys.push(accessKey)\n\t\t}\n\t\telse\n\t\t\tLang.get(\"error_accessKey_wrong_format\")\n\t}\n\tprivate async removeAccessKey(study: Study, index: number): Promise<void> {\n\t\tconst accessKey = study.accessKeys.get()[index].get()\n\t\tif(study.published.get() && !safeConfirm(Lang.get(\"confirm_delete_access_key\", accessKey)))\n\t\t\treturn\n\t\tstudy.accessKeys.remove(index)\n\t}\n\t\n\tprivate changeQrSize(e: InputEvent): void {\n\t\tthis.qrSize = parseInt((e.target as HTMLInputElement).value)\n\t}\n\tprivate changeQrUrl(urlIndex: number): void {\n\t\tthis.currentUrl = urlIndex\n\t}\n\t\n\tprivate onPointerEnterUrl(url: string, e: MouseEvent) {\n\t\topenDropdown(\"url\", e.target as HTMLElement,\n\t\t\t() => <div class=\"smallText center nowrap\">{url}</div>\n\t\t)\n\t}\n\tprivate onPointerLeaveUrl() {\n\t\tcloseDropdown(\"url\")\n\t}\n\t\n\tprivate getUrlViewAndCacheUrl(title: string, url: string): Vnode<any, any> {\n\t\tconst index = this.allUrls.length\n\t\tthis.allUrls.push(url)\n\t\treturn <div\n\t\t\tonpointerenter={this.onPointerEnterUrl.bind(null, url)}\n\t\t\tonpointerleave={this.onPointerLeaveUrl.bind(null)}\n\t\t>\n\t\t\t<label class=\"noTitle noDesc \">\n\t\t\t\t<input type=\"radio\" name=\"selected_url\" checked={this.currentUrl == index} onchange={this.changeQrUrl.bind(this, index)}/>\n\t\t\t\t{title}\n\t\t\t</label>\n\t\t\t\t&nbsp;\n\t\t\t\t<span class=\"middle\">\n\t\t\t\t\t{BtnCopy(() => navigator.clipboard.writeText(url))}\n\t\t\t\t</span>\n\t\t</div>\n\t}\n\t\n\t\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\treturn <div>\n\t\t\t<div class=\"center\">\n\t\t\t\t<label>\n\t\t\t\t\t<input type=\"checkbox\" {... BindObservable(study.published)}/>\n\t\t\t\t\t<span class=\"highlight\">{study.published.get() ? Lang.get(\"published\") :  Lang.get(\"published_not\")}</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t\t{(study.published.get() || study.accessKeys.get().length != 0) &&\n\t\t\t\t<div>\n\t\t\t\t\t{DashRow(\n\t\t\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t<div class=\"listParent scrollBox\">\n\t\t\t\t\t\t\t\t\t<div class=\"listChild\">\n\t\t\t\t\t\t\t\t\t\t{study.accessKeys.get().length == 0\n\t\t\t\t\t\t\t\t\t\t\t? <div class=\"spacingTop spacingBottom highlight center\">{Lang.get(\"info_study_is_public\")}</div>\n\t\t\t\t\t\t\t\t\t\t\t: study.accessKeys.get().map((accessKey, index) =>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{BtnTrash(this.removeAccessKey.bind(this, study, index))}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"accessKey\")}</small>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" {...BindObservable(accessKey)}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t{BtnAdd(this.addAccessKey.bind(this, study), Lang.get(\"add_access_key\"))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t)}\n\t\t\t\t\t<br/>\n\t\t\t\t\t{study.published.get() &&\n\t\t\t\t\t\t<div>{\n\t\t\t\t\t\t\tstudy.accessKeys.get().length >= 2\n\t\t\t\t\t\t\t\t? TabBar(this.selectedIndex,\n\t\t\t\t\t\t\t\t\tstudy.accessKeys.get().map((accessKey) => this.getPublishView(study, accessKey.get()))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: this.getPublishView(study, study.accessKeys.get()[0]?.get() ?? \"\").view()\n\t\t\t\t\t\t}</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{DashRow(\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>{Lang.getWithColon(\"plead_to_cite_us\")}</h2>\n\t\t\t\t\t\t\t<div class=\"spacingLeft\">\n\t\t\t\t\t\t\t\t<p class=\"hanging\">\n\t\t\t\t\t\t\t\t\tLewetz, D., Stieger, S. (2023). ESMira: A decentralized open-source application for collecting experience sampling data. <i>Behavior Research Methods</i>.\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t<a class=\"showArrow\" href=\"https://doi.org/10.3758/s13428-023-02194-2\" target=\"_blank\">https://doi.org/10.3758/s13428-023-02194-2</a>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<div class=\"spacingTop\">{Lang.getWithColon(\"more_information\")}</div>\n\t\t\t\t\t\t\t<div class=\"spacingLeft\"><a class=\"showArrow\" href=\"https://github.com/KL-Psychological-Methodology/ESMira/wiki/Conditions-for-using-ESMira\" target=\"_blank\">Conditions for using ESMira</a></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\t\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\ttemplate: {\n\t\t\t\t\t\ticon: m.trust(studyDesc),\n\t\t\t\t\t\ttitle: Lang.get(\"hint_to_best_practices\")\n\t\t\t\t\t},\n\t\t\t\t\thref: \"https://github.com/KL-Psychological-Methodology/ESMira/wiki/Best-practices-and-problems\"\n\t\t\t\t}),\n\t\t\t\t\n\t\t\t\tDashElement(\"stretched\", {\n\t\t\t\t\ttemplate: {\n\t\t\t\t\t\ticon: m.trust(downloadSvg),\n\t\t\t\t\t\ttitle: Lang.get(\"download_source_for_publication\")\n\t\t\t\t\t},\n\t\t\t\t\thref: window.URL.createObjectURL(new Blob([JSON.stringify(study.createJson())], {type: 'text/json'}))\n\t\t\t\t})\n\t\t\t)}\n\t\t</div>\n\t}\n\t\n\t\n\tprivate getPublishView(study: Study, accessKey: string): TabContent {\n\t\t//We create urlList first so all urls are cached for the qr code to use:\n\t\tconst urlList = this.getUrlListAndCacheUrls(study, accessKey)\n\t\t\n\t\tconst qrCodeUrl = this.allUrls[this.currentUrl]\n\t\tconst qr = qrcode(0, 'L')\n\t\tqr.addData(qrCodeUrl)\n\t\tqr.make()\n\t\tconst imgUrl = qr.createDataURL(this.qrSize)\n\t\t\n\t\treturn {\n\t\t\ttitle: accessKey,\n\t\t\tview: () => DashRow(\n\t\t\t\tDashElement(null, {\n\t\t\t\t\tcontent:\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t<small>{Lang.get(\"size\")}</small>\n\t\t\t\t\t\t\t\t\t<input type=\"number\" value={this.qrSize} onchange={this.changeQrSize.bind(this)}/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"center\">\n\t\t\t\t\t\t\t\t<a download href={imgUrl} title={qrCodeUrl}>\n\t\t\t\t\t\t\t\t\t<img alt=\"QrCode\" src={imgUrl}/>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p class=\"vertical smallText\">{Lang.get(\"desc_qrCode\")}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t}),\n\t\t\t\tDashElement(\"vertical\", ... urlList)\n\t\t\t)\n\t\t}\n\t}\n\t\n\tprivate getUrlListAndCacheUrls(study: Study, accessKey: string): (DashViewOptions | false)[] {\n\t\tthis.allUrls = []\n\t\tconst infoTitle = study.questionnaires.get().length >= 1 ? Lang.get(\"questionnaire_view\") : Lang.get(\"study\")\n\t\tconst appInstrTitle = Lang.get(\"app_installation_instructions\")\n\t\t\n\t\treturn [\n\t\t\t{\n\t\t\t\tcontent: <div>\n\t\t\t\t\t<div class=\"line\">\n\t\t\t\t\t\t{this.getUrlViewAndCacheUrl(infoTitle, createStudyUrl(accessKey, study.id.get()))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"line\">\n\t\t\t\t\t\t{this.getUrlViewAndCacheUrl(appInstrTitle, createAppUrl(accessKey, study.id.get()))}\n\t\t\t\t\t</div>\n\t\t\t\t\t{accessKey.length > 0 &&\n\t\t\t\t\t\t<div class=\"smallText\">{Lang.get(\"info_urls_without_study_id\")}</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t},\n\t\t\taccessKey.length > 0 && {\n\t\t\t\tcontent: <div>\n\t\t\t\t\t<div class=\"line\">\n\t\t\t\t\t\t{this.getUrlViewAndCacheUrl(infoTitle, createStudyUrl(accessKey, study.id.get(), true))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"line\">\n\t\t\t\t\t\t{this.getUrlViewAndCacheUrl(appInstrTitle, createAppUrl(accessKey, study.id.get(), true))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t},\n\t\t\tstudy.questionnaires.get().length > 0 &&{\n\t\t\t\tcontent: <div>\n\t\t\t\t\t<h2>{Lang.getWithColon(\"questionnaires\")}</h2>\n\t\t\t\t\t{study.questionnaires.get().map((questionnaire) =>\n\t\t\t\t\t\t<div class=\"line\">\n\t\t\t\t\t\t\t{this.getUrlViewAndCacheUrl(questionnaire.getTitle(), createQuestionnaireUrl(accessKey, questionnaire.internalId.get()))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t]\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m from \"mithril\"\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {getMidnightMillis, timeStampToTimeString} from \"../constants/methods\";\n\nexport interface Transformer {\n\ttoAttribute(value: PrimitiveType): PrimitiveType\n\ttoObs(value: string, obs: BaseObservable<PrimitiveType>): PrimitiveType\n}\nconst OptimusPrimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value\n\t}\n}\nconst OptimusPrimeNumberTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn parseInt(value) || 0\n\t}\n}\n\nexport class OnBeforeChangeTransformer<T extends PrimitiveType> implements Transformer {\n\tprivate readonly onBeforeChange: (before: T, after: T) => T\n\tconstructor(onBeforeChange: (before: T, after: T) => T) {\n\t\tthis.onBeforeChange = onBeforeChange\n\t}\n\tpublic toAttribute(value: T): T {\n\t\treturn value\n\t}\n\tpublic toObs(value: string, obs: BaseObservable<T>): T {\n\t\treturn this.onBeforeChange(obs.get(), value as T) || value as T\n\t}\n}\nexport const BooleanTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): PrimitiveType {\n\t\treturn value ? \"1\" : \"0\"\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\treturn value == \"1\"\n\t}\n}\nexport const DateTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == 0)\n\t\t\treturn \"\"\n\t\treturn (new Date(intValue)).toISOString().split(\"T\")[0]\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value === \"\")\n\t\t\treturn 0\n\t\telse\n\t\t\treturn (new Date(value)).getTime()\n\t}\n}\nexport const TimeTransformer: Transformer = {\n\ttoAttribute(value: PrimitiveType): string {\n\t\tconst intValue = typeof value == \"number\" ? value : (parseInt(value.toString()) || 0)\n\t\tif(intValue == -1)\n\t\t\treturn \"\"\n\t\telse {\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\treturn timeStampToTimeString(midnight + intValue)\n\t\t}\n\t},\n\ttoObs(value: string): PrimitiveType {\n\t\tif(value == \"\")\n\t\t\treturn -1\n\t\telse {\n\t\t\tconst parts = value.split(\":\")\n\t\t\tconst midnight = getMidnightMillis()\n\t\t\t\n\t\t\tconst date = new Date()\n\t\t\tdate.setHours(parseInt(parts[0]) || 0)\n\t\t\tdate.setMinutes(parseInt(parts[1]) || 0)\n\t\t\t\n\t\t\treturn date.getTime() - midnight\n\t\t}\n\t}\n}\n\nexport function BindObservable(obs: BaseObservable<PrimitiveType>, transformer?: Transformer, attr?: keyof HTMLInputElement, event: keyof HTMLInputElement = \"onchange\"): Record<string, any> {\n\tconst attrValue = obs.get()\n\tif(!transformer) {\n\t\tif(typeof attrValue == \"number\")\n\t\t\ttransformer = OptimusPrimeNumberTransformer\n\t\telse\n\t\t\ttransformer = OptimusPrimeTransformer\n\t}\n\tif(!attr) {\n\t\tif(typeof attrValue == \"boolean\")\n\t\t\tattr = \"checked\"\n\t\telse\n\t\t\tattr = \"value\"\n\t}\n\t\n\treturn {\n\t\t[attr]: transformer.toAttribute(attrValue),\n\t\t[event]: (e: InputEvent) => {\n\t\t\tconst element = e.target as HTMLInputElement\n\t\t\tobs.set(transformer!.toObs(element[attr!] as string, obs))\n\t\t}\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nimport {NotCompatibleIcon, PossibleDevices} from \"./NotCompatibleIcon\";\n\ntype DashTemplateOptions = {\n\ttitle: string\n\ticon?: Vnode<any, any>\n\tnoCompatibilityIcon?: PossibleDevices[]\n\tmsg?: string | Vnode<any, any>\n\tinnerLinkTitle?: string\n\tinnerLinkHref?: string\n}\n\ntype DashContainerOptions = \"stretched\" | \"cramped\" | \"vertical\" | \"horizontal\" | null\nexport type DashViewOptions = {\n\tdisabled?: boolean\n\tonclick?: (e: MouseEvent) => void\n\thref?: string\n\tshowAsClickable?: boolean\n\tfloating?: boolean\n\tfloatingRight?: boolean\n\thighlight?: boolean\n\tsmall?: boolean\n\ttemplate?: DashTemplateOptions\n\tcontent?: Vnode<any, any>\n}\n\nfunction DashTemplateView(options: DashTemplateOptions): Vnode<any, any> {\n\treturn (\n\t\t<div>\n\t\t\t{(options.icon || options.noCompatibilityIcon) &&\n\t\t\t\t<div class=\"dashIcon\">\n\t\t\t\t\t{options.icon}\n\t\t\t\t\t{options.noCompatibilityIcon && NotCompatibleIcon(... options.noCompatibilityIcon)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t\n\t\t\t<div class=\"dashTitle\">{options.title}</div>\n\t\t\t{options.msg && <p class=\"dashMsg\">{options.msg}</p>}\n\t\t\t{options.innerLinkTitle && options.innerLinkHref && <a class=\"link\" href={options.innerLinkHref}>{options.innerLinkTitle}</a>}\n\t\t</div>\n\t)\n}\n\nfunction DashElementView(options: DashViewOptions): Vnode<any, any> {\n\tlet classString = \"dashEl\"\n\tif(options.floatingRight)\n\t\tclassString += \" floating right\"\n\telse if(options.floating)\n\t\tclassString += \" floating\"\n\t\n\tif(options.small)\n\t\tclassString += \" small\"\n\tif(options.highlight)\n\t\tclassString += \" highlight\"\n\tif(options.disabled)\n\t\tclassString += \" disabled\"\n\t\n\tlet view: Vnode<any, any>\n\tif(options.content)\n\t\tview = options.content\n\telse if(options.template)\n\t\tview = DashTemplateView(options.template)\n\telse\n\t\tview = <div class=\"highlight\">Missing Dash Information</div>\n\t\n\tif(options.href) {\n\t\treturn <a target={options.href.startsWith(\"http\") ? \"_blank\" : \"\"} class={`${classString} dashLink`} href={options.href}>{view}</a>\n\t}\n\telse if(options.onclick)\n\t\treturn <a class={`${classString} dashLink`} onclick={options.onclick}>{view}</a>\n\telse if(options.showAsClickable)\n\t\treturn <a class={`${classString} dashLink`}>{view}</a>\n\telse {\n\t\tview.attrs[\"className\"] = `${classString} ${view.attrs.hasOwnProperty(\"className\") ? view.attrs[\"className\"] : \"\"}`\n\t\treturn view\n\t}\n}\n\nfunction getNewClassString(size: DashContainerOptions, oldClassString: string): string {\n\tif(size)\n\t\toldClassString += \" \" + size\n\treturn oldClassString\n}\n\nexport function DashElement(\n\tsize: DashContainerOptions,\n\t... options: (DashViewOptions | false)[]\n): Vnode<any, any> {\n\tif(options.length == 1) {\n\t\tif(!options[0])\n\t\t\treturn <div></div>\n\t\t\n\t\tconst view =  DashElementView(options[0])\n\t\tview.attrs[\"className\"] = getNewClassString(size, view.attrs[\"className\"])\n\t\treturn view\n\t}\n\telse {\n\t\tconst classString = getNewClassString(size, \"multipleChildren\")\n\t\treturn <div class={classString}>\n\t\t\t{options.map((option) => option && DashElementView(option))}\n\t\t</div>\n\t}\n}","import m, {Vnode} from \"mithril\"\nexport function DashRow(... content: Array<Vnode<any, any> | undefined | false>): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"dashRow\">{content}</div>\n\t)\n}","import m, {Component, Vnode, VnodeDOM} from \"mithril\"\nimport addSvg from \"../../imgs/icons/dragHandle.svg?raw\"\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface DragTools {\n\tgetDragTarget(index: number, targetList: ArrayType, content?: Vnode<any, any>): Vnode<any, any>\n\tgetDragStarter(index: number, dragTarget: ArrayType): Vnode<any, any>\n}\n\ntype ArrayType = ArrayInterface<any, BaseObservable<any>>\n\ninterface DragContainerImpOptions {\n\tcontent: (container: DragTools) => Vnode<any, any>\n}\nclass DragContainerImp implements DragTools, Component<DragContainerImpOptions, any> {\n\tprivate contentVNode?: VnodeDOM<any, any>\n\tprivate currentStartList?: ArrayType\n\tprivate currentTargetList?: ArrayType\n\tprivate currentStartIndex: number = 0\n\tprivate currentTargetIndex: number = 0\n\tprivate currentDragClone?: HTMLElement\n\tprivate currentStartElement?: HTMLElement\n\tprivate startIndex: number = 0\n\t\n\tpublic getDragTarget(index: number, targetList: ArrayType, content: Vnode<any, any> = <div></div>): Vnode<any, any> {\n\t\tcontent.attrs[\"className\"] = `dragTarget ${content.attrs[\"className\"] ?? \"\"}`\n\t\tcontent.attrs[\"ondragend\"] = this.ondragend.bind(this)\n\t\tcontent.attrs[\"ondragenter\"] = this.ondragenter.bind(this, index, targetList)\n\t\treturn content\n\t}\n\t\n\tpublic getDragStarter(index: number, targetList: ArrayType): Vnode<any, any> {\n\t\treturn <div class=\"btn clickable dragStarter\" draggable=\"true\" ondragstart={this.ondragstart.bind(this, index, targetList)}>\n\t\t\t{m.trust(addSvg)}\n\t\t</div>\n\t}\n\t\n\t\n\tprivate getIndexInContainer(searchEl: HTMLElement): number {\n\t\tconst htmlCollection = this.contentVNode?.dom.getElementsByClassName(\"dragTarget\")\n\t\tif(htmlCollection) {\n\t\t\tfor(let i = htmlCollection.length - 1; i >= 0; --i) {\n\t\t\t\tif(htmlCollection[i] === searchEl)\n\t\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t\treturn -1\n\t}\n\t\n\tprivate addDragSpacer(locationEl: HTMLElement): void {\n\t\tlet insertBefore: Element | null = locationEl //when insertBefore is null, currentDragClone will be placed at the end\n\t\tif(!this.currentDragClone)\n\t\t\treturn\n\t\tif(this.currentDragClone.parentNode) {\n\t\t\tconst locationIndex = this.getIndexInContainer(locationEl)\n\t\t\tconst spacerIndex = this.getIndexInContainer(this.currentDragClone)\n\t\t\t\n\t\t\tif(spacerIndex < this.startIndex) { //mouse moved up (/right) from starting point\n\t\t\t\tif(spacerIndex < locationIndex) { //mouse is moving down (/left) again\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { //mouse moved down (/left) from starting point\n\t\t\t\t\n\t\t\t\t//we need to add one to targetIndex.\n\t\t\t\t// But when we are in the same list, removing the item (before moving it) means that targetIndex points to the element afterwards anyway.\n\t\t\t\t// But when we are in another list, we need to correct manually:\n\t\t\t\tif(this.currentStartList != this.currentTargetList)\n\t\t\t\t\t++this.currentTargetIndex\n\t\t\t\t\n\t\t\t\tif(spacerIndex > locationIndex) //mouse is moving up (/right) again\n\t\t\t\t\t--this.currentTargetIndex\n\t\t\t\telse\n\t\t\t\t\tinsertBefore = locationEl.nextElementSibling\n\t\t\t}\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t}\n\t\tlocationEl.parentNode?.insertBefore(this.currentDragClone, insertBefore)\n\t}\n\t\n\tprivate ondragstart(index: number, targetList: ArrayType, e: DragEvent): boolean {\n\t\tlet targetElement = e.currentTarget as HTMLElement\n\t\twhile(targetElement && !targetElement.classList.contains(\"dragTarget\")) {\n\t\t\ttargetElement = targetElement.parentNode as HTMLElement\n\t\t}\n\t\tconst dragRoot = this.contentVNode?.dom\n\t\tif(!dragRoot)\n\t\t\treturn false\n\t\t\n\t\t\n\t\tthis.startIndex = this.getIndexInContainer(targetElement)\n\t\t\n\t\tthis.currentStartList = targetList\n\t\tthis.currentStartIndex = index\n\t\t\n\t\tthis.currentDragClone = targetElement.cloneNode(true) as HTMLElement\n\t\tthis.currentDragClone?.classList.add(\"drag_spacer\")\n\t\t\n\t\tthis.currentDragClone?.addEventListener(\"dragover\", this.ondragover.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"dragleave\", this.ondragleave.bind(this))\n\t\tthis.currentDragClone?.addEventListener(\"drop\", this.ondrop.bind(this))\n\t\t\n\t\ttargetElement.classList.add(\"dragStarted\")\n\t\te.dataTransfer?.setDragImage(targetElement, 0, 0)\n\t\t\n\t\t\n\t\tthis.currentStartElement = targetElement\n\t\t\n\t\twindow.setTimeout( () => {\n\t\t\t//in firefox: setDragImage() seems to stop working when the class of document.body is changed\n\t\t\t//in chrome: DOM changes seem to cancel dragging altogether\n\t\t\t//solution: doing this stuff in a different \"thread\" seems to do the trick\n\t\t\tthis.addDragSpacer(targetElement)\n\t\t\tdragRoot.classList.add(\"is_dragging\")\n\t\t}, 0)\n\t\treturn true\n\t}\n\tprivate ondragend(e: DragEvent): void {\n\t\tthis.ondragleave(e)\n\t\te.preventDefault()\n\t\t\n\t\tthis.contentVNode?.dom.classList.remove(\"is_dragging\")\n\t\tthis.currentStartElement?.classList.remove(\"dragStarted\")\n\t\tif(this.currentDragClone?.parentNode)\n\t\t\tthis.currentDragClone.parentNode.removeChild(this.currentDragClone)\n\t\t\n\t\tthis.currentDragClone = undefined\n\t}\n\tprivate ondragenter(index: number, targetList: ArrayType, e: DragEvent): false {\n\t\tconst targetElement = e.currentTarget as HTMLElement\n\t\tif(!this.contentVNode?.dom.contains(targetElement))\n\t\t\treturn false\n\t\t\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"none\"\n\t\te.preventDefault()\n\t\t\n\t\tthis.currentTargetList = targetList\n\t\tthis.currentTargetIndex = index\n\t\t\n\t\tthis.addDragSpacer(targetElement)\n\t\treturn false\n\t}\n\t\n\tprivate ondragover(e: DragEvent): void {\n\t\te.preventDefault()\n\t\tif(e.dataTransfer)\n\t\t\te.dataTransfer.dropEffect = \"move\"\n\t}\n\tprivate ondragleave(e: DragEvent): void {\n\t\te.preventDefault()\n\t}\n\tprivate ondrop(e: DragEvent): void {\n\t\te.preventDefault()\n\t\t\n\t\tif(this.currentStartList == null || this.currentTargetList == null)\n\t\t\treturn\n\t\t\n\t\tif(this.currentTargetList == this.currentStartList)\n\t\t\tthis.currentTargetList.move(this.currentStartIndex, this.currentTargetIndex)\n\t\telse\n\t\t\tthis.currentTargetList.moveFromOtherList(this.currentStartList, this.currentStartIndex, this.currentTargetIndex)\n\t\t\n\t\tthis.currentStartList = this.currentTargetList = undefined\n\t\tthis.ondragend(e)\n\t}\n\t\n\tpublic onupdate(vNode: VnodeDOM<DragContainerImpOptions, any>): void {\n\t\tthis.contentVNode = vNode\n\t}\n\t\n\tpublic view(vNode: Vnode<DragContainerImpOptions, any>): Vnode<any, any> {\n\t\treturn vNode.attrs.content(this)\n\t}\n}\n\n\nexport function DragContainer(\n\tcontent: (container: DragTools) => Vnode<any, any>\n): Vnode<any, any> {\n\treturn m(DragContainerImp, { content: content })\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport androidSvg from \"../../imgs/devices/android.svg?raw\"\nimport iosSvg from \"../../imgs/devices/ios.svg?raw\"\nimport webSvg from \"../../imgs/devices/web.svg?raw\"\nimport {closeDropdown, openDropdown} from \"./DropdownMenu\";\n\n\nexport type PossibleDevices = \"Android\" | \"iOS\" | \"Web\"\n\nconst imageRecord: Record<PossibleDevices, string> = {\n\tAndroid: androidSvg,\n\tiOS: iosSvg,\n\tWeb: webSvg\n}\n\nfunction onPointerEnter(title: string, e: MouseEvent) {\n\topenDropdown(\"notCompatible\", e.target as HTMLElement,\n\t\t() => <div class=\"smallText center\">{title}</div>\n\t)\n}\nfunction onPointerLeave() {\n\tcloseDropdown(\"notCompatible\")\n}\n\nexport function NotCompatibleIcon(... devices: PossibleDevices[]): Vnode<any, any> {\n\tconst translationRecord: Record<PossibleDevices, string> = {\n\t\tAndroid: Lang.get(\"Android\"),\n\t\tiOS: Lang.get(\"iOS\"),\n\t\tWeb: Lang.get(\"web_questionnaire\")\n\t}\n\tconst title = Lang.get(\"not_compatible_with\", devices.map((device) => translationRecord[device]).join(\", \"))\n\treturn <div class=\"notCompatibleIcon\" onpointerenter={onPointerEnter.bind(null, title)} onpointerleave={onPointerLeave.bind(null)}>\n\t\t{devices.map((device) =>\n\t\t\t<div class=\"deviceIcon\">{m.trust(imageRecord[device])}</div>)}\n\t</div>\n\n}\n","import m, {Vnode} from \"mithril\"\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {DragContainer} from \"./DragContainer\";\nimport {BaseObservable} from \"../observable/BaseObservable\";\nimport {ArrayInterface} from \"../observable/interfaces/ArrayInterface\";\n\nexport interface TabContent {\n\ttitle: string | Vnode<any, any>\n\tdraggableList?: ArrayInterface<any, BaseObservable<any>>\n\thighlight?: boolean\n\tview: () => Vnode<any, any>\n}\n\nexport function TabBar(selectedIndex: ObservablePrimitive<number>, tabs: (TabContent | undefined | false)[], smallBar: boolean = false, addBtnCallback?: (e: MouseEvent) => void): Vnode<any, any> {\n\tif(!tabs.length)\n\t\treturn (<div></div>)\n\t\n\tif(selectedIndex.get() >= tabs.length)\n\t\tselectedIndex.set(0)\n\treturn (\n\t\tDragContainer((dragTools) => {\n\t\t\tconst selectedTab = tabs[selectedIndex.get()]\n\t\t\treturn <div>\n\t\t\t\t<div>\n\t\t\t\t\t<div class={smallBar ? \"tabBar smallBar\" : \"tabBar\"}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttabs.map((tab, index) => {\n\t\t\t\t\t\t\t\tif(!tab)\n\t\t\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t\t\tconst className = `tab ${(selectedIndex.get() == index) ? \"selected\" : \"\"} ${tab.highlight ? \"highlight\" : \"\"}`\n\t\t\t\t\t\t\t\tconst content = <div class={className} onclick={() => {selectedIndex.set(index)}}>\n\t\t\t\t\t\t\t\t\t<div class=\"left\">\n\t\t\t\t\t\t\t\t\t\t{tab.draggableList && dragTools.getDragStarter(index, tab.draggableList)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<span class=\"middle\">{tab.title}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\treturn tab.draggableList\n\t\t\t\t\t\t\t\t\t? dragTools.getDragTarget(index, tab.draggableList, content)\n\t\t\t\t\t\t\t\t\t: content\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{addBtnCallback &&\n\t\t\t\t\t\t\t<div class=\"tab addBtn\" onclick={addBtnCallback}>\n\t\t\t\t\t\t\t\t<span class=\"middle\">+</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"tabContent\">\n\t\t\t\t\t{selectedTab && selectedTab.view()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t})\n\t)\n}"],"names":["selectedIndex","qrSize","currentUrl","allUrls","preLoad","section","getStudyPromise","title","get","checkAccessKeyFormat","s","match","addAccessKey","study","accessKey","prompt","this","accessKeys","indexOf","push","removeAccessKey","index","published","remove","changeQrSize","e","parseInt","target","value","changeQrUrl","urlIndex","onPointerEnterUrl","url","class","onPointerLeaveUrl","getUrlViewAndCacheUrl","length","onpointerenter","bind","onpointerleave","type","name","checked","onchange","navigator","clipboard","writeText","getView","getStudyOrThrow","content","map","getPublishView","view","getWithColon","href","template","icon","window","URL","createObjectURL","Blob","JSON","stringify","createJson","urlList","getUrlListAndCacheUrls","qrCodeUrl","qr","addData","make","imgUrl","createDataURL","download","alt","src","infoTitle","questionnaires","appInstrTitle","id","questionnaire","getTitle","internalId","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticInt","getStaticString","getStudyOrNull","studies","studyLoader","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","getQuestionnaireOrThrow","getTools","getAdmin","hasPermission","studyId","isLoggedIn","getUrl","depth","getHash","goTo","location","hash","newSection","destroy","OptimusPrimeTransformer","toAttribute","toObs","OptimusPrimeNumberTransformer","onBeforeChange","obs","BooleanTransformer","DateTransformer","intValue","toString","Date","toISOString","split","getTime","TimeTransformer","midnight","parts","date","setHours","setMinutes","BindObservable","transformer","attr","event","attrValue","element","set","BtnCustom","onclick","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","DashElementView","options","classString","floatingRight","floating","small","highlight","disabled","noCompatibilityIcon","msg","innerLinkTitle","innerLinkHref","DashTemplateView","startsWith","showAsClickable","attrs","hasOwnProperty","getNewClassString","size","oldClassString","DashElement","option","DashRow","currentStartIndex","currentTargetIndex","startIndex","getDragTarget","targetList","ondragend","ondragenter","getDragStarter","draggable","ondragstart","getIndexInContainer","searchEl","htmlCollection","contentVNode","dom","getElementsByClassName","i","addDragSpacer","locationEl","insertBefore","currentDragClone","parentNode","locationIndex","spacerIndex","nextElementSibling","currentStartList","currentTargetList","removeChild","targetElement","currentTarget","classList","contains","dragRoot","cloneNode","add","addEventListener","ondragover","ondragleave","ondrop","dataTransfer","setDragImage","currentStartElement","setTimeout","preventDefault","undefined","dropEffect","move","moveFromOtherList","onupdate","vNode","DragContainer","DragContainerImp","imageRecord","Android","iOS","Web","onPointerEnter","onPointerLeave","NotCompatibleIcon","translationRecord","Lang","devices","device","join","TabBar","tabs","smallBar","addBtnCallback","dragTools","selectedTab","tab","className","draggableList"],"sourceRoot":""}