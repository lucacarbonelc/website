{"version":3,"file":"7975.bf6beafac7c2987fcd9d.js","mappings":"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","sources":["webpack://ESMira/./src/frontend/ts/pages/dataList.tsx","webpack://ESMira/./src/frontend/ts/site/SectionContent.tsx","webpack://ESMira/./src/frontend/ts/widgets/BtnWidgets.tsx","webpack://ESMira/./src/frontend/ts/widgets/TitleRow.tsx"],"sourcesContent":["import {SectionContent} from \"../site/SectionContent\";\nimport m, {Vnode} from \"mithril\";\nimport {Lang} from \"../singletons/Lang\";\nimport downloadSvg from \"../../imgs/icons/download.svg?raw\"\nimport questionnaireSvg from \"../../imgs/icons/questionnaire.svg?raw\"\nimport backupSvg from \"../../imgs/icons/backup.svg?raw\"\nimport {Section} from \"../site/Section\";\nimport {FILE_ADMIN, FILE_MEDIA, FILE_CREATE_MEDIA, FILE_RESPONSES} from \"../constants/urls\";\nimport {Study} from \"../data/study/Study\";\nimport {TitleRow} from \"../widgets/TitleRow\";\nimport {Requests} from \"../singletons/Requests\";\nimport {safeConfirm} from \"../constants/methods\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {BtnTrash} from \"../widgets/BtnWidgets\";\n\ninterface DataLineEntry {\n\ttitle: string\n\tfileName: string | number\n\tpreviewId?: number\n}\n\nexport class Content extends SectionContent {\n\tprivate is_generating_zip: boolean = false\n\tprivate readonly backupEntries: DataLineEntry[]\n\t\n\tpublic static preLoad(section: Section): Promise<any>[] {\n\t\treturn [\n\t\t\tsection.getStudyPromise(),\n\t\t\tRequests.loadJson(`${FILE_ADMIN}?type=ListData&study_id=${section.getStaticInt(\"id\") ?? 0}`),\n\t\t\tsection.getAdmin().init()\n\t\t]\n\t}\n\t\n\tconstructor(section: Section, study: Study, dataEntries: string[]) {\n\t\tsuper(section)\n\t\t\n\t\tconst questionnaires = study.questionnaires.get()\n\t\tconst questionnaireIndex: Record<number, Questionnaire> = {};\n\t\tfor(let i = questionnaires.length - 1; i >= 0; --i) {\n\t\t\tconst questionnaire = questionnaires[i]\n\t\t\tquestionnaireIndex[questionnaire.internalId.get()] = questionnaire\n\t\t}\n\t\t\n\t\tthis.backupEntries = dataEntries\n\t\t\t.filter((fileName) => !questionnaireIndex.hasOwnProperty(parseInt(fileName)))\n\t\t\t.map((fileName) => {\n\t\t\t\tconst [match, date, internalId] = fileName.match(/^(\\d{4}-\\d{2}-\\d{2})_(\\d+)$/) ?? []\n\t\t\t\tif(match != null) {\n\t\t\t\t\tif(questionnaireIndex.hasOwnProperty(parseInt(internalId)))\n\t\t\t\t\t\treturn {title: `${date} ${questionnaireIndex[parseInt(internalId)].getTitle()}`, fileName: fileName}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn {title: fileName, fileName: fileName}\n\t\t\t})\n\t}\n\t\n\tpublic title(): string {\n\t\treturn Lang.get(\"data_table\")\n\t}\n\t\n\tprivate async backupStudy(study: Study): Promise<any> {\n\t\tif(!confirm(Lang.get(\"confirm_backup\", study.title.get())))\n\t\t\treturn\n\t\t\n\t\tawait this.section.loader.loadJson(`${FILE_ADMIN}?type=BackupStudy`, \"post\", `study_id=${ study.id.get()}`)\n\t\tawait this.section.reload()\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tprivate async emptyData(study: Study): Promise<any> {\n\t\tif(!safeConfirm(Lang.get(\"confirm_delete_data\", study.title.get())))\n\t\t\treturn;\n\t\t\n\t\tawait this.section.loader.loadJson(`${FILE_ADMIN}?type=EmptyData`, \"post\", `study_id=${study.id.get()}`)\n\t\tawait this.section.reload()\n\t\t\n\t\tthis.section.loader.info(Lang.get(\"info_successful\"))\n\t}\n\t\n\tpublic getView(): Vnode<any, any> {\n\t\tconst study = this.getStudyOrThrow()\n\t\treturn study.version.get() == 0\n\t\t\t? <div></div>\n\t\t\t: <div>\n\t\t\t\t{this.getDataLineView(\n\t\t\t\t\t\"general\",\n\t\t\t\t\tstudy,\n\t\t\t\t\t[\n\t\t\t\t\t\t{title: Lang.get(\"events_csv_title\"), fileName: \"events\"},\n\t\t\t\t\t\t{title: Lang.get(\"web_access_csv_title\"), fileName: \"web_access\"}\n\t\t\t\t\t]\n\t\t\t\t)}\n\n\t\t\t\t{TitleRow(Lang.getWithColon(\"questionnaires\"))}\n\t\t\t\t{this.getDataLineView(\n\t\t\t\t\t\"questionnaire\",\n\t\t\t\t\tstudy,\n\t\t\t\t\tstudy.questionnaires.get().map((questionnaire) => {\n\t\t\t\t\t\treturn {title: questionnaire.getTitle(), fileName: questionnaire.internalId.get(), previewId: questionnaire.internalId.get()}\n\t\t\t\t\t})\n\t\t\t\t)}\n\n\t\t\t\t{study.hasMedia() &&\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{TitleRow(Lang.getWithColon(\"media_download\"))}\n\t\t\t\t\t\t<a class=\"spacingRight\" onclick={this.waitForDownload.bind(this, study)}>\n\t\t\t\t\t\t\t{m.trust(downloadSvg)}\n\t\t\t\t\t\t\t<span id=\"mediaZipSpan\" class=\"spacingLeft\">media.zip</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t\t{TitleRow(Lang.getWithColon(\"backups\"))}\n\t\t\t\t<div class=\"verticalPadding\">\n\t\t\t\t\t<a class=\"horizontal spacingRight\" onclick={this.backupStudy.bind(this, study)}>\n\t\t\t\t\t\t{m.trust(backupSvg)}\n\t\t\t\t\t\t<span>{Lang.get(\"create_backup\")}</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<br/>\n\t\t\t\t{this.getDataLineView(\n\t\t\t\t\t\"backup\",\n\t\t\t\t\tstudy,\n\t\t\t\t\tthis.backupEntries\n\t\t\t\t)}\n\n\t\t\t\t<br/>\n\t\t\t\t{this.hasPermission(\"write\", study.id.get()) &&\n\t\t\t\t\t<div class=\"verticalPadding highlight\">\n\t\t\t\t\t\t{BtnTrash(this.emptyData.bind(this, study), Lang.get(\"empty_data\"))}\n\t\t\t\t\t</div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t}\n\n\tprivate getDataLineView(sectionValue: string, study: Study, list: DataLineEntry[]): Vnode<any, any>[] {\n\t\treturn list.map((entry) =>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<a class=\"spacingRight\" href={FILE_RESPONSES.replace('%1', study.id.get().toString()).replace('%2', entry.fileName.toString())} download={entry.title} title={Lang.get(\"download\")}>\n\t\t\t\t\t\t{m.trust(downloadSvg)}\n\t\t\t\t\t</a>\n\t\t\t\t\t{entry.previewId &&\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<a class=\"spacingRight\" href={this.getUrl(`demo:static,qId:${entry.previewId}`)}>\n\t\t\t\t\t\t\t\t{m.trust(questionnaireSvg)}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t}\n\n\t\t\t\t\t<a href={this.getUrl(`dataView:${sectionValue},${typeof entry.fileName == \"number\" ? \"qId\" : \"file\"}:${entry.fileName}`)}>{entry.title}</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tprivate waitForDownload(study: Study) {\n\t\tif (this.is_generating_zip) {\n\t\t\treturn\n\t\t}\n\t\tthis.is_generating_zip = true\n\t\tconst eventSource = new EventSource(`${FILE_CREATE_MEDIA.replace(\"%1\", study.id.get().toString())}`)\n\t\tconst mediaZipSpan = document.getElementById(\"mediaZipSpan\")\n\n\t\teventSource.addEventListener('progress', e => {\n\t\t\tif(mediaZipSpan != undefined)\n\t\t\t\tmediaZipSpan.innerText = \"media.zip (%1 ... %2\\%)\".replace(\"%1\", Lang.get(\"generating\")).replace(\"%2\", e.data)\n\t\t})\n\t\teventSource.addEventListener('finished', e => {\n\t\t\tthis.is_generating_zip = false\n\t\t\teventSource.close()\n\n\t\t\tif(mediaZipSpan != undefined)\n\t\t\t\tmediaZipSpan.innerText = \"media.zip\"\n\t\t\tlet element = document.createElement('a')\n\t\t\telement.setAttribute('href', `${FILE_MEDIA.replace(\"%1\", study.id.get().toString())}`)\n\t\t\telement.setAttribute('download', 'media.zip')\n\t\t\tdocument.body.appendChild(element);\n\t\t\telement.click();\n\t\t\tdocument.body.removeChild(element);\n\t\t})\n\t}\n}","import m, {Vnode} from \"mithril\";\nimport {Section} from \"./Section\";\nimport {Study} from \"../data/study/Study\";\nimport {StaticValues} from \"./StaticValues\";\nimport {ObservablePrimitive} from \"../observable/ObservablePrimitive\";\nimport {Questionnaire} from \"../data/study/Questionnaire\";\nimport {DynamicValues} from \"./DynamicValues\";\nimport {PrimitiveType} from \"../observable/types/PrimitiveType\";\nimport {AccountPermissions} from \"../admin/AccountPermissions\";\nimport {AdminToolsInterface} from \"../admin/AdminToolsInterface\";\nimport {Admin} from \"../admin/Admin\";\n\nexport interface SectionAlternative {\n\ttitle: string\n\ttarget: string | false\n\theader?: boolean\n}\n\n/**\n * The dynamic content class of each section. Each section extends this class. SectionContent is a child of {@link Section} which takes care of loading and\n * displaying SectionContent.\n * Important: Changes to Observables in data.dataTypes will lead to {@link m.redraw()} (see {@link StudyLoader.constructor()}).\n * BUT, changes to the dom will happen asynchronously. In other words: The philosophy is, that {@link getView()} always works with fresh (not cached) data\n * and always constructs the full section (instead of just updating it). Mithril will take care of keeping track of changes and updates the dom when necessary.\n *\n * Method calls are guaranteed to be in this order:\n * 1. {@link preLoad()}\n * 2. {@link preInit()}\n * 3. {@link title()}, {@link titleExtra()}, {@link getView()}\n * Have a look at the implementation in {@link Section.load()} for more information\n */\nexport abstract class SectionContent {\n\tpublic readonly section: Section\n\t\n\tconstructor(section: Section) {\n\t\tthis.section = section\n\t}\n\t\n\t/**\n\t * Is always called before anything else.\n\t * @returns Promise array. The section will be in loading state and not other methods will be called as long as these Promises are loading\n\t */\n\tpublic static preLoad(_section: Section): Promise<any>[] {\n\t\treturn []\n\t}\n\t\n\t/**\n\t * Is guaranteed to run AFTER all promises in {@link preLoad()} are finished\n\t * @param _responses Holds the return values of each Promise from {@link preLoad()}\n\t */\n\tpublic preInit(... _responses: any): Promise<any> {\n\t\treturn Promise.resolve()\n\t}\n\tpublic hasAlternatives(): boolean {\n\t\treturn false\n\t}\n\tpublic getAlternatives(): SectionAlternative[] | Promise<SectionAlternative[]> | null {\n\t\treturn null\n\t}\n\t\n\tpublic abstract title(): string\n\t\n\tpublic titleExtra(): Vnode<any, any> | null {\n\t\treturn null\n\t}\n\t\n\t\n\tpublic getDynamic<T extends PrimitiveType>(key: keyof DynamicValues, defaultValue: T): ObservablePrimitive<T> {\n\t\treturn this.section.getDynamic(key, defaultValue)\n\t}\n\tpublic setDynamic<T extends PrimitiveType>(key: keyof DynamicValues, newValue: T) {\n\t\tthis.section.siteData.dynamicValues.setChild(key, newValue)\n\t}\n\tpublic getStaticInt<T extends StaticValues>(key: T): number | null {\n\t\treturn this.section.getStaticInt(key)\n\t}\n\tpublic getStaticString<T extends StaticValues>(key: T): string | null {\n\t\treturn this.section.getStaticString(key)\n\t}\n\tprotected getStudyOrNull(id: number = this.getStaticInt(\"id\") ?? -1): Study | null {\n\t\tconst studies = this.section.siteData.studyLoader.getStudies()\n\t\tif(id == -1)\n\t\t\treturn studies.getCount() == 1 ? (studies.getFirst() || null) : null\n\t\t\n\t\treturn studies.getEntry(id) ?? null\n\t}\n\tpublic getStudyOrThrow(id: number = this.getStaticInt(\"id\") ?? -1): Study {\n\t\tconst study = this.getStudyOrNull(id)\n\t\tif(!study)\n\t\t\tthrow new Error(`Study ${id} does not exist!`)\n\t\treturn study\n\t}\n\tprotected getQuestionnaireOrNull(qId: number = this.getStaticInt(\"qId\") ?? -1, study: Study | null = this.getStudyOrNull()): Questionnaire | null {\n\t\tif(!study)\n\t\t\treturn null\n\t\tconst questionnaires = this.getStudyOrThrow().questionnaires.get()\n\t\tfor(const questionnaire of questionnaires) {\n\t\t\tif(questionnaire.internalId.get() == qId)\n\t\t\t\treturn questionnaire\n\t\t}\n\t\treturn null\n\t}\n\tprotected getQuestionnaireOrThrow(qId: number = this.getStaticInt(\"qId\") ?? -1): Questionnaire {\n\t\tconst questionnaire = this.getQuestionnaireOrNull(qId, this.getStudyOrThrow())\n\t\tif(!questionnaire)\n\t\t\tthrow new Error(`Questionnaire ${qId} does not exist!`)\n\t\telse\n\t\t\treturn questionnaire\n\t}\n\t\n\tpublic getTools(): AdminToolsInterface {\n\t\treturn this.section.getTools()\n\t}\n\tpublic getAdmin(): Admin {\n\t\treturn this.section.getAdmin()\n\t}\n\t\n\tpublic hasPermission(name: keyof AccountPermissions, studyId: number): boolean {\n\t\treturn this.getAdmin().isLoggedIn() && (this.getTools().hasPermission(name, studyId) ?? false)\n\t}\n\t\n\tpublic getUrl(name: string, depth: number = this.section.depth): string {\n\t\treturn `${this.section.getHash(depth)}/${name}`\n\t}\n\tpublic goTo(target: string): void {\n\t\twindow.location.hash = \"#\"+target;\n\t}\n\tpublic newSection(target: string, depth: number = this.section.depth): void {\n\t\twindow.location.hash = depth == -1 ? target : `${this.section.getHash(depth)}/${target}`\n\t}\n\t\n\t\n\t/**\n\t * Remember: Values or references of observables should NOT be cached (also when the value is an observable itself)\n\t * It would lead to new values not being updated properly on {@link m.redraw()}\n\t *\n\t * Examples:\n\t * You can cache: {@link StudyLoader.studyCache}. Because this observable is readonly and will never be replaced\n\t * You can NOT cache {@link StudyLoader.studyCache.get()} or {@link getStudyOrThrow()} or {@link getStudy().questionnaires.get()[2]}.\n\t * \t\tBecause all study entries in StudyLoader might have been replaced or removed between {@link m.redraw()}\n\t *\n\t * You can cache: {@link SiteData.dynamicValues[\"accessKey\"]} because {@link Container} uses Singletons (see {@link Container.getOrCreateObs()})\n\t * You can not cache: {@link SiteData.dynamicValues[\"accessKey\"].get()} because its value might change\n\t *\n\t * In conclusion: {@link getView()} always needs to work with fresh values. Starting, for example, with {@link getStudyOrThrow()}\n\t */\n\tpublic abstract getView(): Vnode<any, any>\n\t\n\tpublic destroy(): void {\n\t\t//do nothing\n\t}\n}","import m, {Vnode} from \"mithril\"\nimport {Lang} from \"../singletons/Lang\";\nimport addSvg from \"../../imgs/icons/addCircle.svg?raw\";\nimport changeSvg from \"../../imgs/icons/change.svg?raw\";\nimport copySvg from \"../../imgs/icons/copy.svg?raw\";\nimport editSvg from \"../../imgs/icons/edit.svg?raw\";\nimport okSvg from \"../../imgs/icons/ok.svg?raw\";\nimport reloadSvg from \"../../imgs/icons/reload.svg?raw\";\nimport removeSvg from \"../../imgs/icons/remove.svg?raw\";\nimport transferSvg from \"../../imgs/icons/transfer.svg?raw\";\nimport trashSvg from \"../../imgs/icons/trash.svg?raw\";\n\nexport function BtnCustom(\n\ticon: Vnode<any, any>,\n\tonclick?: (e: MouseEvent) => void,\n\ttitle: string = \"\",\n\thoverTitle: string = \"\"\n): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn clickable\" onclick={onclick} title={title || hoverTitle}>\n\t\t\t{icon}\n\t\t\t<span class=\"middle smallText\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnRemove(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(removeSvg)}\n\t\t\t<span class=\"smallText highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\nexport function BtnTrash(onclick: () => void, title: string = \"\",): Vnode<any, any> {\n\treturn (\n\t\t<div class=\"btn btnDelete clickable\" onclick={onclick} title={title || Lang.get(\"delete\")}>\n\t\t\t{m.trust(trashSvg)}\n\t\t\t<span class=\"highlight middle\">{title}</span>\n\t\t</div>\n\t)\n}\n\n\nexport function BtnAdd(onclick?: (e: MouseEvent) => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(addSvg), onclick, title, Lang.get(\"add\"))\n}\n\nexport function BtnCopy(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(copySvg), onclick, title, Lang.get(\"copy\"))\n}\n\nexport function BtnEdit(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(editSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnChange(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(changeSvg), onclick, title, Lang.get(\"change\"))\n}\n\nexport function BtnOk(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(okSvg), onclick, title, Lang.get(\"save\"))\n}\n\nexport function BtnReload(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(reloadSvg), onclick, title, Lang.get(\"reload\"))\n}\n\nexport function BtnTransfer(onclick?: () => void, title: string = \"\"): Vnode<any, any> {\n\treturn BtnCustom(m.trust(transferSvg), onclick, title, Lang.get(\"transfer\"))\n\t\n}\n","import m, {Vnode} from \"mithril\"\nexport function TitleRow(\n\ttitle: string | Vnode<any, any>\n): Vnode<any, any> {\n\tif(typeof title == \"string\") {\n\t\treturn <div class=\"titleRow\">\n\t\t\t<span class=\"title\">{title}</span>\n\t\t</div>\n\t}\n\telse {\n\t\ttitle.attrs[\"className\"] = `titleRow ${title.attrs[\"className\"] ?? \"\"}`\n\t\treturn title\n\t}\n}"],"names":["section","study","dataEntries","is_generating_zip","questionnaires","get","questionnaireIndex","i","length","questionnaire","internalId","backupEntries","filter","fileName","hasOwnProperty","parseInt","map","match","date","title","getTitle","preLoad","getStudyPromise","Requests","loadJson","getStaticInt","getAdmin","init","Lang","backupStudy","confirm","this","loader","id","reload","info","emptyData","getView","getStudyOrThrow","version","getDataLineView","TitleRow","getWithColon","previewId","hasMedia","class","onclick","waitForDownload","bind","hasPermission","sectionValue","list","entry","href","replace","toString","download","getUrl","eventSource","EventSource","mediaZipSpan","document","getElementById","addEventListener","e","undefined","innerText","data","close","element","createElement","setAttribute","body","appendChild","click","removeChild","SectionContent","_section","preInit","Promise","resolve","hasAlternatives","getAlternatives","titleExtra","getDynamic","key","defaultValue","setDynamic","newValue","siteData","dynamicValues","setChild","getStaticString","getStudyOrNull","studies","studyLoader","getStudies","getCount","getFirst","getEntry","Error","getQuestionnaireOrNull","qId","getQuestionnaireOrThrow","getTools","name","studyId","isLoggedIn","depth","getHash","goTo","target","window","location","hash","newSection","destroy","BtnCustom","icon","hoverTitle","BtnRemove","BtnTrash","BtnAdd","BtnCopy","BtnEdit","BtnOk","BtnReload","BtnTransfer","attrs"],"sourceRoot":""}